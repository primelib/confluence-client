openapi: 3.0.1
info:
  title: "Confluence REST Client"
  description: "Unofficial API client generated from the Confluence OpenAPI specification."
  termsOfService: "https://atlassian.com/terms/"
  version: "1.0.0"
  license:
    name: MIT
    url: https://github.com/primelib/confluence-client/blob/main/LICENSE
servers:
  - url: "https://{your-domain}/wiki/api/v2"
paths:
  "/wiki/rest/api/audit":
    get:
      tags:
        - "Audit"
      summary: "Get audit records"
      description: "Returns all records in the audit log, optionally for a certain date range.\nThis contains information about events like space exports, group membership\nchanges, app installations, etc. For more information, see\n[Audit log](https://confluence.atlassian.com/confcloud/audit-log-802164269.html)\nin the Confluence administrator's guide.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n'Confluence Administrator' global permission."
      operationId: "getAuditV1"
      parameters:
        - name: "startDate"
          in: "query"
          description: "Filters the results to the records on or after the `startDate`.\nThe `startDate` must be specified as [epoch time](https://www.epochconverter.com/) in milliseconds."
          schema:
            type: "string"
        - name: "endDate"
          in: "query"
          description: "Filters the results to the records on or before the `endDate`.\nThe `endDate` must be specified as [epoch time](https://www.epochconverter.com/) in milliseconds."
          schema:
            type: "string"
        - name: "searchString"
          in: "query"
          description: "Filters the results to records that have string property values\nmatching the `searchString`."
          schema:
            type: "string"
        - name: "start"
          in: "query"
          description: "The starting index of the returned records."
          schema:
            type: "integer"
            minimum: 0
            format: "int32"
            default: 0
        - name: "limit"
          in: "query"
          description: "The maximum number of records to return per page.\nNote, this may be restricted by fixed system limits."
          schema:
            type: "integer"
            minimum: 0
            format: "int32"
            default: 1000
      responses:
        "200":
          description: "Returned if the requested records are returned."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/AuditRecordArray"}
        "401":
          description: "Returned if the authentication credentials are incorrect or missing\nfrom the request."
        "403":
          description: "Returned if the calling user does not have permission to view the audit\nlog."
      security:
        - basicAuth: []
        - oAuthDefinitions:
            - read:audit-log:confluence
      x-atlassian-oauth2-scopes: [{"scheme": "oAuthDefinitions", "state": "Current", "scopes": ["read:audit-log:confluence"]}]
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": true}]
      x-atlassian-connect-scope: "INACCESSIBLE"
    post:
      tags:
        - "Audit"
      summary: "Create audit record"
      description: "Creates a record in the audit log.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n'Confluence Administrator' global permission."
      operationId: "postAuditV1"
      requestBody:
        description: "The record to be created in the audit log."
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/AuditRecordCreate"}
        required: true
      responses:
        "200":
          description: "Returned if the record is created in the audit log."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/AuditRecord"}
        "400":
          description: "Returned if the `remoteAddress` property is not specified."
        "401":
          description: "Returned if the authentication credentials are incorrect or missing\nfrom the request."
      security:
        - basicAuth: []
        - oAuthDefinitions:
            - read:audit-log:confluence
            - write:audit-log:confluence
      x-atlassian-oauth2-scopes: [{"scheme": "oAuthDefinitions", "state": "Current", "scopes": ["read:audit-log:confluence", "write:audit-log:confluence"]}]
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": true}]
      x-codegen-request-body-name: "body"
      x-atlassian-connect-scope: "INACCESSIBLE"
  "/wiki/rest/api/audit/export":
    get:
      tags:
        - "Audit"
      summary: "Export audit records"
      description: "Exports audit records as a CSV file or ZIP file.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n'Confluence Administrator' global permission."
      operationId: "getAuditExportV1"
      parameters:
        - name: "startDate"
          in: "query"
          description: "Filters the exported results to the records on or after the `startDate`.\nThe `startDate` must be specified as [epoch time](https://www.epochconverter.com/) in milliseconds."
          schema:
            type: "string"
        - name: "endDate"
          in: "query"
          description: "Filters the exported results to the records on or before the `endDate`.\nThe `endDate` must be specified as [epoch time](https://www.epochconverter.com/) in milliseconds."
          schema:
            type: "string"
        - name: "searchString"
          in: "query"
          description: "Filters the exported results to records that have string property values\nmatching the `searchString`."
          schema:
            type: "string"
        - name: "format"
          in: "query"
          description: "The format of the export file for the audit records."
          schema:
            type: "string"
            enum:
              - "csv"
              - "zip"
            default: "csv"
      responses:
        "200":
          description: "Returned if the requested export of the audit records is returned."
          content:
            "application/zip":
              schema:
                $ref: '#/components/schemas/ExportAuditRecordsR200'
            "text/csv":
              schema:
                $ref: '#/components/schemas/ExportAuditRecordsR200'
        "403":
          description: "Returned if the calling user does not have permission to view the audit\nlog."
      security:
        - basicAuth: []
        - oAuthDefinitions:
            - read:audit-log:confluence
      x-atlassian-oauth2-scopes: [{"scheme": "oAuthDefinitions", "state": "Current", "scopes": ["read:audit-log:confluence"]}]
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": true}]
      x-atlassian-connect-scope: "INACCESSIBLE"
  "/wiki/rest/api/audit/retention":
    get:
      tags:
        - "Audit"
      summary: "Get retention period"
      description: "Returns the retention period for records in the audit log. The retention\nperiod is how long an audit record is kept for, from creation date until\nit is deleted.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n'Confluence Administrator' global permission."
      operationId: "getAuditRetentionV1"
      responses:
        "200":
          description: "Returned if the requested retention period is returned."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/RetentionPeriod"}
        "403":
          description: "Returned if the calling user does not have permission to view the audit\nlog."
      security:
        - basicAuth: []
        - oAuthDefinitions:
            - read:audit-log:confluence
      x-atlassian-oauth2-scopes: [{"scheme": "oAuthDefinitions", "state": "Current", "scopes": ["read:audit-log:confluence"]}]
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": true}]
      x-atlassian-connect-scope: "INACCESSIBLE"
    put:
      tags:
        - "Audit"
      summary: "Set retention period"
      description: "Sets the retention period for records in the audit log. The retention period\ncan be set to a maximum of 1 year.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n'Confluence Administrator' global permission."
      operationId: "putAuditRetentionV1"
      requestBody:
        description: "The updated retention period."
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/RetentionPeriod"}
        required: true
      responses:
        "200":
          description: "Returned if the retention period is updated."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/RetentionPeriod"}
        "403":
          description: "Returned if the calling user does not have permission to view the audit\nlog."
      security:
        - basicAuth: []
        - oAuthDefinitions:
            - write:audit-log:confluence
      x-atlassian-oauth2-scopes: [{"scheme": "oAuthDefinitions", "state": "Current", "scopes": ["write:audit-log:confluence"]}]
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": true}]
      x-codegen-request-body-name: "body"
      x-atlassian-connect-scope: "INACCESSIBLE"
  "/wiki/rest/api/audit/since":
    get:
      tags:
        - "Audit"
      summary: "Get audit records for time period"
      description: "Returns records from the audit log, for a time period back from the current\ndate. For example, you can use this method to get the last 3 months of records.\n\nThis contains information about events like space exports, group membership\nchanges, app installations, etc. For more information, see\n[Audit log](https://confluence.atlassian.com/confcloud/audit-log-802164269.html)\nin the Confluence administrator's guide.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n'Confluence Administrator' global permission."
      operationId: "getAuditSinceV1"
      parameters:
        - name: "number"
          in: "query"
          description: "The number of units for the time period."
          schema:
            type: "integer"
            format: "int64"
            default: 3
        - name: "units"
          in: "query"
          description: "The unit of time that the time period is measured in."
          schema:
            type: "string"
            enum:
              - "NANOS"
              - "MICROS"
              - "MILLIS"
              - "SECONDS"
              - "MINUTES"
              - "HOURS"
              - "HALF_DAYS"
              - "DAYS"
              - "WEEKS"
              - "MONTHS"
              - "YEARS"
              - "DECADES"
              - "CENTURIES"
            default: "MONTHS"
        - name: "searchString"
          in: "query"
          description: "Filters the results to records that have string property values\nmatching the `searchString`."
          schema:
            type: "string"
        - name: "start"
          in: "query"
          description: "The starting index of the returned records."
          schema:
            type: "integer"
            minimum: 0
            format: "int32"
            default: 0
        - name: "limit"
          in: "query"
          description: "The maximum number of records to return per page.\nNote, this may be restricted by fixed system limits."
          schema:
            type: "integer"
            minimum: 0
            format: "int32"
            default: 1000
      responses:
        "200":
          description: "Returned if the requested records are returned."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/AuditRecordArray"}
        "403":
          description: "Returned if the calling user does not have permission to view the audit\nlog."
      security:
        - basicAuth: []
        - oAuthDefinitions:
            - read:audit-log:confluence
      x-atlassian-oauth2-scopes: [{"scheme": "oAuthDefinitions", "state": "Current", "scopes": ["read:audit-log:confluence"]}]
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": true}]
      x-atlassian-connect-scope: "INACCESSIBLE"
  "/wiki/rest/api/content/archive":
    post:
      tags:
        - "Content"
      summary: "Archive pages"
      description: "Archives a list of pages. The pages to be archived are specified as a list of content IDs.\nThis API accepts the archival request and returns a task ID.\nThe archival process happens asynchronously.\nUse the /longtask/<taskId> REST API to get the copy task status.\n\nEach content ID needs to resolve to page objects that are not already in an archived state.\nThe content IDs need not belong to the same space.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n'Archive' permission for each of the pages in the corresponding space it belongs to."
      operationId: "postContentArchiveV1"
      requestBody:
        description: "The pages to be archived."
        content:
          "application/json":
            schema:
              $ref: '#/components/schemas/ArchivePagesB'
      responses:
        "202":
          description: "Returned if the archive request has been submitted."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/LongTask"}
        "400":
          description: "Returned if:\n- there is an archival job already running for the tenant.\n- the number of pages to archive is larger than the limit of 300.\n- any of the content IDs specified in the array do not resolve to pages.\n- any of the specified pages are already archived.\n- the request is coming from a free edition tenant.\n- the request is coming from a non premium edition tenant with more than 1 page ID\n  in the archive request."
        "401":
          description: "Returned if the authentication credentials are incorrect or missing\nfrom the request."
      security:
        - basicAuth: []
        - oAuthDefinitions:
            - write:confluence-content
      x-atlassian-oauth2-scopes: [{"scheme": "oAuthDefinitions", "state": "Current", "scopes": ["write:confluence-content"]}, {"scheme": "oAuthDefinitions", "state": "Beta", "scopes": ["read:content.metadata:confluence", "write:page:confluence"]}]
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": false}]
      x-experimental: true
      x-atlassian-connect-scope: "WRITE"
  "/wiki/rest/api/content/blueprint/instance/{draftId}":
    put:
      tags:
        - "Content"
      summary: "Publish shared draft"
      description: "Publishes a shared draft of a page created from a blueprint.\n\nBy default, the following objects are expanded: `body.storage`, `history`, `space`, `version`, `ancestors`.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the draft and 'Add' permission for the space that\nthe content will be created in."
      operationId: "putContentBlueprintInstanceByDraftIdV1"
      parameters:
        - name: "draftId"
          in: "path"
          description: "The ID of the draft page that was created from a blueprint.\nYou can find the `draftId` in the Confluence application by\nopening the draft page and checking the page URL."
          required: true
          schema:
            type: "string"
        - name: "status"
          in: "query"
          description: "The status of the content to be updated, i.e. the draft. This is set\nto 'draft' by default, so you shouldn't need to specify it."
          schema:
            type: "string"
            default: "draft"
        - {"$ref": "#/components/parameters/contentExpand"}
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/ContentBlueprintDraft"}
        required: true
      responses:
        "200":
          description: "Returned if the draft was successfully published."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/Content"}
        "400":
          description: "Returned if a title is not specified or a page with the\ntitle already exists."
        "409":
          description: "Returned if the version is not set to 1."
      security:
        - basicAuth: []
        - oAuthDefinitions:
            - write:confluence-content
      x-atlassian-oauth2-scopes: [{"scheme": "oAuthDefinitions", "state": "Current", "scopes": ["write:confluence-content"]}, {"scheme": "oAuthDefinitions", "state": "Beta", "scopes": ["read:content-details:confluence", "write:content:confluence"]}]
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": false}]
      x-codegen-request-body-name: "body"
      x-atlassian-connect-scope: "WRITE"
    post:
      tags:
        - "Content"
      summary: "Publish legacy draft"
      description: "Publishes a legacy draft of a page created from a blueprint. Legacy drafts\nwill eventually be removed in favor of shared drafts. For now, this method\nworks the same as [Publish shared draft](#api-content-blueprint-instance-draftId-put).\n\nBy default, the following objects are expanded: `body.storage`, `history`, `space`, `version`, `ancestors`.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the draft and 'Add' permission for the space that\nthe content will be created in."
      operationId: "postContentBlueprintInstanceByDraftIdV1"
      parameters:
        - name: "draftId"
          in: "path"
          description: "The ID of the draft page that was created from a blueprint.\nYou can find the `draftId` in the Confluence application by\nopening the draft page and checking the page URL."
          required: true
          schema:
            type: "string"
        - name: "status"
          in: "query"
          description: "The status of the content to be updated, i.e. the draft. This is set\nto 'draft' by default, so you shouldn't need to specify it."
          schema:
            type: "string"
            default: "draft"
        - {"$ref": "#/components/parameters/contentExpand"}
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/ContentBlueprintDraft"}
        required: true
      responses:
        "200":
          description: "Returned if the draft was successfully published."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/Content"}
        "400":
          description: "Returned if a title is not specified or a page with the\ntitle already exists."
        "409":
          description: "Returned if the version is not set to 1."
      security:
        - basicAuth: []
        - oAuthDefinitions:
            - write:confluence-content
      x-atlassian-oauth2-scopes: [{"scheme": "oAuthDefinitions", "state": "Current", "scopes": ["write:confluence-content"]}, {"scheme": "oAuthDefinitions", "state": "Beta", "scopes": ["read:content-details:confluence", "write:content:confluence"]}]
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": false}]
      x-codegen-request-body-name: "body"
      x-atlassian-connect-scope: "WRITE"
  "/wiki/rest/api/content/search":
    get:
      tags:
        - "Content"
      summary: "Search content by CQL"
      description: "Returns the list of content that matches a Confluence Query Language\n(CQL) query. For information on CQL, see:\n[Advanced searching using CQL](https://developer.atlassian.com/cloud/confluence/advanced-searching-using-cql/).\n\nExample initial call:\n```\n/wiki/rest/api/content/search?cql=type=page&limit=25\n```\n\nExample response:\n```\n{\n  \"results\": [\n    { ... },\n    { ... },\n    ...\n    { ... }\n  ],\n  \"limit\": 25,\n  \"size\": 25,\n  ...\n  \"_links\": {\n    \"base\": \"<url>\",\n    \"context\": \"<url>\",\n    \"next\": \"/rest/api/content/search?cql=type=page&limit=25&cursor=raNDoMsTRiNg\",\n    \"self\": \"<url>\"\n  }\n}\n```\n\nWhen additional results are available, returns `next` and `prev` URLs to retrieve them in subsequent calls. The URLs each contain a cursor that points to the appropriate set of results. Use `limit` to specify the number of results returned in each call.\nExample subsequent call (taken from example response):\n```\n/wiki/rest/api/content/search?cql=type=page&limit=25&cursor=raNDoMsTRiNg\n```\nThe response to this will have a `prev` URL similar to the `next` in the example response.\n\nIf the expand query parameter is used with the `body.export_view` and/or `body.styled_view` properties, then the query limit parameter will be restricted to a maximum value of 25.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to access the Confluence site ('Can use' global permission).\nOnly content that the user has permission to view will be returned."
      operationId: "getContentSearchV1"
      parameters:
        - name: "cql"
          in: "query"
          description: "The CQL string that is used to find the requested content."
          required: true
          schema:
            type: "string"
        - name: "cqlcontext"
          in: "query"
          description: "The space, content, and content status to execute the search against.\nSpecify this as an object with the following properties:\n\n- `spaceKey` Key of the space to search against. Optional.\n- `contentId` ID of the content to search against. Optional. Must\nbe in the space spacified by `spaceKey`.\n- `contentStatuses` Content statuses to search against. Optional."
          schema:
            type: "string"
        - {"$ref": "#/components/parameters/contentExpand"}
        - name: "cursor"
          in: "query"
          description: "Pointer to a set of search results, returned as part of the `next` or `prev` URL from the previous search call."
          schema:
            type: "string"
        - name: "limit"
          in: "query"
          description: "The maximum number of content objects to return per page.\nNote, this may be restricted by fixed system limits."
          schema:
            type: "integer"
            minimum: 0
            format: "int32"
            default: 25
      responses:
        "200":
          description: "Returned if the requested list of content is returned."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ContentArray"}
        "400":
          description: "Returned if the CQL is invalid or missing."
        "401":
          description: "Returned if the authentication credentials are incorrect or missing\nfrom the request."
      security:
        - basicAuth: []
        - oAuthDefinitions:
            - search:confluence
      x-atlassian-oauth2-scopes: [{"scheme": "oAuthDefinitions", "state": "Current", "scopes": ["search:confluence"]}, {"scheme": "oAuthDefinitions", "state": "Beta", "scopes": ["read:content-details:confluence"]}]
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": false}]
      x-atlassian-connect-scope: "READ"
  "/wiki/rest/api/content/{id}/pageTree":
    delete:
      tags:
        - "Experimental"
      summary: "Delete page tree"
      description: "Moves a pagetree rooted at a page to the space's trash:\n\n- If the content's type is `page` and its status is `current`, it will be trashed including\nall its descendants.\n- For every other combination of content type and status, this API is not supported.\n\nThis API accepts the pageTree delete request and returns a task ID.\nThe delete process happens asynchronously.\n\n Response example:\n <pre><code>\n {\n      \"id\" : \"1180606\",\n      \"links\" : {\n           \"status\" : \"/rest/api/longtask/1180606\"\n      }\n }\n </code></pre>\n Use the `/longtask/<taskId>` REST API to get the copy task status.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n'Delete' permission for the space that the content is in."
      operationId: "deleteContentByIdPageTreeV1"
      parameters:
        - name: "id"
          in: "path"
          description: "The ID of the content which forms root of the page tree, to be deleted."
          required: true
          schema:
            type: "string"
      responses:
        "202":
          description: "Returned if the request to trash content and all its current page descendants, is successfully accepted."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/LongTask"}
        "400":
          description: "Returned if the content id is invalid or id does not represents a 'CURRENT' page."
        "401":
          description: "Returned if the authentication credentials are incorrect or missing\nfrom the request."
        "403":
          description: "Returned if the calling user can not delete the content with specified id."
        "404":
          description: "Returned if;\n\n- There is no content with the given ID.\n- The requesting user does not have permission to trash the content or any of it's descendant pages."
      security:
        - basicAuth: []
        - oAuthDefinitions:
            - write:confluence-content
      x-atlassian-oauth2-scopes: [{"scheme": "oAuthDefinitions", "state": "Current", "scopes": ["write:confluence-content"]}, {"scheme": "oAuthDefinitions", "state": "Beta", "scopes": ["delete:content:confluence"]}]
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": false}]
      x-atlassian-connect-scope: "DELETE"
  "/wiki/rest/api/content/{pageId}/move/{position}/{targetId}":
    put:
      tags:
        - "Content - children and descendants"
      summary: "Move a page to a new location relative to a target page"
      description: "Move a page to a new location relative to a target page:\n\n* `before` - move the page under the same parent as the target, before the target in the list of children\n* `after` - move the page under the same parent as the target, after the target in the list of children\n* `append` - move the page to be a child of the target\n\nCaution: This API can move pages to the top level of a space. Top-level pages are difficult to find in the UI\nbecause they do not show up in the page tree display. To avoid this, never use `before` or `after` positions\nwhen the `targetId` is a top-level page."
      operationId: "putContentByPageIdMoveByPositionByTargetIdV1"
      parameters:
        - name: "pageId"
          in: "path"
          description: "The ID of the page to be moved"
          required: true
          schema:
            type: "string"
        - name: "position"
          in: "path"
          description: "The position to move the page to relative to the target page:\n* `before` - move the page under the same parent as the target, before the target in the list of children\n* `after` - move the page under the same parent as the target, after the target in the list of children\n* `append` - move the page to be a child of the target"
          required: true
          schema:
            type: "string"
            enum:
              - "before"
              - "after"
              - "append"
        - name: "targetId"
          in: "path"
          description: "The ID of the target page for this operation"
          required: true
          schema:
            type: "string"
      responses:
        "200":
          description: "Page was successfully moved"
          content:
            "application/json":
              schema:
                $ref: '#/components/schemas/MovePageR200'
        "400":
          description: "Returned if;\n\n- A page already exists in the target space with the same name.\n  User is advised to rename page before moving.\n- The move would create a parent-child loop (page becomes a descendant and ancestor of itself)\n- The page has permission restrictions that the user does not have permission to create in the target space.\n  User is advised to remove restrictions before moving."
        "403":
          description: "Returned if;\n\n- User does not have permission to remove page from current space\n- User does not have permission to create a page in target space"
        "404":
          description: "Returned if;\n\n- The id or targetId refer to non-existent pages"
      security:
        - basicAuth: []
        - oAuthDefinitions:
            - write:confluence-content
      x-atlassian-oauth2-scopes: [{"scheme": "oAuthDefinitions", "state": "Current", "scopes": ["write:confluence-content"]}, {"scheme": "oAuthDefinitions", "state": "Beta", "scopes": ["write:page:confluence"]}]
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": false}]
      x-atlassian-connect-scope: "WRITE"
  "/wiki/rest/api/content/{id}/child/attachment": {}
  "/wiki/rest/api/content/{id}/child/attachment/{attachmentId}":
    put:
      tags:
        - "Content - attachments"
      summary: "Update attachment properties"
      description: "Updates the attachment properties, i.e. the non-binary data of an attachment\nlike the filename, media-type, comment, and parent container.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to update the content."
      operationId: "putContentByIdChildAttachmentByAttachmentIdV1"
      parameters:
        - name: "id"
          in: "path"
          description: "The ID of the content that the attachment is attached to."
          required: true
          schema:
            type: "string"
        - name: "attachmentId"
          in: "path"
          description: "The ID of the attachment to update."
          required: true
          schema:
            type: "string"
      requestBody:
        description: "The details of the attachment to be updated."
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/AttachmentPropertiesUpdateBody"}
        required: true
      responses:
        "200":
          description: "Returned if the attachment is updated."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/Content"}
        "400":
          description: "Returned if;\n\n- The attachment id is invalid.\n- The attachment version number is invalid."
        "403":
          description: "Returned if;\n\n- The calling user is not permitted to update or move the attachment.\n- The attachment is being moved to an invalid content type."
        "404":
          description: "Returned if no attachment is found for the attachment ID."
        "409":
          description: "Returned if the version of the supplied attachment does not match\nthe version of the attachment stored in the database."
      security:
        - basicAuth: []
        - oAuthDefinitions:
            - write:confluence-file
            - write:confluence-props
      x-atlassian-oauth2-scopes: [{"scheme": "oAuthDefinitions", "state": "Current", "scopes": ["write:confluence-file", "write:confluence-props"]}, {"scheme": "oAuthDefinitions", "state": "Beta", "scopes": ["read:content-details:confluence", "write:attachment:confluence"]}]
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": false}]
      x-codegen-request-body-name: "body"
      x-atlassian-connect-scope: "WRITE"
  "/wiki/rest/api/content/{id}/child/attachment/{attachmentId}/data": {}
  "/wiki/rest/api/content/{id}/child/attachment/{attachmentId}/download":
    get:
      tags:
        - "Content - attachments"
      summary: "Get URI to download attachment"
      description: "Redirects the client to a URL that serves an attachment's binary data."
      operationId: "getContentByIdChildAttachmentByAttachmentIdDownloadV1"
      parameters:
        - name: "id"
          in: "path"
          description: "The ID of the content that the attachment is attached to."
          required: true
          schema:
            type: "string"
        - name: "attachmentId"
          in: "path"
          description: "The ID of the attachment to download."
          required: true
          schema:
            type: "string"
        - name: "version"
          in: "query"
          description: "The version of the attachment. If this parameter is absent, the redirect URI will download the latest version of the attachment."
          schema:
            type: "integer"
        - name: "status"
          in: "query"
          description: "The statuses allowed on the retrieved attachment. If this parameter is absent, it will default to `current`."
          schema:
            type: "array"
            items:
              type: "string"
      responses:
        "302":
          description: "Returned if download URL is found."
        "400":
          description: "Returned if version number is greater than attachment's latest version number or an invalid value."
        "401":
          description: "Returned if there are authentication issues in request."
        "404":
          description: "Returned if;\n\n- No content is found with the specified content ID.\n- The specified content does not contain an attachment with the specified attachment ID.\n- The calling user does not have permission to view the attachment."
      security:
        - basicAuth: []
        - oAuthDefinitions:
            - readonly:content.attachment:confluence
      x-atlassian-oauth2-scopes: [{"scheme": "oAuthDefinitions", "state": "Current", "scopes": ["readonly:content.attachment:confluence"]}, {"scheme": "oAuthDefinitions", "state": "Beta", "scopes": ["read:attachment:confluence"]}]
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": false}]
      x-atlassian-connect-scope: "READ"
  "/wiki/rest/api/content/{id}/descendant":
    get:
      tags:
        - "Content - children and descendants"
      summary: "Get content descendants"
      description: "Returns a map of the descendants of a piece of content. This is similar\nto [Get content children](#api-content-id-child-get), except that this\nmethod returns child pages at all levels, rather than just the direct\nchild pages.\n\nA piece of content has different types of descendants, depending on its type:\n\n- `page`: descendant is `page`, `whiteboard`, `database`, `embed`, `folder`, `comment`, `attachment`\n- `whiteboard`: descendant is `page`, `whiteboard`, `database`, `embed`, `folder`, `comment`, `attachment`\n- `database`: descendant is `page`, `whiteboard`, `database`, `embed`, `folder`, `comment`, `attachment`\n- `embed`: descendant is `page`, `whiteboard`, `database`, `embed`, `folder`, `comment`, `attachment`\n- `folder`: descendant is `page`, `whiteboard`, `database`, `embed`, `folder`, `comment`, `attachment`\n- `blogpost`: descendant is `comment`, `attachment`\n- `attachment`: descendant is `comment`\n- `comment`: descendant is `attachment`\n\nThe map will always include all descendant types that are valid for the content.\nHowever, if the content has no instances of a descendant type, the map will\ncontain an empty array for that descendant type.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n'View' permission for the space, and permission to view the content if it\nis a page."
      operationId: "getContentByIdDescendantV1"
      parameters:
        - name: "id"
          in: "path"
          description: "The ID of the content to be queried for its descendants."
          required: true
          schema:
            type: "string"
        - name: "expand"
          in: "query"
          description: "A multi-value parameter indicating which properties of the children to\nexpand, where:\n\n- `attachment` returns all attachments for the content.\n- `comments` returns all comments for the content.\n- `page` returns all child pages of the content.\n- `whiteboard` returns all child whiteboards of the content.\n- `database` returns all child databases of the content.\n- `embed` returns all child embeds of the content.\n- `folder` returns all child folders of the content."
          style: "form"
          explode: false
          schema:
            type: "array"
            items:
              type: "string"
              enum:
                - "attachment"
                - "comment"
                - "page"
      responses:
        "200":
          description: "Returned if the requested descendants are returned."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ContentChildren"}
        "404":
          description: "Returned if;\n\n- There is no content with the given ID.\n- The calling user does not have permission to view the content."
      deprecated: true
      security:
        - basicAuth: []
        - oAuthDefinitions:
            - read:confluence-content.summary
      x-atlassian-oauth2-scopes: [{"scheme": "oAuthDefinitions", "state": "Current", "scopes": ["read:confluence-content.summary"]}, {"scheme": "oAuthDefinitions", "state": "Beta", "scopes": ["read:content-details:confluence"]}]
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": false}]
      x-atlassian-connect-scope: "READ"
  "/wiki/rest/api/content/{id}/descendant/{type}":
    get:
      tags:
        - "Content - children and descendants"
      summary: "Get content descendants by type"
      description: "Returns all descendants of a given type, for a piece of content. This is\nsimilar to [Get content children by type](#api-content-id-child-type-get),\nexcept that this method returns child pages at all levels, rather than just\nthe direct child pages.\n\nA piece of content has different types of descendants, depending on its type:\n\n- `page`: descendant is `page`, `whiteboard`, `database`, `embed`, `folder`, `comment`, `attachment`\n- `whiteboard`: descendant is `page`, `whiteboard`, `database`, `embed`, `folder`, `comment`, `attachment`\n- `database`: descendant is `page`, `whiteboard`, `database`, `embed`, `folder`, `comment`, `attachment`\n- `embed`: descendant is `page`, `whiteboard`, `database`, `embed`, `folder`, `comment`, `attachment`\n- `folder`: descendant is `page`, `whiteboard`, `database`, `embed`, `folder`, `comment`, `attachment`\n- `blogpost`: descendant is `comment`, `attachment`\n- `attachment`: descendant is `comment`\n- `comment`: descendant is `attachment`\n\nCustom content types that are provided by apps can also be returned.\n\nIf the expand query parameter is used with the `body.export_view` and/or `body.styled_view` properties, then the query limit parameter will be restricted to a maximum value of 25.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n'View' permission for the space, and permission to view the content if it\nis a page."
      operationId: "getContentByIdDescendantByTypeV1"
      parameters:
        - name: "id"
          in: "path"
          description: "The ID of the content to be queried for its descendants."
          required: true
          schema:
            type: "string"
        - name: "type"
          in: "path"
          description: "The type of descendants to return."
          required: true
          schema:
            type: "string"
            enum:
              - "page"
              - "comment"
              - "attachment"
        - name: "depth"
          in: "query"
          description: "Filter the results to descendants upto a desired level of the content. Note, the maximum value supported is 100. root level of the content means immediate (level 1) descendants of the type requested. all represents returning all descendants of the type requested."
          schema:
            type: "string"
            enum:
              - "all"
              - "root"
              - "<any positive integer argument in the range of 1 and 100>"
            default: "all"
        - {"$ref": "#/components/parameters/contentExpand"}
        - name: "start"
          in: "query"
          description: "The starting index of the returned content."
          schema:
            type: "integer"
            minimum: 0
            format: "int32"
            default: 0
        - name: "limit"
          in: "query"
          description: "The maximum number of content to return per page. Note,\nthis may be restricted by fixed system limits."
          schema:
            type: "integer"
            minimum: 0
            format: "int32"
            default: 25
      responses:
        "200":
          description: "Returned if the requested content is returned."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ContentArray"}
        "400":
          description: "Returned if;\n\n- Any of the required request params are missing.\n- The request is invalid such as negative start param, a format besides int32 for limit etc."
        "404":
          description: "Returned if;\n\n- There is no content with the given ID.\n- The calling user does not have permission to view the content."
      deprecated: true
      security:
        - basicAuth: []
        - oAuthDefinitions:
            - read:confluence-content.summary
      x-atlassian-oauth2-scopes: [{"scheme": "oAuthDefinitions", "state": "Current", "scopes": ["read:confluence-content.summary"]}, {"scheme": "oAuthDefinitions", "state": "Beta", "scopes": ["read:content-details:confluence"]}]
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": false}]
      x-atlassian-connect-scope: "READ"
  "/wiki/rest/api/content/{id}/history/{version}/macro/id/{macroId}":
    get:
      tags:
        - "Content - macro body"
      summary: "Get macro body by macro ID"
      description: "Returns the body of a macro in storage format, for the given macro ID.\nThis includes information like the name of the macro, the body of the macro,\nand any macro parameters. This method is mainly used by Cloud apps.\n\nAbout the macro ID: When a macro is created in a new version of content,\nConfluence will generate a random ID for it, unless an ID is specified\n(by an app). The macro ID will look similar to this: '50884bd9-0cb8-41d5-98be-f80943c14f96'.\nThe ID is then persisted as new versions of content are created, and is\nonly modified by Confluence if there are conflicting IDs.\n\nFor Forge macros, the value for macro ID is the \"local ID\" of that particular ADF node.\nThis value can be retrieved either client-side by calling view.getContext() and accessing \"localId\"\non the resulting object, or server-side by examining the \"local-id\" parameter node inside the \"parameters\" node.\n\nNote that there are other attributes named \"local-id\", but only this particular one is used to store the macro ID.\n\nExample:\n<ac:adf-node type=\"extension\">\n  <ac:adf-attribute key=\"extension-type\">com.atlassian.ecosystem</ac:adf-attribute>\n  <ac:adf-attribute key=\"parameters\">\n      <ac:adf-parameter key=\"local-id\">e9c4aa10-73fa-417c-888d-48c719ae4165</ac:adf-parameter>\n  </ac:adf-parameter>\n</ac:adf-node>\n\nNote, to preserve backwards compatibility this resource will also match on\nthe hash of the macro body, even if a macro ID is found. This check will\neventually become redundant, as macro IDs are generated for pages and\ntransparently propagate out to all instances.\n\nThis backwards compatibility logic does not apply to Forge macros; those\ncan only be retrieved by their ID.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the content that the macro is in."
      operationId: "getContentByIdHistoryByVersionMacroIdByMacroIdV1"
      parameters:
        - name: "id"
          in: "path"
          description: "The ID for the content that contains the macro."
          required: true
          schema:
            type: "string"
        - name: "version"
          in: "path"
          description: "The version of the content that contains the macro. Specifying `0` as the `version` will return\nthe macro body for the latest content version."
          required: true
          schema:
            type: "integer"
            format: "int32"
        - name: "macroId"
          in: "path"
          description: "The ID of the macro. This is usually passed by the app that the\nmacro is in. Otherwise, find the macro ID by querying the desired\ncontent and version, then expanding the body in storage format.\nFor example, '/content/196611/version/7?expand=content.body.storage'."
          required: true
          schema:
            type: "string"
      responses:
        "200":
          description: "Returned if the requested macro body is returned."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/MacroInstance"}
        "401":
          description: "Returned if the authentication credentials are incorrect or missing\nfrom the request."
        "404":
          description: "Returned if;\n\n- There is no content with the given ID.\n- The calling user does not have permission to view the content.\n- The macro does not exist in the specified version.\n- There is no macro matching the given macro ID or hash."
      security:
        - basicAuth: []
        - oAuthDefinitions:
            - read:confluence-content.all
      x-atlassian-oauth2-scopes: [{"scheme": "oAuthDefinitions", "state": "Current", "scopes": ["read:confluence-content.all"]}, {"scheme": "oAuthDefinitions", "state": "Beta", "scopes": ["read:content.metadata:confluence"]}]
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": false}]
      x-atlassian-connect-scope: "READ"
  "/wiki/rest/api/content/{id}/history/{version}/macro/id/{macroId}/convert/{to}":
    get:
      tags:
        - "Content - macro body"
      summary: "Get macro body by macro ID and convert the representation synchronously"
      description: "Returns the body of a macro in format specified in path, for the given macro ID.\nThis includes information like the name of the macro, the body of the macro,\nand any macro parameters.\n\nAbout the macro ID: When a macro is created in a new version of content,\nConfluence will generate a random ID for it, unless an ID is specified\n(by an app). The macro ID will look similar to this: '50884bd9-0cb8-41d5-98be-f80943c14f96'.\nThe ID is then persisted as new versions of content are created, and is\nonly modified by Confluence if there are conflicting IDs.\n\nFor Forge macros, the value for macro ID is the \"local ID\" of that particular ADF node.\nThis value can be retrieved either client-side by calling view.getContext() and accessing \"localId\"\non the resulting object, or server-side by examining the \"local-id\" parameter node inside the \"parameters\" node.\n\nNote that there are other attributes named \"local-id\", but only this particular one is used to store the macro ID.\n\nExample:\n<ac:adf-node type=\"extension\">\n  <ac:adf-attribute key=\"extension-type\">com.atlassian.ecosystem</ac:adf-attribute>\n  <ac:adf-attribute key=\"parameters\">\n      <ac:adf-parameter key=\"local-id\">e9c4aa10-73fa-417c-888d-48c719ae4165</ac:adf-parameter>\n  </ac:adf-parameter>\n</ac:adf-node>\n\nNote, to preserve backwards compatibility this resource will also match on\nthe hash of the macro body, even if a macro ID is found. This check will\neventually become redundant, as macro IDs are generated for pages and\ntransparently propagate out to all instances.\n\nThis backwards compatibility logic does not apply to Forge macros; those\ncan only be retrieved by their ID.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the content that the macro is in."
      operationId: "getContentByIdHistoryByVersionMacroIdByMacroIdConvertByToV1"
      parameters:
        - name: "id"
          in: "path"
          description: "The ID for the content that contains the macro."
          required: true
          schema:
            type: "string"
        - name: "version"
          in: "path"
          description: "The version of the content that contains the macro. Specifying `0` as the `version` will return\nthe macro body for the latest content version."
          required: true
          schema:
            type: "integer"
            format: "int32"
        - name: "macroId"
          in: "path"
          description: "The ID of the macro. This is usually passed by the app that the\nmacro is in. Otherwise, find the macro ID by querying the desired\ncontent and version, then expanding the body in storage format.\nFor example, '/content/196611/version/7?expand=content.body.storage'."
          required: true
          schema:
            type: "string"
        - name: "to"
          in: "path"
          description: "The content representation to return the macro in."
          required: true
          schema:
            type: "string"
        - {"$ref": "#/components/parameters/bodyConversionExpand"}
        - name: "spaceKeyContext"
          in: "query"
          description: "The space key used for resolving embedded content (page includes,\nfiles, and links) in the content body. For example, if the source content\ncontains the link `<ac:link><ri:page ri:content-title=\"Example page\" /><ac:link>`\nand the `spaceKeyContext=TEST` parameter is provided, then the link\nwill be converted to a link to the \"Example page\" page in the \"TEST\" space."
          schema:
            type: "string"
        - name: "embeddedContentRender"
          in: "query"
          description: "Mode used for rendering embedded content, like attachments.\n\n- `current` renders the embedded content using the latest version.\n- `version-at-save` renders the embedded content using the version at\nthe time of save."
          schema:
            type: "string"
            enum:
              - "current"
              - "version-at-save"
            default: "current"
      responses:
        "200":
          description: "Returned if the requested content body is returned."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ContentBody"}
        "400":
          description: "Returned if invalid content representation is requested, or context is missing."
        "401":
          description: "Returned if the authentication credentials are incorrect or missing\nfrom the request."
        "404":
          description: "Returned if;\n\n- There is no content with the given ID.\n- The calling user does not have permission to view the content.\n- The macro does not exist in the specified version.\n- There is no macro matching the given macro ID or hash."
      security:
        - basicAuth: []
        - oAuthDefinitions:
            - read:confluence-content.all
      x-atlassian-oauth2-scopes: [{"scheme": "oAuthDefinitions", "state": "Current", "scopes": ["read:confluence-content.all"]}, {"scheme": "oAuthDefinitions", "state": "Beta", "scopes": ["read:content.metadata:confluence"]}]
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": false}]
      x-atlassian-connect-scope: "READ"
  "/wiki/rest/api/content/{id}/history/{version}/macro/id/{macroId}/convert/async/{to}":
    get:
      tags:
        - "Content - macro body"
      summary: "Get macro body by macro ID and convert representation Asynchronously"
      description: "Returns Async Id of the conversion task which will convert the macro into a content body of the desired format.\nThe result will be available for 5 minutes after completion of the conversion.\n\nAbout the macro ID: When a macro is created in a new version of content,\nConfluence will generate a random ID for it, unless an ID is specified\n(by an app). The macro ID will look similar to this: '884bd9-0cb8-41d5-98be-f80943c14f96'.\nThe ID is then persisted as new versions of content are created, and is\nonly modified by Confluence if there are conflicting IDs.\n\nFor Forge macros, the value for macro ID is the \"local ID\" of that particular ADF node.\nThis value can be retrieved either client-side by calling view.getContext() and accessing \"localId\"\non the resulting object, or server-side by examining the \"local-id\" parameter node inside the \"parameters\" node.\n\nNote that there are other attributes named \"local-id\", but only this particular one is used to store the macro ID.\n\nExample:\n<ac:adf-node type=\"extension\">\n  <ac:adf-attribute key=\"extension-type\">com.atlassian.ecosystem</ac:adf-attribute>\n  <ac:adf-attribute key=\"parameters\">\n      <ac:adf-parameter key=\"local-id\">e9c4aa10-73fa-417c-888d-48c719ae4165</ac:adf-parameter>\n  </ac:adf-parameter>\n</ac:adf-node>\n\nNote, to preserve backwards compatibility this resource will also match on\nthe hash of the macro body, even if a macro ID is found. This check will\neventually become redundant, as macro IDs are generated for pages and\ntransparently propagate out to all instances.\n\nThis backwards compatibility logic does not apply to Forge macros; those\ncan only be retrieved by their ID.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the content that the macro is in."
      operationId: "getContentByIdHistoryByVersionMacroIdByMacroIdConvertAsyncByToV1"
      parameters:
        - name: "id"
          in: "path"
          description: "The ID for the content that contains the macro."
          required: true
          schema:
            type: "string"
        - name: "version"
          in: "path"
          description: "The version of the content that contains the macro. Specifying `0` as the `version` will return\nthe macro body for the latest content version."
          required: true
          schema:
            type: "integer"
            format: "int32"
        - name: "macroId"
          in: "path"
          description: "The ID of the macro. For apps, this is passed to the macro by the Connect/Forge framework.\nOtherwise, find the macro ID by querying the desired\ncontent and version, then expanding the body in storage format.\nFor example, '/content/196611/version/7?expand=content.body.storage'."
          required: true
          schema:
            type: "string"
        - name: "to"
          in: "path"
          description: "The content representation to return the macro in.\nCurrently, the following conversions are allowed:\n\n- `export_view`\n- `styled_view`\n- `view`"
          required: true
          schema:
            type: "string"
            enum:
              - "export_view"
              - "view"
              - "styled_view"
        - {"$ref": "#/components/parameters/bodyConversionExpand"}
        - name: "allowCache"
          in: "query"
          description: "If this field is false, the cache will erase its current value and begin a conversion.\nIf this field is true, the cache will not erase its current value, and will set the status of the\nresult in cache to RERUNNING. Once the data is updated, the status will change to COMPLETED. \nLarge macros that take long to convert, and who want to show intermediate, but potentially stale data, immediately should set this field to true.\nCache values are stored per macro per user per content and expansions."
          schema:
            type: "boolean"
            default: false
        - name: "spaceKeyContext"
          in: "query"
          description: "The space key used for resolving embedded content (page includes,\nfiles, and links) in the content body. For example, if the source content\ncontains the link `<ac:link><ri:page ri:content-title=\"Example page\" /><ac:link>`\nand the `spaceKeyContext=TEST` parameter is provided, then the link\nwill be converted to a link to the \"Example page\" page in the \"TEST\" space."
          schema:
            type: "string"
        - name: "embeddedContentRender"
          in: "query"
          description: "Mode used for rendering embedded content, like attachments.\n\n- `current` renders the embedded content using the latest version.\n- `version-at-save` renders the embedded content using the version at\nthe time of save."
          schema:
            type: "string"
            enum:
              - "current"
              - "version-at-save"
            default: "current"
      responses:
        "200":
          description: "Returned if the requested macro conversion request is created."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/AsyncId"}
        "401":
          description: "Returned if the authentication credentials are incorrect or missing\nfrom the request."
        "404":
          description: "Returned if;\n\n- There is no content with the given ID.\n- The calling user does not have permission to view the content.\n- The macro does not exist in the specified version.\n- There is no macro matching the given macro ID or hash."
      security:
        - basicAuth: []
        - oAuthDefinitions:
            - read:confluence-content.all
      x-atlassian-oauth2-scopes: [{"scheme": "oAuthDefinitions", "state": "Current", "scopes": ["read:confluence-content.all"]}, {"scheme": "oAuthDefinitions", "state": "Beta", "scopes": ["read:content.metadata:confluence"]}]
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": false}]
      x-atlassian-connect-scope: "READ"
  "/wiki/rest/api/content/{id}/label":
    post:
      tags:
        - "Content labels"
      summary: "Add labels to content"
      description: "Adds labels to a piece of content. Does not modify the existing labels.\n\nNotes:\n\n- Labels can also be added when creating content ([Create content](#api-content-post)).\n- Labels can be updated when updating content ([Update content](#api-content-id-put)).\nThis will delete the existing labels and replace them with the labels in\nthe request.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to update the content."
      operationId: "postContentByIdLabelV1"
      parameters:
        - name: "id"
          in: "path"
          description: "The ID of the content that will have labels added to it."
          required: true
          schema:
            type: "string"
      requestBody:
        description: "The labels to add to the content."
        content:
          "application/json":
            schema:
              $ref: '#/components/schemas/AddLabelsToContentB'
        required: true
      responses:
        "200":
          description: "Returned if the labels are added to the content."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/LabelArray"}
        "400":
          description: "Returned if;\n\n- The body contains labels with invalid characters or too many characters.\n- The body contains too many labels.\n- The target content would contain too many labels after the operation.\n- The calling user does not have permission to edit labels."
        "403":
          description: "Returned if the calling user can view but not edit the content."
        "404":
          description: "Returned if;\n\n- There is no content with the given ID.\n- The calling user does not have permission to view the content."
      security:
        - basicAuth: []
        - oAuthDefinitions:
            - write:confluence-content
      x-atlassian-oauth2-scopes: [{"scheme": "oAuthDefinitions", "state": "Current", "scopes": ["write:confluence-content"]}, {"scheme": "oAuthDefinitions", "state": "Beta", "scopes": ["read:label:confluence", "write:label:confluence"]}]
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": false}]
      x-codegen-request-body-name: "body"
      x-atlassian-connect-scope: "WRITE"
    delete:
      tags:
        - "Content labels"
      summary: "Remove label from content using query parameter"
      description: "Removes a label from a piece of content. Labels can't be deleted from archived content.\nThis is similar to [Remove label from content](#api-content-id-label-label-delete)\nexcept that the label name is specified via a query parameter.\n\nUse this method if the label name has \"/\" characters, as\n[Remove label from content using query parameter](#api-content-id-label-delete)\ndoes not accept \"/\" characters for the label name.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to update the content."
      operationId: "deleteContentByIdLabelV1"
      parameters:
        - name: "id"
          in: "path"
          description: "The ID of the content that the label will be removed from."
          required: true
          schema:
            type: "string"
        - name: "name"
          in: "query"
          description: "The name of the label to be removed."
          required: true
          schema:
            type: "string"
      responses:
        "204":
          description: "Returned if the label is removed. The response body will be empty."
        "403":
          description: "Returned if the calling user can view but not edit the content."
        "404":
          description: "Returned if;\n\n- There is no content with the given ID.\n- The calling user does not have permission to view the content."
      security:
        - basicAuth: []
        - oAuthDefinitions:
            - write:confluence-content
      x-atlassian-oauth2-scopes: [{"scheme": "oAuthDefinitions", "state": "Current", "scopes": ["write:confluence-content"]}, {"scheme": "oAuthDefinitions", "state": "Beta", "scopes": ["write:label:confluence"]}]
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": false}]
      x-atlassian-connect-scope: "WRITE"
  "/wiki/rest/api/content/{id}/label/{label}":
    delete:
      tags:
        - "Content labels"
      summary: "Remove label from content"
      description: "Removes a label from a piece of content. Labels can't be deleted from archived content.\nThis is similar to [Remove label from content using query parameter](#api-content-id-label-delete)\nexcept that the label name is specified via a path parameter.\n\nUse this method if the label name does not have \"/\" characters, as the path\nparameter does not accept \"/\" characters for security reasons. Otherwise,\nuse [Remove label from content using query parameter](#api-content-id-label-delete).\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to update the content."
      operationId: "deleteContentByIdLabelByLabelV1"
      parameters:
        - name: "id"
          in: "path"
          description: "The ID of the content that the label will be removed from."
          required: true
          schema:
            type: "string"
        - name: "label"
          in: "path"
          description: "The name of the label to be removed."
          required: true
          schema:
            type: "string"
      responses:
        "204":
          description: "Returned if the label is removed. The response body will be empty."
        "400":
          description: "Returned if the label name has a \"/\" character."
        "403":
          description: "Returned if the calling user can view but not edit the content."
        "404":
          description: "Returned if;\n\n- There is no content with the given ID.\n- The calling user does not have permission to view the content."
      security:
        - basicAuth: []
        - oAuthDefinitions:
            - write:confluence-content
      x-atlassian-oauth2-scopes: [{"scheme": "oAuthDefinitions", "state": "Current", "scopes": ["write:confluence-content"]}, {"scheme": "oAuthDefinitions", "state": "Beta", "scopes": ["write:label:confluence"]}]
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": false}]
      x-atlassian-connect-scope: "WRITE"
  "/wiki/rest/api/content/{id}/notification/child-created":
    get:
      tags:
        - "Content watches"
      summary: "Get watches for page"
      description: "Returns the watches for a page. A user that watches a page will receive\nreceive notifications when the page is updated.\n\nIf you want to manage watches for a page, use the following `user` methods:\n\n- [Get content watch status for user](#api-user-watch-content-contentId-get)\n- [Add content watch](#api-user-watch-content-contentId-post)\n- [Remove content watch](#api-user-watch-content-contentId-delete)\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to access the Confluence site ('Can use' global permission)."
      operationId: "getContentByIdNotificationChildCreatedV1"
      parameters:
        - name: "id"
          in: "path"
          description: "The ID of the content to be queried for its watches."
          required: true
          schema:
            type: "string"
        - name: "start"
          in: "query"
          description: "The starting index of the returned watches."
          schema:
            type: "integer"
            minimum: 0
            format: "int32"
            default: 0
        - name: "limit"
          in: "query"
          description: "The maximum number of watches to return per page.\nNote, this may be restricted by fixed system limits."
          schema:
            type: "integer"
            minimum: 0
            format: "int32"
            default: 200
      responses:
        "200":
          description: "Returned if the requested watches are returned."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/WatchArray"}
        "401":
          description: "Returned if the authentication credentials are incorrect or missing\nfrom the request."
      security:
        - basicAuth: []
        - oAuthDefinitions:
            - read:confluence-content.summary
      x-atlassian-oauth2-scopes: [{"scheme": "oAuthDefinitions", "state": "Current", "scopes": ["read:confluence-content.summary"]}, {"scheme": "oAuthDefinitions", "state": "Beta", "scopes": ["read:watcher:confluence", "read:user:confluence"]}]
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": false}]
      x-atlassian-connect-scope: "READ"
  "/wiki/rest/api/content/{id}/notification/created":
    get:
      tags:
        - "Content watches"
      summary: "Get watches for space"
      description: "Returns all space watches for the space that the content is in. A user that\nwatches a space will receive receive notifications when any content in the\nspace is updated.\n\nIf you want to manage watches for a space, use the following `user` methods:\n\n- [Get space watch status for user](#api-user-watch-space-spaceKey-get)\n- [Add space watch](#api-user-watch-space-spaceKey-post)\n- [Remove space watch](#api-user-watch-space-spaceKey-delete)\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to access the Confluence site ('Can use' global permission)."
      operationId: "getContentByIdNotificationCreatedV1"
      parameters:
        - name: "id"
          in: "path"
          description: "The ID of the content to be queried for its watches."
          required: true
          schema:
            type: "string"
        - name: "start"
          in: "query"
          description: "The starting index of the returned watches."
          schema:
            type: "integer"
            minimum: 0
            format: "int32"
            default: 0
        - name: "limit"
          in: "query"
          description: "The maximum number of watches to return per page.\nNote, this may be restricted by fixed system limits."
          schema:
            type: "integer"
            minimum: 0
            format: "int32"
            default: 200
      responses:
        "200":
          description: "Returned if the requested watches are returned."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/SpaceWatchArray"}
        "401":
          description: "Returned if the authentication credentials are incorrect or missing\nfrom the request."
      security:
        - basicAuth: []
        - oAuthDefinitions:
            - read:confluence-content.summary
      x-atlassian-oauth2-scopes: [{"scheme": "oAuthDefinitions", "state": "Current", "scopes": ["read:confluence-content.summary"]}, {"scheme": "oAuthDefinitions", "state": "Beta", "scopes": ["read:watcher:confluence", "read:user:confluence"]}]
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": true}]
      x-atlassian-connect-scope: "READ"
  "/wiki/rest/api/content/{id}/pagehierarchy/copy":
    post:
      tags:
        - "Content - children and descendants"
      summary: "Copy page hierarchy"
      description: "Copy page hierarchy allows the copying of an entire hierarchy of pages and their associated properties, permissions and attachments.\n The id path parameter refers to the content id of the page to copy, and the new parent of this copied page is defined using the destinationPageId in the request body.\n The titleOptions object defines the rules of renaming page titles during the copy;\n for example, search and replace can be used in conjunction to rewrite the copied page titles.\n\n Response example:\n <pre><code>\n {\n      \"id\" : \"1180606\",\n      \"links\" : {\n           \"status\" : \"/rest/api/longtask/1180606\"\n      }\n }\n </code></pre>\n Use the /longtask/<taskId> REST API to get the copy task status."
      operationId: "postContentByIdPagehierarchyCopyV1"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "string"
      requestBody:
        description: "Request object from json post body"
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/CopyPageHierarchyRequest"}
        required: true
      responses:
        "202":
          description: "Returns a full JSON representation of a long running task"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/LongTask"}
        "400":
          description: "Returned if the title prefix is invalid (e.g. is empty, creates a conflict)"
        "403":
          description: "Returned if the user does not have permission to create content at source and destination"
        "404":
          description: "Returned if original page or destination page does not exist."
      security:
        - basicAuth: []
        - oAuthDefinitions:
            - write:confluence-content
      x-atlassian-oauth2-scopes: [{"scheme": "oAuthDefinitions", "state": "Current", "scopes": ["write:confluence-content"]}, {"scheme": "oAuthDefinitions", "state": "Beta", "scopes": ["read:content.metadata:confluence", "write:page:confluence"]}]
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": false}]
      x-codegen-request-body-name: "request"
      x-atlassian-connect-scope: "WRITE"
  "/wiki/rest/api/content/{id}/copy":
    post:
      tags:
        - "Content - children and descendants"
      summary: "Copy single page"
      description: "Copies a single page and its associated properties, permissions, attachments, and custom contents.\n The `id` path parameter refers to the content ID of the page to copy. The target of the page to be copied\n is defined using the `destination` in the request body and can be one of the following types.\n\n  - `space`: page will be copied to the specified space as a root page on the space\n  - `parent_page`: page will be copied as a child of the specified parent page\n  - `parent_content`: page will be copied as a child of the specified parent content\n  - `existing_page`: page will be copied and replace the specified page\n\nBy default, the following objects are expanded: `space`, `history`, `version`.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: 'Add' permission for the space that the content will be copied in and permission to update the content if copying to an `existing_page`."
      operationId: "postContentByIdCopyV1"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "string"
        - {"$ref": "#/components/parameters/contentExpandWithSubExpandLimit"}
      requestBody:
        description: "Request object from json post body"
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/CopyPageRequest"}
        required: true
      responses:
        "200":
          description: "Returned if the content is copied."
          content:
            "application/json;charset=UTF-8":
              schema: {"$ref": "#/components/schemas/Content"}
        "400":
          description: "Returned if;\n\n- destination or any of its fields are not specified.\n- destination.type is invalid.\n- sub-expansions limit exceeds."
        "401":
          description: "Returned if the authentication credentials are incorrect or missing\nfrom the request."
        "403":
          description: "Returned if the user does not have permission to create content at destination."
        "404":
          description: "Returned if;\n\n- the original page doesn't exist.\n- the destination page doesn’t exist.\n- the destination space doesn’t exist."
      security:
        - basicAuth: []
        - oAuthDefinitions:
            - write:confluence-content
      x-atlassian-oauth2-scopes: [{"scheme": "oAuthDefinitions", "state": "Current", "scopes": ["write:confluence-content"]}, {"scheme": "oAuthDefinitions", "state": "Beta", "scopes": ["read:content-details:confluence", "write:page:confluence"]}]
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": false}]
      x-codegen-request-body-name: "request"
      x-atlassian-connect-scope: "WRITE"
  "/wiki/rest/api/content/{id}/permission/check":
    post:
      tags:
        - "Content permissions"
      summary: "Check content permissions"
      description: "Check if a user or a group can perform an operation to the specified content. The `operation` to check\nmust be provided. The user’s account ID or the ID of the group can be provided in the `subject` to check\npermissions against a specified user or group. The following permission checks are done to make sure that the\nuser or group has the proper access:\n\n- site permissions\n- space permissions\n- content restrictions\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to access the Confluence site ('Can use' global permission) if checking permission for self,\notherwise 'Confluence Administrator' global permission is required."
      operationId: "postContentByIdPermissionCheckV1"
      parameters:
        - name: "id"
          in: "path"
          description: "The ID of the content to check permissions against."
          required: true
          schema:
            type: "string"
      requestBody:
        description: "The content permission request."
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/ContentPermissionRequest"}
        required: true
      responses:
        "200":
          description: "Returned if the permission check completed successfully"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/PermissionCheckResponse"}
        "400":
          description: "Returned if;\n\n- If any of the required fields are missing.\n- If specified `subject` or `operation` is invalid."
        "401":
          description: "Returned if the authentication credentials are incorrect or missing\nfrom the request."
        "403":
          description: "Returned if the user does not have permission perform the check."
        "404":
          description: "Returned if there is no content with the given ID."
      security:
        - basicAuth: []
        - oAuthDefinitions:
            - read:confluence-content.permission
      x-atlassian-oauth2-scopes: [{"scheme": "oAuthDefinitions", "state": "Current", "scopes": ["read:confluence-content.permission"]}, {"scheme": "oAuthDefinitions", "state": "Beta", "scopes": ["read:content.permission:confluence"]}]
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": false}]
      x-codegen-request-body-name: "body"
      x-atlassian-connect-scope: "READ"
  "/wiki/rest/api/content/{id}/restriction":
    get:
      tags:
        - "Content restrictions"
      summary: "Get restrictions"
      description: "Returns the restrictions on a piece of content.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the content."
      operationId: "getContentByIdRestrictionV1"
      parameters:
        - name: "id"
          in: "path"
          description: "The ID of the content to be queried for its restrictions."
          required: true
          schema:
            type: "string"
        - name: "expand"
          in: "query"
          description: "A multi-value parameter indicating which properties of the content\nrestrictions to expand. By default, the following objects are expanded:\n`restrictions.user`, `restrictions.group`.\n\n- `restrictions.user` returns the piece of content that the restrictions are\napplied to.\n- `restrictions.group` returns the piece of content that the restrictions are\napplied to.\n- `content` returns the piece of content that the restrictions are\napplied to."
          style: "form"
          explode: false
          schema:
            type: "array"
            items:
              type: "string"
              enum:
                - "restrictions.user"
                - "read.restrictions.user"
                - "update.restrictions.user"
                - "restrictions.group"
                - "read.restrictions.group"
                - "update.restrictions.group"
                - "content"
        - name: "start"
          in: "query"
          description: "The starting index of the users and groups in the returned restrictions."
          schema:
            type: "integer"
            minimum: 0
            format: "int32"
            default: 0
        - name: "limit"
          in: "query"
          description: "The maximum number of users and the maximum number of groups, in the\nreturned restrictions, to return per page. Note, this may be restricted\nby fixed system limits."
          schema:
            type: "integer"
            minimum: 0
            format: "int32"
            default: 100
      responses:
        "200":
          description: "Returned if the requested restrictions are returned."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ContentRestrictionArray"}
        "404":
          description: "Returned if;\n\n- There is no content with the given ID.\n- The calling user does not have permission to view the content."
      security:
        - basicAuth: []
        - oAuthDefinitions:
            - read:confluence-content.all
      x-atlassian-oauth2-scopes: [{"scheme": "oAuthDefinitions", "state": "Current", "scopes": ["read:confluence-content.all"]}, {"scheme": "oAuthDefinitions", "state": "Beta", "scopes": ["read:content-details:confluence"]}]
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": false}]
      x-atlassian-connect-scope: "READ"
    put:
      tags:
        - "Content restrictions"
      summary: "Update restrictions"
      description: "Updates restrictions for a piece of content. This removes the existing\nrestrictions and replaces them with the restrictions in the request.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to edit the content."
      operationId: "putContentByIdRestrictionV1"
      parameters:
        - name: "id"
          in: "path"
          description: "The ID of the content to update restrictions for."
          required: true
          schema:
            type: "string"
        - name: "expand"
          in: "query"
          description: "A multi-value parameter indicating which properties of the content\nrestrictions (returned in response) to expand.\n\n- `restrictions.user` returns the piece of content that the restrictions are\napplied to. Expanded by default.\n- `restrictions.group` returns the piece of content that the restrictions are\napplied to. Expanded by default.\n- `content` returns the piece of content that the restrictions are\napplied to."
          style: "form"
          explode: false
          schema:
            type: "array"
            items:
              type: "string"
              enum:
                - "restrictions.user"
                - "read.restrictions.user"
                - "update.restrictions.user"
                - "restrictions.group"
                - "read.restrictions.group"
                - "update.restrictions.group"
                - "content"
      requestBody:
        description: "The updated restrictions for the content."
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/ContentRestrictionAddOrUpdateArray"}
        required: true
      responses:
        "200":
          description: "Returned if the requested restrictions are updated."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ContentRestrictionArray"}
        "404":
          description: "Returned if;\n\n- There is no content with the given ID.\n- The calling user does not have permission to update restrictions\nfor the content."
      security:
        - basicAuth: []
        - oAuthDefinitions:
            - write:confluence-content
      x-atlassian-oauth2-scopes: [{"scheme": "oAuthDefinitions", "state": "Current", "scopes": ["write:confluence-content"]}, {"scheme": "oAuthDefinitions", "state": "Beta", "scopes": ["read:content-details:confluence", "write:content.restriction:confluence"]}]
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": false}]
      x-codegen-request-body-name: "body"
      x-atlassian-connect-scope: "WRITE"
    post:
      tags:
        - "Content restrictions"
      summary: "Add restrictions"
      description: "Adds restrictions to a piece of content. Note, this does not change any\nexisting restrictions on the content.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to edit the content."
      operationId: "postContentByIdRestrictionV1"
      parameters:
        - name: "id"
          in: "path"
          description: "The ID of the content to add restrictions to."
          required: true
          schema:
            type: "string"
        - name: "expand"
          in: "query"
          description: "A multi-value parameter indicating which properties of the content\nrestrictions (returned in response) to expand.\n\n- `restrictions.user` returns the piece of content that the restrictions are\napplied to. Expanded by default.\n- `restrictions.group` returns the piece of content that the restrictions are\napplied to. Expanded by default.\n- `content` returns the piece of content that the restrictions are\napplied to."
          style: "form"
          explode: false
          schema:
            type: "array"
            items:
              type: "string"
              enum:
                - "restrictions.user"
                - "read.restrictions.user"
                - "update.restrictions.user"
                - "restrictions.group"
                - "read.restrictions.group"
                - "update.restrictions.group"
                - "content"
      requestBody:
        description: "The restrictions to be added to the content."
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/ContentRestrictionAddOrUpdateArray"}
        required: true
      responses:
        "200":
          description: "Returned if the requested restrictions are added."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ContentRestrictionArray"}
        "404":
          description: "Returned if;\n\n- There is no content with the given ID.\n- The calling user does not have permission to add restrictions to\nthe content."
      security:
        - basicAuth: []
        - oAuthDefinitions:
            - write:confluence-content
      x-atlassian-oauth2-scopes: [{"scheme": "oAuthDefinitions", "state": "Current", "scopes": ["write:confluence-content"]}, {"scheme": "oAuthDefinitions", "state": "Beta", "scopes": ["read:content-details:confluence", "write:content.restriction:confluence"]}]
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": false}]
      x-codegen-request-body-name: "body"
      x-atlassian-connect-scope: "WRITE"
    delete:
      tags:
        - "Content restrictions"
      summary: "Delete restrictions"
      description: "Removes all restrictions (read and update) on a piece of content.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to edit the content."
      operationId: "deleteContentByIdRestrictionV1"
      parameters:
        - name: "id"
          in: "path"
          description: "The ID of the content to remove restrictions from."
          required: true
          schema:
            type: "string"
        - name: "expand"
          in: "query"
          description: "A multi-value parameter indicating which properties of the content\nrestrictions (returned in response) to expand.\n\n- `restrictions.user` returns the piece of content that the restrictions are\napplied to. Expanded by default.\n- `restrictions.group` returns the piece of content that the restrictions are\napplied to. Expanded by default.\n- `content` returns the piece of content that the restrictions are\napplied to."
          style: "form"
          explode: false
          schema:
            type: "array"
            items:
              type: "string"
              enum:
                - "restrictions.user"
                - "read.restrictions.user"
                - "update.restrictions.user"
                - "restrictions.group"
                - "read.restrictions.group"
                - "update.restrictions.group"
                - "content"
      responses:
        "200":
          description: "Returned if the restrictions are removed."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ContentRestrictionArray"}
        "400":
          description: "Returned if any of the above validation rules are violated"
        "403":
          description: "Returned if the calling user does not have permission to alter the\nrestrictions on the content."
        "404":
          description: "Returned if;\n\n- There is no content with the given ID.\n- The calling user does not have permission to view the content."
      security:
        - basicAuth: []
        - oAuthDefinitions:
            - write:confluence-content
      x-atlassian-oauth2-scopes: [{"scheme": "oAuthDefinitions", "state": "Current", "scopes": ["write:confluence-content"]}, {"scheme": "oAuthDefinitions", "state": "Beta", "scopes": ["read:content-details:confluence", "write:content.restriction:confluence"]}]
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": false}]
      x-atlassian-connect-scope: "DELETE"
  "/wiki/rest/api/content/{id}/restriction/byOperation":
    get:
      tags:
        - "Content restrictions"
      summary: "Get restrictions by operation"
      description: "Returns restrictions on a piece of content by operation. This method is\nsimilar to [Get restrictions](#api-content-id-restriction-get) except that\nthe operations are properties of the return object, rather than items in\na results array.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the content."
      operationId: "getContentByIdRestrictionByOperationV1"
      parameters:
        - name: "id"
          in: "path"
          description: "The ID of the content to be queried for its restrictions."
          required: true
          schema:
            type: "string"
        - name: "expand"
          in: "query"
          description: "A multi-value parameter indicating which properties of the content\nrestrictions to expand.\n\n- `restrictions.user` returns the piece of content that the restrictions are\napplied to. Expanded by default.\n- `restrictions.group` returns the piece of content that the restrictions are\napplied to. Expanded by default.\n- `content` returns the piece of content that the restrictions are\napplied to."
          style: "form"
          explode: false
          schema:
            type: "array"
            items:
              type: "string"
              enum:
                - "restrictions.user"
                - "restrictions.group"
                - "content"
      responses:
        "200":
          description: "Returned if the requested restrictions are returned."
          content:
            "application/json":
              schema:
                $ref: '#/components/schemas/GetRestrictionsByOperation'
      security:
        - basicAuth: []
        - oAuthDefinitions:
            - read:confluence-content.all
      x-atlassian-oauth2-scopes: [{"scheme": "oAuthDefinitions", "state": "Current", "scopes": ["read:confluence-content.all"]}, {"scheme": "oAuthDefinitions", "state": "Beta", "scopes": ["read:content-details:confluence"]}]
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": false}]
      x-atlassian-connect-scope: "READ"
  "/wiki/rest/api/content/{id}/restriction/byOperation/{operationKey}":
    get:
      tags:
        - "Content restrictions"
      summary: "Get restrictions for operation"
      description: "Returns the restictions on a piece of content for a given operation (read\nor update).\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the content."
      operationId: "getContentByIdRestrictionByOperationByOperationKeyV1"
      parameters:
        - name: "id"
          in: "path"
          description: "The ID of the content to be queried for its restrictions."
          required: true
          schema:
            type: "string"
        - name: "operationKey"
          in: "path"
          description: "The operation type of the restrictions to be returned."
          required: true
          schema:
            type: "string"
            enum:
              - "read"
              - "update"
        - name: "expand"
          in: "query"
          description: "A multi-value parameter indicating which properties of the content\nrestrictions to expand.\n\n- `restrictions.user` returns the piece of content that the restrictions are\napplied to. Expanded by default.\n- `restrictions.group` returns the piece of content that the restrictions are\napplied to. Expanded by default.\n- `content` returns the piece of content that the restrictions are\napplied to."
          style: "form"
          explode: false
          schema:
            type: "array"
            items:
              type: "string"
              enum:
                - "restrictions.user"
                - "restrictions.group"
                - "content"
        - name: "start"
          in: "query"
          description: "The starting index of the users and groups in the returned restrictions."
          schema:
            type: "integer"
            minimum: 0
            format: "int32"
            default: 0
        - name: "limit"
          in: "query"
          description: "The maximum number of users and the maximum number of groups, in the\nreturned restrictions, to return per page. Note, this may be restricted\nby fixed system limits."
          schema:
            type: "integer"
            minimum: 0
            format: "int32"
            default: 100
      responses:
        "200":
          description: "Returned if the requested restrictions are returned."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ContentRestriction"}
      security:
        - basicAuth: []
        - oAuthDefinitions:
            - read:confluence-content.all
      x-atlassian-oauth2-scopes: [{"scheme": "oAuthDefinitions", "state": "Current", "scopes": ["read:confluence-content.all"]}, {"scheme": "oAuthDefinitions", "state": "Beta", "scopes": ["read:content-details:confluence"]}]
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": false}]
      x-atlassian-connect-scope: "READ"
  "/wiki/rest/api/content/{id}/restriction/byOperation/{operationKey}/byGroupId/{groupId}":
    get:
      tags:
        - "Content restrictions"
      summary: "Get content restriction status for group"
      description: "Returns whether the specified content restriction applies to a group.\nFor example, if a page with `id=123` has a `read` restriction for the `123456` group id,\nthe following request will return `true`:\n\n`/wiki/rest/api/content/123/restriction/byOperation/read/byGroupId/123456`\n\nNote that a response of `true` does not guarantee that the group can view the page, as it does not account for\naccount-inherited restrictions, space permissions, or even product access. For more\ninformation, see [Confluence permissions](https://confluence.atlassian.com/x/_AozKw).\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the content."
      operationId: "getContentByIdRestrictionByOperationByOperationKeyByGroupIdByGroupIdV1"
      parameters:
        - name: "id"
          in: "path"
          description: "The ID of the content that the restriction applies to."
          required: true
          schema:
            type: "string"
        - name: "operationKey"
          in: "path"
          description: "The operation that the restriction applies to."
          required: true
          schema:
            type: "string"
            enum:
              - "read"
              - "update"
        - name: "groupId"
          in: "path"
          description: "The id of the group to be queried for whether the content restriction\napplies to it."
          required: true
          schema:
            type: "string"
      responses:
        "200":
          description: "Returns true if the content restriction applies to the group. The response\nwill not return a response body."
        "403":
          description: "Returned if the calling user does not have permission to view the\ncontent."
        "404":
          description: "Returned if\n- There is no content with the given ID.\n- An invalid operation or group is specified.\n- Given groupId is blank or has invalid characters"
      security:
        - basicAuth: []
        - oAuthDefinitions:
            - read:confluence-content.all
      x-atlassian-oauth2-scopes: [{"scheme": "oAuthDefinitions", "state": "Current", "scopes": ["read:confluence-content.all"]}, {"scheme": "oAuthDefinitions", "state": "Beta", "scopes": ["read:content.restriction:confluence"]}]
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": false}]
      x-atlassian-connect-scope: "READ"
    put:
      tags:
        - "Content restrictions"
      summary: "Add group to content restriction"
      description: "Adds a group to a content restriction by Group Id. That is, grant read or update\npermission to the group for a piece of content.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to edit the content."
      operationId: "putContentByIdRestrictionByOperationByOperationKeyByGroupIdByGroupIdV1"
      parameters:
        - name: "id"
          in: "path"
          description: "The ID of the content that the restriction applies to."
          required: true
          schema:
            type: "string"
        - name: "operationKey"
          in: "path"
          description: "The operation that the restriction applies to."
          required: true
          schema:
            type: "string"
            enum:
              - "read"
              - "update"
        - name: "groupId"
          in: "path"
          description: "The groupId of the group to add to the content restriction."
          required: true
          schema:
            type: "string"
      responses:
        "200":
          description: "Returned if the group is added to the content restriction by Group Id. The response\nbody will be empty."
        "400":
          description: "Returned if;\n- Group Id is not valid"
        "403":
          description: "Returned if the calling user does not have permission to update the\ncontent."
        "404":
          description: "Returned if;\n- There is no content with the given ID.\n- The calling user does not have permission to view the content.\n- An invalid operation or group id is specified."
      security:
        - basicAuth: []
        - oAuthDefinitions:
            - write:confluence-content
      x-atlassian-oauth2-scopes: [{"scheme": "oAuthDefinitions", "state": "Current", "scopes": ["write:confluence-content"]}, {"scheme": "oAuthDefinitions", "state": "Beta", "scopes": ["write:content.restriction:confluence"]}]
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": false}]
      x-atlassian-connect-scope: "WRITE"
    delete:
      tags:
        - "Content restrictions"
      summary: "Remove group from content restriction"
      description: "Removes a group from a content restriction. That is, remove read or update\npermission for the group for a piece of content.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to edit the content."
      operationId: "deleteContentByIdRestrictionByOperationByOperationKeyByGroupIdByGroupIdV1"
      parameters:
        - name: "id"
          in: "path"
          description: "The ID of the content that the restriction applies to."
          required: true
          schema:
            type: "string"
        - name: "operationKey"
          in: "path"
          description: "The operation that the restriction applies to."
          required: true
          schema:
            type: "string"
            enum:
              - "read"
              - "update"
        - name: "groupId"
          in: "path"
          description: "The id of the group to remove from the content restriction."
          required: true
          schema:
            type: "string"
      responses:
        "200":
          description: "Returned if the group is removed from the content restriction. The response\nbody will be empty."
        "400":
          description: "Returned if given group id is blank"
        "403":
          description: "Returned if the calling user does not have permission to view the content."
        "404":
          description: "Returned if;\n\n- There is no content with the given ID.\n- The calling user does not have permission to view the content.\n- The restriction to be deleted does not exist."
      security:
        - basicAuth: []
        - oAuthDefinitions:
            - write:confluence-content
      x-atlassian-oauth2-scopes: [{"scheme": "oAuthDefinitions", "state": "Current", "scopes": ["write:confluence-content"]}, {"scheme": "oAuthDefinitions", "state": "Beta", "scopes": ["write:content.restriction:confluence"]}]
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": false}]
      x-atlassian-connect-scope: "WRITE"
  "/wiki/rest/api/content/{id}/restriction/byOperation/{operationKey}/user":
    get:
      tags:
        - "Content restrictions"
      summary: "Get content restriction status for user"
      description: "Returns whether the specified content restriction applies to a user.\nFor example, if a page with `id=123` has a `read` restriction for a user with an account ID of\n`384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192`, the following request will return `true`:\n\n`/wiki/rest/api/content/123/restriction/byOperation/read/user?accountId=384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192`\n\nNote that a response of `true` does not guarantee that the user can view the page, as it does not account for\naccount-inherited restrictions, space permissions, or even product access. For more\ninformation, see [Confluence permissions](https://confluence.atlassian.com/x/_AozKw).\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the content."
      operationId: "getContentByIdRestrictionByOperationByOperationKeyUserV1"
      parameters:
        - name: "id"
          in: "path"
          description: "The ID of the content that the restriction applies to."
          required: true
          schema:
            type: "string"
        - name: "operationKey"
          in: "path"
          description: "The operation that is restricted."
          required: true
          schema:
            type: "string"
        - {"$ref": "#/components/parameters/userLookupKey"}
        - {"$ref": "#/components/parameters/userLookupUsername"}
        - {"$ref": "#/components/parameters/userLookupAccountId"}
      responses:
        "200":
          description: "Return true if the content restriction applies to the user. The response\nbody will be empty."
        "404":
          description: "Returned if;\n\n- There is no content with the given ID.\n- The calling user does not have permission to view the content.\n- An invalid operation or user is specified."
      security:
        - basicAuth: []
        - oAuthDefinitions:
            - read:confluence-content.all
      x-atlassian-oauth2-scopes: [{"scheme": "oAuthDefinitions", "state": "Current", "scopes": ["read:confluence-content.all"]}, {"scheme": "oAuthDefinitions", "state": "Beta", "scopes": ["read:content.restriction:confluence"]}]
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": false}]
      x-atlassian-connect-scope: "READ"
    put:
      tags:
        - "Content restrictions"
      summary: "Add user to content restriction"
      description: "Adds a user to a content restriction. That is, grant read or update\npermission to the user for a piece of content.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to edit the content."
      operationId: "putContentByIdRestrictionByOperationByOperationKeyUserV1"
      parameters:
        - name: "id"
          in: "path"
          description: "The ID of the content that the restriction applies to."
          required: true
          schema:
            type: "string"
        - name: "operationKey"
          in: "path"
          description: "The operation that the restriction applies to."
          required: true
          schema:
            type: "string"
        - {"$ref": "#/components/parameters/userLookupKey"}
        - {"$ref": "#/components/parameters/userLookupUsername"}
        - {"$ref": "#/components/parameters/userLookupAccountId"}
      responses:
        "200":
          description: "Returned if the user is added to the content restriction. The response\nbody will be empty."
        "400":
          description: "Returned if;\n\n- Provided restrictions are invalid"
        "404":
          description: "Returned if;\n\n- There is no content with the given ID.\n- The calling user does not have permission to view the content.\n- An invalid operation or group is specified."
      security:
        - basicAuth: []
        - oAuthDefinitions:
            - write:confluence-content
      x-atlassian-oauth2-scopes: [{"scheme": "oAuthDefinitions", "state": "Current", "scopes": ["write:confluence-content"]}, {"scheme": "oAuthDefinitions", "state": "Beta", "scopes": ["write:content.restriction:confluence"]}]
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": false}]
      x-atlassian-connect-scope: "WRITE"
    delete:
      tags:
        - "Content restrictions"
      summary: "Remove user from content restriction"
      description: "Removes a group from a content restriction. That is, remove read or update\npermission for the group for a piece of content.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to edit the content."
      operationId: "deleteContentByIdRestrictionByOperationByOperationKeyUserV1"
      parameters:
        - name: "id"
          in: "path"
          description: "The ID of the content that the restriction applies to."
          required: true
          schema:
            type: "string"
        - name: "operationKey"
          in: "path"
          description: "The operation that the restriction applies to."
          required: true
          schema:
            type: "string"
            enum:
              - "read"
              - "update"
        - {"$ref": "#/components/parameters/userLookupKey"}
        - {"$ref": "#/components/parameters/userLookupUsername"}
        - {"$ref": "#/components/parameters/userLookupAccountId"}
      responses:
        "200":
          description: "Returned if the user is removed from the content restriction. The response\nbody will be empty."
        "404":
          description: "Returned if;\n\n- There is no content with the given ID.\n- The calling user does not have permission to view the content.\n- An invalid operation or group is specified."
      security:
        - basicAuth: []
        - oAuthDefinitions:
            - write:confluence-content
      x-atlassian-oauth2-scopes: [{"scheme": "oAuthDefinitions", "state": "Current", "scopes": ["write:confluence-content"]}, {"scheme": "oAuthDefinitions", "state": "Beta", "scopes": ["write:content.restriction:confluence"]}]
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": false}]
      x-atlassian-connect-scope: "WRITE"
  "/wiki/rest/api/content/{id}/state":
    get:
      tags:
        - "Content states"
      summary: "Get content state"
      description: "Gets the current content state of the draft or current version of content. To specify the draft version, set\nthe parameter status to draft, otherwise archived or current will get the relevant published state.\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the content."
      operationId: "getContentByIdStateV1"
      parameters:
        - name: "id"
          in: "path"
          description: "The id of the content whose content state is of interest."
          required: true
          schema:
            type: "string"
        - name: "status"
          in: "query"
          description: "Set status to one of [current,draft,archived]. Default value is current."
          schema:
            type: "string"
            enum:
              - "current"
              - "draft"
              - "archived"
            default: "current"
      responses:
        "200":
          description: "Returned if permission allows viewing of content."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ContentStateResponse"}
        "401":
          description: "Returned if the authentication credentials are incorrect or missing from the request."
        "403":
          description: "Returned if user does not have content view permission."
        "404":
          description: "Returned if the content with given id can not be found."
      security:
        - basicAuth: []
        - oAuthDefinitions:
            - read:confluence-content.summary
      x-atlassian-oauth2-scopes: [{"scheme": "oAuthDefinitions", "state": "Current", "scopes": ["read:confluence-content.summary"]}, {"scheme": "oAuthDefinitions", "state": "Beta", "scopes": ["read:content-details:confluence"]}]
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": false}]
      x-atlassian-connect-scope: "READ"
    put:
      tags:
        - "Content states"
      summary: "Set the content state of a content and publishes a new version of the content."
      description: "Sets the content state of the content specified and creates a new version\n(publishes the content without changing the body) of the content with the new state.\n\nYou may pass in either an id of a state, or the name and color of a desired new state.\nIf all 3 are passed in, id will be used.\nIf the name and color passed in already exist under the current user's existing custom states, the existing state will be reused.\nIf custom states are disabled in the space of the content (which can be determined by getting the content state space settings of the content's space)\nthen this set will fail.\n\nYou may not remove a content state via this PUT request. You must use the DELETE method. A specified state is required in the body of this request.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to edit the content."
      operationId: "putContentByIdStateV1"
      parameters:
        - name: "id"
          in: "path"
          description: "The Id of the content whose content state is to be set."
          required: true
          schema:
            type: "string"
        - name: "status"
          in: "query"
          description: "Status of content onto which state will be placed. If draft, then draft state will change.\nIf current, state will be placed onto a new version of the content with same body as previous version."
          required: true
          schema:
            type: "string"
            enum:
              - "current"
              - "draft"
      requestBody:
        description: "Content state fields for state. Pass in id for an existing state, or new name and color for best matching existing state, or new state if allowed in space."
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/ContentStateRestInput"}
        required: true
      responses:
        "200":
          description: "Returned if content state is set successfully."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ContentStateResponse"}
        "400":
          description: "Invalid Name/Color, non-existent id of content state, or type of state desired is not allowed.\nName must be less than or exactly 20 characters. Color must be a valid hex string.\nStatus must be in [draft,current]."
        "401":
          description: "Returned if the authentication credentials are incorrect or missing from the request."
        "403":
          description: "Returned if user does not have content edit permission."
        "404":
          description: "Returned if the content with given id can not be found."
      security:
        - basicAuth: []
        - oAuthDefinitions:
            - write:confluence-content
      x-atlassian-oauth2-scopes: [{"scheme": "oAuthDefinitions", "state": "Current", "scopes": ["write:confluence-content"]}, {"scheme": "oAuthDefinitions", "state": "Beta", "scopes": ["write:content:confluence", "read:content-details:confluence"]}]
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": false}]
      x-atlassian-connect-scope: "WRITE"
    delete:
      tags:
        - "Content states"
      summary: "Removes the content state of a content and publishes a new version."
      description: "Removes the content state of the content specified and creates a new version\n(publishes the content without changing the body) of the content with the new status.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to edit the content."
      operationId: "deleteContentByIdStateV1"
      parameters:
        - name: "id"
          in: "path"
          description: "The Id of the content whose content state is to be set."
          required: true
          schema:
            type: "string"
        - name: "status"
          in: "query"
          description: "status of content state from which to delete state. Can be draft or archived"
          schema:
            type: "string"
            enum:
              - "current"
              - "draft"
      responses:
        "200":
          description: "Returned if content state is removed from content."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ContentStateResponse"}
        "401":
          description: "Returned if the authentication credentials are incorrect or missing from the request."
        "403":
          description: "Returned if user does not have content edit permission."
        "404":
          description: "Returned if the content with given id can not be found."
      security:
        - basicAuth: []
        - oAuthDefinitions:
            - write:confluence-content
      x-atlassian-oauth2-scopes: [{"scheme": "oAuthDefinitions", "state": "Current", "scopes": ["write:confluence-content"]}, {"scheme": "oAuthDefinitions", "state": "Beta", "scopes": ["write:content:confluence", "read:content-details:confluence"]}]
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": false}]
      x-atlassian-connect-scope: "WRITE"
  "/wiki/rest/api/content/{id}/state/available":
    get:
      tags:
        - "Content states"
      summary: "Gets available content states for content."
      description: "Gets content states that are available for the content to be set as.\nWill return all enabled Space Content States.\nWill only return most the 3 most recently published custom content states to match UI editor list.\nTo get all custom content states, use the /content-states endpoint.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to edit the content."
      operationId: "getContentByIdStateAvailableV1"
      parameters:
        - name: "id"
          in: "path"
          description: "id of content to get available states for"
          required: true
          schema:
            type: "string"
      responses:
        "200":
          description: "Returned if the content is found and permission is valid."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/AvailableContentStates"}
        "400":
          description: "Invalid status for content. Must be in [current,draft,archived]."
        "401":
          description: "Returned if the authentication credentials are incorrect or missing from the request."
        "403":
          description: "Returned if user does not have content edit permission."
        "404":
          description: "Returned if the content with given id can not be found."
      security:
        - basicAuth: []
        - oAuthDefinitions:
            - write:confluence-content
      x-atlassian-oauth2-scopes: [{"scheme": "oAuthDefinitions", "state": "Current", "scopes": ["write:confluence-content"]}, {"scheme": "oAuthDefinitions", "state": "Beta", "scopes": ["write:content:confluence"]}]
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": false}]
      x-atlassian-connect-scope: "READ"
  "/wiki/rest/api/content/{id}/version":
    post:
      tags:
        - "Content versions"
      summary: "Restore content version"
      description: "Restores a historical version to be the latest version. That is, a new version\nis created with the content of the historical version.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to update the content."
      operationId: "postContentByIdVersionV1"
      parameters:
        - name: "id"
          in: "path"
          description: "The ID of the content for which the history will be restored."
          required: true
          schema:
            type: "string"
        - name: "expand"
          in: "query"
          description: "A multi-value parameter indicating which properties of the content to expand. By default, the `content`\nobject is expanded.\n\n- `collaborators` returns the users that collaborated on the version.\n- `content` returns the content for the version."
          style: "form"
          explode: false
          schema:
            type: "array"
            items:
              type: "string"
      requestBody:
        description: "The content version to be restored."
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/VersionRestore"}
        required: true
      responses:
        "200":
          description: "Returned if the version is restored."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/Version"}
        "400":
          description: "Returned if;\n\n- There is no content with the given ID.\n- There is no version with the given version number.\n- The version number is the current version."
        "403":
          description: "Returned if the calling user doesn't have permission to edit the\ncontent."
      security:
        - basicAuth: []
        - oAuthDefinitions:
            - write:confluence-content
      x-atlassian-oauth2-scopes: [{"scheme": "oAuthDefinitions", "state": "Current", "scopes": ["write:confluence-content"]}, {"scheme": "oAuthDefinitions", "state": "Beta", "scopes": ["read:content-details:confluence", "write:content:confluence"]}]
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": false}]
      x-codegen-request-body-name: "body"
      x-atlassian-connect-scope: "WRITE"
  "/wiki/rest/api/content/{id}/version/{versionNumber}":
    delete:
      tags:
        - "Content versions"
      summary: "Delete content version"
      description: "Delete a historical version. This does not delete the changes made to the\ncontent in that version, rather the changes for the deleted version are\nrolled up into the next version. Note, you cannot delete the current version.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to update the content."
      operationId: "deleteContentByIdVersionByVersionNumberV1"
      parameters:
        - name: "id"
          in: "path"
          description: "The ID of the content that the version will be deleted from."
          required: true
          schema:
            type: "string"
        - name: "versionNumber"
          in: "path"
          description: "The number of the version to be deleted. The version number starts\nfrom 1 up to current version."
          required: true
          schema:
            type: "integer"
            format: "int32"
      responses:
        "204":
          description: "Returned if the version is deleted."
        "400":
          description: "Returned if;\n\n- The content or version cannot be found.\n- The current version is specified."
        "403":
          description: "Returned if the calling user doesn't have permission to edit the\ncontent."
      security:
        - basicAuth: []
        - oAuthDefinitions:
            - write:confluence-content
      x-atlassian-oauth2-scopes: [{"scheme": "oAuthDefinitions", "state": "Current", "scopes": ["write:confluence-content"]}, {"scheme": "oAuthDefinitions", "state": "Beta", "scopes": ["delete:content:confluence"]}]
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": false}]
      x-atlassian-connect-scope: "DELETE"
  "/wiki/rest/api/content-states":
    get:
      tags:
        - "Content states"
      summary: "Get Custom Content States"
      description: "Get custom content states that authenticated user has created.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**\nMust have user authentication."
      operationId: "getContentStatesV1"
      responses:
        "200":
          description: "Custom Content States that user has crated. Returned if user authenticated."
          content:
            "application/json":
              schema:
                $ref: '#/components/schemas/GetCustomContentStatesR200'
        "401":
          description: "Returned if user is not authenticated."
      security:
        - basicAuth: []
        - oAuthDefinitions:
            - read:user.property:confluence
      x-atlassian-oauth2-scopes: [{"scheme": "oAuthDefinitions", "state": "Current", "scopes": ["read:user.property:confluence"]}, {"scheme": "oAuthDefinitions", "state": "Beta", "scopes": ["read:user.property:confluence"]}]
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": false}]
      x-atlassian-connect-scope: "READ"
  "/wiki/rest/api/contentbody/convert/async/{to}":
    post:
      tags:
        - "Content body"
      summary: "Asynchronously convert content body"
      description: "Converts a content body from one format to another format asynchronously.\nReturns the asyncId for the asynchronous task.\n\nSupported conversions:\n\n- atlas_doc_format: editor, export_view, storage, styled_view, view\n- storage: atlas_doc_format, editor, export_view, styled_view, view\n- editor: storage\n\nNo other conversions are supported at the moment.\nOnce a conversion is completed, it will be available for 5 minutes at the result endpoint.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nIf request specifies 'contentIdContext', 'View' permission for the space, and permission to view the content."
      operationId: "postContentbodyConvertAsyncByToV1"
      parameters:
        - name: "to"
          in: "path"
          description: "The name of the target format for the content body."
          required: true
          schema:
            type: "string"
            enum:
              - "export_view"
        - {"$ref": "#/components/parameters/bodyConversionExpand"}
        - name: "spaceKeyContext"
          in: "query"
          description: "The space key used for resolving embedded content (page includes,\nfiles, and links) in the content body. For example, if the source content\ncontains the link `<ac:link><ri:page ri:content-title=\"Example page\" /><ac:link>`\nand the `spaceKeyContext=TEST` parameter is provided, then the link\nwill be converted to a link to the \"Example page\" page in the \"TEST\" space."
          schema:
            type: "string"
        - name: "contentIdContext"
          in: "query"
          description: "The content ID used to find the space for resolving embedded content\n(page includes, files, and links) in the content body. For example,\nif the source content contains the link `<ac:link><ri:page ri:content-title=\"Example page\" /><ac:link>`\nand the `contentIdContext=123` parameter is provided, then the link\nwill be converted to a link to the \"Example page\" page in the same space\nthat has the content with ID=123. Note, `spaceKeyContext` will be ignored\nif this parameter is provided."
          schema:
            type: "string"
        - name: "allowCache"
          in: "query"
          description: "If this field is false, the cache will erase its current value and begin a new conversion.\nIf this field is true, the cache will not erase its current value, and will set the status of the\nasync conversion to RERUNNING. Once the data is updated, the status will change to COMPLETED. \nLarge macros that take long to convert, and whose data need not immediately up to date (same as previous conversion's result within last 5 minutes)\nshould set this fields to true. Cache values are stored per user per content body and expansions."
          schema:
            type: "boolean"
            default: false
        - name: "embeddedContentRender"
          in: "query"
          description: "Mode used for rendering embedded content, like attachments.\n\n- `current` renders the embedded content using the latest version.\n- `version-at-save` renders the embedded content using the version at\nthe time of save."
          schema:
            type: "string"
            enum:
              - "current"
              - "version-at-save"
            default: "current"
      requestBody:
        description: "The content body to convert."
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/ContentBodyCreate"}
        required: true
      responses:
        "200":
          description: "Returned if the content is added to the messaging queue for conversion. This id will be available for 5 minutes after the conversion is complete."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/AsyncId"}
        "400":
          description: "Returned\n- if the content body or conversion context is invalid or null\n- if the value is improperly formed\n- any conversion type other than export_view"
        "404":
          description: "Returned if content cannot be found with the provided context."
      security:
        - basicAuth: []
        - oAuthDefinitions:
            - read:confluence-content.all
      x-atlassian-oauth2-scopes: [{"scheme": "oAuthDefinitions", "state": "Current", "scopes": ["read:confluence-content.all"]}, {"scheme": "oAuthDefinitions", "state": "Beta", "scopes": ["read:content.metadata:confluence"]}]
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": true}]
      x-codegen-request-body-name: "body"
      x-atlassian-connect-scope: "READ"
  "/wiki/rest/api/contentbody/convert/async/{id}":
    get:
      tags:
        - "Content body"
      summary: "Get asynchronously converted content body from the id or the current status of the task."
      description: "Returns the asynchronous content body for the corresponding id if the task is complete \nor returns the status of the task.\n\nAfter the task is completed, the result can be obtained for 5 minutes, or until an identical conversion request is made again,\nwith allowCache query param set to false.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nIf request specifies 'contentIdContext', 'View' permission for the space, and permission to view the content."
      operationId: "getContentbodyConvertAsyncByIdV1"
      parameters:
        - name: "id"
          in: "path"
          description: "The asyncId of the macro task to get the converted body."
          required: true
          schema:
            type: "string"
      responses:
        "200":
          description: "Returned if successfully found an async conversion task associated with the id."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/AsyncContentBody"}
        "400":
          description: "Returned if the async id is invalid."
        "401":
          description: "Returned if the request was not made by an anonymous user and user is not authenticated."
        "403":
          description: "Returned if the requesting user is not the user who made the conversion request."
        "404":
          description: "Returned if async macro conversion task cannot be found with the provided id."
      security:
        - basicAuth: []
        - oAuthDefinitions:
            - read:confluence-content.all
      x-atlassian-oauth2-scopes: [{"scheme": "oAuthDefinitions", "state": "Current", "scopes": ["read:confluence-content.all"]}, {"scheme": "oAuthDefinitions", "state": "Beta", "scopes": ["read:content.metadata:confluence"]}]
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": true}]
      x-codegen-request-body-name: "body"
      x-atlassian-connect-scope: "READ"
  "/wiki/rest/api/contentbody/convert/async/bulk/tasks":
    get:
      tags:
        - "Content body"
      summary: "Get asynchronous content body conversion task result in bulk"
      description: "Returns the content body for the corresponding `asyncId` of a completed conversion task. If\nthe task is not completed, the task status is returned instead.\n\nOnce a conversion task is completed, the result can be obtained for up to 5 minutes, or\nuntil an identical conversion request is made again with the `allowCache` parameter set to\nfalse.\n\nNote that there is a maximum limit of 50 task results per request to this endpoint.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to access the Confluence site ('Can use' global permission)."
      operationId: "getContentbodyConvertAsyncBulkTasksV1"
      parameters:
        - name: "ids"
          in: "query"
          description: "The asyncIds of the conversion tasks."
          required: true
          schema:
            type: "array"
            items:
              type: "string"
      responses:
        "200":
          description: "Returned if asynchronous conversion tasks are successfully found."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/AsyncContentBodyArray"}
        "400":
          description: "Returned if there are more than 50 results requested."
      security:
        - basicAuth: []
        - oAuthDefinitions:
            - read:confluence-content.all
      x-atlassian-oauth2-scopes: [{"scheme": "oAuthDefinitions", "state": "Current", "scopes": ["read:confluence-content.all"]}, {"scheme": "oAuthDefinitions", "state": "Beta", "scopes": ["read:content.metadata:confluence"]}]
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": true}]
      x-codegen-request-body-name: "body"
      x-atlassian-connect-scope: "READ"
    post:
      tags:
        - "Content body"
      summary: "Create asynchronous content body conversion tasks in bulk"
      description: "Asynchronously converts content bodies from one format to another format in bulk. Use the Content body\nREST API to get the status of conversion tasks. Note that there is a maximum limit of 10 conversions per\nrequest to this endpoint.\n\nSupported conversions:\n\n- storage: editor, export_view, styled_view, view\n- editor: storage\n\nOnce a conversion task is completed, it is available for polling for up to 5 minutes.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n'View' permission for the space, and permission to view the content if the `spaceKeyContext` or\n`contentIdContext` are present."
      operationId: "postContentbodyConvertAsyncBulkTasksV1"
      requestBody:
        description: "An array of parameters to create content body conversion tasks."
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/ContentBodyConversionInputArray"}
        required: true
      responses:
        "200":
          description: "Returned if asynchronous tasks are created to convert content bodies. If a conversion task fails to be created, a “FAILED_TO_QUEUE” string will be returned instead of an asyncId."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/AsyncIdArray"}
        "400":
          description: "Returned if there are more than 10 conversions requested."
      security:
        - basicAuth: []
        - oAuthDefinitions:
            - read:confluence-content.all
      x-atlassian-oauth2-scopes: [{"scheme": "oAuthDefinitions", "state": "Current", "scopes": ["read:confluence-content.all"]}, {"scheme": "oAuthDefinitions", "state": "Beta", "scopes": ["read:content.metadata:confluence"]}]
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": true}]
      x-codegen-request-body-name: "body"
      x-atlassian-connect-scope: "READ"
  "/wiki/rest/api/label":
    get:
      tags:
        - "Label info"
      summary: "Get label information"
      description: "Returns label information and a list of contents associated with the label.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to access the Confluence site ('Can use' global permission). Only contents\nthat the user is permitted to view is returned."
      operationId: "getLabelV1"
      parameters:
        - name: "name"
          in: "query"
          description: "Name of the label to query."
          required: true
          schema:
            type: "string"
            default:
        - name: "type"
          in: "query"
          description: "The type of contents that are to be returned."
          schema:
            type: "string"
            enum:
              - "page"
              - "blogpost"
              - "attachment"
              - "page_template"
            default:
        - name: "start"
          in: "query"
          description: "The starting offset for the results."
          schema:
            type: "integer"
            format: "int32"
            default: 0
        - name: "limit"
          in: "query"
          description: "The number of results to be returned."
          schema:
            type: "integer"
            format: "int32"
            default: 200
      responses:
        "200":
          description: "Returned if the query fetches zero or more results."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/LabelDetails"}
        "400":
          description: "Returned if no label name is provide or\nif content type provided in the query is invalid."
        "403":
          description: "Returned if the calling user does not have permission to view\nany content including label info."
        "404":
          description: "Returned if the lable name is invalid or if no label is found for a given label."
      security:
        - basicAuth: []
        - oAuthDefinitions:
            - read:confluence-content.summary
      x-atlassian-oauth2-scopes: [{"scheme": "oAuthDefinitions", "state": "Current", "scopes": ["read:confluence-content.summary"]}, {"scheme": "oAuthDefinitions", "state": "Beta", "scopes": ["read:label:confluence", "read:content:confluence"]}]
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": false}]
      x-atlassian-connect-scope: "READ"
  "/wiki/rest/api/group":
    get:
      tags:
        - "Group"
      summary: "Get groups"
      description: "Returns all user groups. The returned groups are ordered alphabetically in\nascending order by group name.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to access the Confluence site ('Can use' global permission)."
      operationId: "getGroupV1"
      parameters:
        - name: "start"
          in: "query"
          description: "The starting index of the returned groups."
          schema:
            type: "integer"
            minimum: 0
            format: "int32"
            default: 0
        - name: "limit"
          in: "query"
          description: "The maximum number of groups to return per page.\nNote, this may be restricted by fixed system limits."
          schema:
            type: "integer"
            minimum: 0
            format: "int32"
            default: 200
        - name: "accessType"
          in: "query"
          description: "The group permission level for which to filter results."
          required: false
          schema:
            type: "string"
            enum:
              - "user"
              - "admin"
              - "site-admin"
            default:
      responses:
        "200":
          description: "Returned if the requested groups are returned."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/GroupArrayWithLinks"}
        "403":
          description: "Returned if the calling user does not have permission to view\ngroups."
      security:
        - basicAuth: []
        - oAuthDefinitions:
            - read:confluence-groups
      x-atlassian-oauth2-scopes: [{"scheme": "oAuthDefinitions", "state": "Current", "scopes": ["read:confluence-groups"]}, {"scheme": "oAuthDefinitions", "state": "Beta", "scopes": ["read:group:confluence"]}]
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": true}]
      x-atlassian-connect-scope: "READ"
    post:
      tags:
        - "Group"
      summary: "Create new user group"
      description: "Creates a new user group.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nUser must be a site admin."
      operationId: "postGroupV1"
      requestBody:
        description: "Name of the group that is to be created."
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/GroupName"}
        required: true
      responses:
        "201":
          description: "Returned if the group was created successfully."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/Group"}
        "400":
          description: "Returned if the name is missing or invalid."
        "401":
          description: "Returned if the calling user is not logged in to Confluence."
        "403":
          description: "Returned if the user is not a site admin."
      security:
        - basicAuth: []
        - oAuthDefinitions:
            - write:confluence-groups
      x-atlassian-oauth2-scopes: [{"scheme": "oAuthDefinitions", "state": "Current", "scopes": ["write:confluence-groups"]}, {"scheme": "oAuthDefinitions", "state": "Beta", "scopes": ["read:group:confluence", "write:group:confluence"]}]
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": true}]
      x-codegen-request-body-name: "body"
      x-atlassian-connect-scope: "INACCESSIBLE"
  "/wiki/rest/api/group/by-id":
    get:
      tags:
        - "Group"
      summary: "Get group"
      description: "Returns a user group for a given group id.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to access the Confluence site ('Can use' global permission)."
      operationId: "getGroupByIdV1"
      parameters:
        - name: "id"
          in: "query"
          description: "The id of the group."
          required: true
          schema:
            type: "string"
      responses:
        "200":
          description: "Returned if the requested group is returned."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/Group"}
        "403":
          description: "Returned if the calling user does not have permission to view\ngroups."
        "404":
          description: "Returned if the group does not exist."
      security:
        - basicAuth: []
        - oAuthDefinitions:
            - read:confluence-groups
      x-atlassian-oauth2-scopes: [{"scheme": "oAuthDefinitions", "state": "Current", "scopes": ["read:confluence-groups"]}, {"scheme": "oAuthDefinitions", "state": "Beta", "scopes": ["read:group:confluence"]}]
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": true}]
      x-atlassian-connect-scope: "READ"
    delete:
      tags:
        - "Group"
      summary: "Delete user group"
      description: "Delete user group.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nUser must be a site admin."
      operationId: "deleteGroupByIdV1"
      parameters:
        - name: "id"
          in: "query"
          description: "Id of the group to delete."
          required: true
          schema:
            type: "string"
      responses:
        "204":
          description: "Returned if the group was removed successfully."
        "400":
          description: "Returned if the id is missing or invalid."
        "401":
          description: "Returned if the calling user is not logged in to Confluence."
        "403":
          description: "Returned if the user is not a site admin."
        "404":
          description: "If no user group by the given id exists."
      security:
        - basicAuth: []
        - oAuthDefinitions:
            - write:confluence-groups
      x-atlassian-oauth2-scopes: [{"scheme": "oAuthDefinitions", "state": "Current", "scopes": ["write:confluence-groups"]}, {"scheme": "oAuthDefinitions", "state": "Beta", "scopes": ["write:group:confluence"]}]
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": true}]
      x-atlassian-connect-scope: "INACCESSIBLE"
  "/wiki/rest/api/group/picker":
    get:
      tags:
        - "Group"
      summary: "Search groups by partial query"
      description: "Get search results of groups by partial query provided."
      operationId: "getGroupPickerV1"
      parameters:
        - name: "query"
          in: "query"
          description: "the search term used to query results."
          required: true
          schema:
            type: "string"
        - name: "start"
          in: "query"
          description: "The starting index of the returned groups."
          schema:
            type: "integer"
            minimum: 0
            format: "int32"
            default: 0
        - name: "limit"
          in: "query"
          description: "The maximum number of groups to return per page.\nNote, this is restricted to a maximum limit of 200 groups."
          schema:
            type: "integer"
            minimum: 0
            format: "int32"
            default: 200
        - name: "shouldReturnTotalSize"
          in: "query"
          description: "Whether to include total size parameter in the results.\nNote, fetching total size property is an expensive operation; use it if your use case needs this value."
          schema:
            type: "boolean"
            default: false
      responses:
        "200":
          description: "Returns a full JSON representation of group collection."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/GroupArrayWithLinks"}
        "403":
          description: "Returned if the calling user does not have permission to view\ngroups."
      security:
        - basicAuth: []
        - oAuthDefinitions:
            - read:confluence-groups
      x-atlassian-oauth2-scopes: [{"scheme": "oAuthDefinitions", "state": "Current", "scopes": ["read:confluence-groups"]}, {"scheme": "oAuthDefinitions", "state": "Beta", "scopes": ["read:group:confluence"]}]
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": true}]
      x-atlassian-connect-scope: "READ"
  "/wiki/rest/api/group/{groupId}/membersByGroupId":
    get:
      tags:
        - "Group"
      summary: "Get group members"
      description: "Returns the users that are members of a group.\n\nUse updated Get group API\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to access the Confluence site ('Can use' global permission)."
      operationId: "getGroupByGroupIdMembersByGroupIdV1"
      parameters:
        - name: "groupId"
          in: "path"
          description: "The id of the group to be queried for its members."
          required: true
          schema:
            type: "string"
        - name: "start"
          in: "query"
          description: "The starting index of the returned users."
          schema:
            type: "integer"
            minimum: 0
            format: "int32"
            default: 0
        - name: "limit"
          in: "query"
          description: "The maximum number of users to return per page.\nNote, this may be restricted by fixed system limits."
          schema:
            type: "integer"
            minimum: 0
            format: "int32"
            default: 200
        - name: "shouldReturnTotalSize"
          in: "query"
          description: "Whether to include total size parameter in the results.\nNote, fetching total size property is an expensive operation; use it if your use case needs this value."
          schema:
            type: "boolean"
            default: false
        - name: "expand"
          in: "query"
          description: "A multi-value parameter indicating which properties of the user to\nexpand.\n\n  - `operations` returns the operations that the user is allowed to do.\n  - `personalSpace` returns the user's personal space, if it exists.\n  - `isExternalCollaborator`(@deprecated) see `isGuest` in response to find out whether the user is a guest."
          style: "form"
          explode: false
          schema:
            type: "array"
            items:
              type: "string"
              enum:
                - "operations"
                - "personalSpace"
                - "isExternalCollaborator"
      responses:
        "200":
          description: "Returned if the requested users are returned."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/UserArray"}
        "400":
          description: "Returned if given limit is greater than 200"
        "403":
          description: "Returned if the calling user does not have permission to view users."
      security:
        - basicAuth: []
        - oAuthDefinitions:
            - read:confluence-groups
      x-atlassian-oauth2-scopes: [{"scheme": "oAuthDefinitions", "state": "Current", "scopes": ["read:confluence-groups"]}, {"scheme": "oAuthDefinitions", "state": "Beta", "scopes": ["read:group:confluence", "read:user:confluence"]}]
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": true}]
      x-atlassian-connect-scope: "READ"
  "/wiki/rest/api/group/userByGroupId":
    post:
      tags:
        - "Group"
      summary: "Add member to group by groupId"
      description: "Adds a user as a member in a group represented by its groupId\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nUser must be a site admin."
      operationId: "postGroupUserByGroupIdV1"
      parameters:
        - name: "groupId"
          in: "query"
          description: "GroupId of the group whose membership is updated"
          required: true
          schema:
            type: "string"
      requestBody:
        description: "AccountId of the user who needs to be added as member."
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/AccountId"}
        required: true
      responses:
        "201":
          description: "Returned if the group was created successfully."
        "400":
          description: "Returned if the groupId or accountId are missing or invalid."
        "401":
          description: "Returned if the calling user is not logged in to Confluence."
        "403":
          description: "Returned if the user is not a site admin."
        "404":
          description: "If no user group by the give name exists."
      security:
        - basicAuth: []
        - oAuthDefinitions:
            - write:confluence-groups
      x-atlassian-oauth2-scopes: [{"scheme": "oAuthDefinitions", "state": "Current", "scopes": ["write:confluence-groups"]}, {"scheme": "oAuthDefinitions", "state": "Beta", "scopes": ["write:group:confluence"]}]
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": true}]
      x-codegen-request-body-name: "body"
      x-atlassian-connect-scope: "INACCESSIBLE"
    delete:
      tags:
        - "Group"
      summary: "Remove member from group using group id"
      description: "Remove user as a member from a group.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nUser must be a site admin."
      operationId: "deleteGroupUserByGroupIdV1"
      parameters:
        - name: "groupId"
          in: "query"
          description: "Id of the group whose membership is updated."
          required: true
          schema:
            type: "string"
        - name: "accountId"
          in: "query"
          description: "The account ID of the user. The accountId uniquely identifies the user across all Atlassian products.\nFor example, `384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192`."
          required: true
          schema:
            type: "string"
        - {"$ref": "#/components/parameters/userLookupKey"}
        - {"$ref": "#/components/parameters/userLookupUsername"}
      responses:
        "204":
          description: "Returned if the group was removed successfully."
        "400":
          description: "Returned if the name is missing or invalid."
        "401":
          description: "Returned if the calling user is not logged in to Confluence."
        "403":
          description: "Returned if the user is not a site admin.\nNote: A 204 is returned if the user is not part of the\ngroup."
        "404":
          description: "If no user group by the give name exists or if no user exists\nfor the given accountId."
      security:
        - basicAuth: []
        - oAuthDefinitions:
            - write:confluence-groups
      x-atlassian-oauth2-scopes: [{"scheme": "oAuthDefinitions", "state": "Current", "scopes": ["write:confluence-groups"]}, {"scheme": "oAuthDefinitions", "state": "Beta", "scopes": ["write:group:confluence"]}]
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": true}]
      x-atlassian-connect-scope: "INACCESSIBLE"
  "/wiki/rest/api/longtask":
    get:
      tags:
        - "Long-running task"
      summary: "Get long-running tasks"
      description: "Returns information about all active long-running tasks (e.g. space export),\nsuch as how long each task has been running and the percentage of each task\nthat has completed.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to access the Confluence site ('Can use' global permission)."
      operationId: "getLongtaskV1"
      parameters:
        - name: "key"
          in: "query"
          description: "The key of the tasks."
          required: false
          schema:
            type: "string"
        - name: "start"
          in: "query"
          description: "The starting index of the returned tasks."
          schema:
            type: "integer"
            minimum: 0
            format: "int32"
            default: 0
        - name: "limit"
          in: "query"
          description: "The maximum number of tasks to return per page. Note, this may be\nrestricted by fixed system limits."
          schema:
            type: "integer"
            minimum: 0
            format: "int32"
            default: 100
      responses:
        "200":
          description: "Returned if the requested tasks are returned."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/LongTaskStatusArray"}
        "401":
          description: "Returned if the calling user is not logged in to Confluence."
      security:
        - basicAuth: []
        - oAuthDefinitions:
            - read:content.metadata:confluence
      x-atlassian-oauth2-scopes: [{"scheme": "oAuthDefinitions", "state": "Current", "scopes": ["read:content.metadata:confluence"]}]
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": true}]
      x-atlassian-connect-scope: "READ"
  "/wiki/rest/api/longtask/{id}":
    get:
      tags:
        - "Long-running task"
      summary: "Get long-running task"
      description: "Returns information about an active long-running task (e.g. space export),\nsuch as how long it has been running and the percentage of the task that\nhas completed.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to access the Confluence site ('Can use' global permission)."
      operationId: "getLongtaskByIdV1"
      parameters:
        - name: "id"
          in: "path"
          description: "The ID of the task."
          required: true
          schema:
            type: "string"
      responses:
        "200":
          description: "Returned if the requested task is returned."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/LongTaskStatusWithLinks"}
        "401":
          description: "Returned if the calling user is not logged in to Confluence."
        "404":
          description: "Returned if;\n\n- There is no task with the given ID.\n- The calling user does not have permission to view the task."
      security:
        - basicAuth: []
        - oAuthDefinitions:
            - read:confluence-space.summary
      x-atlassian-oauth2-scopes: [{"scheme": "oAuthDefinitions", "state": "Current", "scopes": ["read:confluence-space.summary"]}, {"scheme": "oAuthDefinitions", "state": "Beta", "scopes": ["read:content.metadata:confluence"]}]
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": true}]
      x-atlassian-connect-scope: "READ"
  "/wiki/rest/api/relation/{relationName}/from/{sourceType}/{sourceKey}/to/{targetType}":
    get:
      tags:
        - "Relation"
      summary: "Find target entities related to a source entity"
      description: "Returns all target entities that have a particular relationship to the\nsource entity. Note, relationships are one way.\n\nFor example, the following method finds all content that the current user\nhas an 'ignore' relationship with:\n`GET /wiki/rest/api/relation/ignore/from/user/current/to/content`\nNote, 'ignore' is an example custom relationship type.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view both the target entity and source entity."
      operationId: "getRelationByRelationNameFromBySourceTypeBySourceKeyToByTargetTypeV1"
      parameters:
        - name: "relationName"
          in: "path"
          description: "The name of the relationship. This method supports relationships created via\n[Create relationship](#api-wiki-rest-api-relation-relationname-from-sourcetype-sourcekey-to-targettype-targetkey-put).\nNote, this method does not support 'like' or 'favourite' relationships."
          required: true
          schema:
            type: "string"
        - name: "sourceType"
          in: "path"
          description: "The source entity type of the relationship."
          required: true
          schema:
            type: "string"
            enum:
              - "user"
              - "content"
              - "space"
        - name: "sourceKey"
          in: "path"
          description: "The identifier for the source entity:\n\n- If `sourceType` is `user`, then specify either `current` (logged-in user), the user key of the user, or\nthe account ID of the user. Note that the user key has been deprecated in favor of the account ID for this parameter. See the\n[migration guide](https://developer.atlassian.com/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/)\nfor details.\n- If `sourceType` is 'content', then specify the content ID.\n- If `sourceType` is 'space', then specify the space key."
          required: true
          schema:
            type: "string"
        - name: "targetType"
          in: "path"
          description: "The target entity type of the relationship."
          required: true
          schema:
            type: "string"
            enum:
              - "user"
              - "content"
              - "space"
        - name: "sourceStatus"
          in: "query"
          description: "The status of the source. This parameter is only used when the\n`sourceType` is 'content'."
          schema:
            type: "string"
        - name: "targetStatus"
          in: "query"
          description: "The status of the target. This parameter is only used when the\n`targetType` is 'content'."
          schema:
            type: "string"
        - name: "sourceVersion"
          in: "query"
          description: "The version of the source. This parameter is only used when the\n`sourceType` is 'content' and the `sourceStatus` is 'historical'."
          schema:
            type: "integer"
            format: "int32"
        - name: "targetVersion"
          in: "query"
          description: "The version of the target. This parameter is only used when the\n`targetType` is 'content' and the `targetStatus` is 'historical'."
          schema:
            type: "integer"
            format: "int32"
        - name: "expand"
          in: "query"
          description: "A multi-value parameter indicating which properties of the response\nobject to expand.\n\n- `relationData` returns information about the relationship, such as\nwho created it and when it was created.\n- `source` returns the source entity.\n- `target` returns the target entity."
          style: "form"
          explode: false
          schema:
            type: "array"
            items:
              type: "string"
              enum:
                - "relationData"
                - "source"
                - "target"
        - name: "start"
          in: "query"
          description: "The starting index of the returned relationships."
          schema:
            type: "integer"
            minimum: 0
            format: "int32"
            default: 0
        - name: "limit"
          in: "query"
          description: "The maximum number of relationships to return per page.\nNote, this may be restricted by fixed system limits."
          schema:
            type: "integer"
            minimum: 0
            format: "int32"
            default: 25
      responses:
        "200":
          description: "Returned if the requested relationships are returned."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/RelationArray"}
        "400":
          description: "Returned if the request is invalid."
        "403":
          description: "Returned if the user does not have permission to view the\nrelationships."
        "404":
          description: "Returned if the target entity does not exist."
      security:
        - basicAuth: []
        - oAuthDefinitions:
            - read:confluence-content.summary
      x-atlassian-oauth2-scopes: [{"scheme": "oAuthDefinitions", "state": "Current", "scopes": ["read:confluence-content.summary"]}, {"scheme": "oAuthDefinitions", "state": "Beta", "scopes": ["read:relation:confluence", "read:content-details:confluence"]}]
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": false}]
      x-atlassian-connect-scope: "READ"
  "/wiki/rest/api/relation/{relationName}/from/{sourceType}/{sourceKey}/to/{targetType}/{targetKey}":
    get:
      tags:
        - "Relation"
      summary: "Find relationship from source to target"
      description: "Find whether a particular type of relationship exists from a source\nentity to a target entity. Note, relationships are one way.\n\nFor example, you can use this method to find whether the current user has\nselected a particular page as a favorite (i.e. 'save for later'):\n`GET /wiki/rest/api/relation/favourite/from/user/current/to/content/123`\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view both the target entity and source entity."
      operationId: "getRelationByRelationNameFromBySourceTypeBySourceKeyToByTargetTypeByTargetKeyV1"
      parameters:
        - name: "relationName"
          in: "path"
          description: "The name of the relationship. This method supports the 'favourite'\n(i.e. 'save for later') relationship as well as any other relationship\ntypes created via [Create relationship](#api-wiki-rest-api-relation-relationname-from-sourcetype-sourcekey-to-targettype-targetkey-put)."
          required: true
          schema:
            type: "string"
        - name: "sourceType"
          in: "path"
          description: "The source entity type of the relationship. This must be 'user', if\nthe `relationName` is 'favourite'."
          required: true
          schema:
            type: "string"
            enum:
              - "user"
              - "content"
              - "space"
        - name: "sourceKey"
          in: "path"
          description: "- The identifier for the source entity:\n\n- If `sourceType` is `user`, then specify either `current` (logged-in user), the user key of the user, or\nthe account ID of the user. Note that the user key has been deprecated in favor of the account ID for this parameter. See the\n[migration guide](https://developer.atlassian.com/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/)\nfor details.\n- If `sourceType` is 'content', then specify the content ID.\n- If `sourceType` is 'space', then specify the space key."
          required: true
          schema:
            type: "string"
        - name: "targetType"
          in: "path"
          description: "The target entity type of the relationship. This must be 'space' or\n'content', if the `relationName` is 'favourite'."
          required: true
          schema:
            type: "string"
            enum:
              - "user"
              - "content"
              - "space"
        - name: "targetKey"
          in: "path"
          description: "The identifier for the target entity:\n\n- If `targetType` is `user`, then specify either `current` (logged-in user), the user key of the user, or\nthe account ID of the user. Note that the user key has been deprecated in favor of the account ID for this parameter. See the\n[migration guide](https://developer.atlassian.com/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/)\nfor details.\n- If `targetType` is 'content', then specify the content ID.\n- If `targetType` is 'space', then specify the space key."
          required: true
          schema:
            type: "string"
        - name: "sourceStatus"
          in: "query"
          description: "The status of the source. This parameter is only used when the\n`sourceType` is 'content'."
          schema:
            type: "string"
        - name: "targetStatus"
          in: "query"
          description: "The status of the target. This parameter is only used when the\n`targetType` is 'content'."
          schema:
            type: "string"
        - name: "sourceVersion"
          in: "query"
          description: "The version of the source. This parameter is only used when the\n`sourceType` is 'content' and the `sourceStatus` is 'historical'."
          schema:
            type: "integer"
            format: "int32"
        - name: "targetVersion"
          in: "query"
          description: "The version of the target. This parameter is only used when the\n`targetType` is 'content' and the `targetStatus` is 'historical'."
          schema:
            type: "integer"
            format: "int32"
        - name: "expand"
          in: "query"
          description: "A multi-value parameter indicating which properties of the response\nobject to expand.\n\n- `relationData` returns information about the relationship, such as\nwho created it and when it was created.\n- `source` returns the source entity.\n- `target` returns the target entity."
          style: "form"
          explode: false
          schema:
            type: "array"
            items:
              type: "string"
              enum:
                - "relationData"
                - "source"
                - "target"
      responses:
        "200":
          description: "Returned if the relationship exists."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/Relation"}
        "400":
          description: "Returned if the request is invalid."
        "401":
          description: "Returned if the authentication credentials are incorrect or missing\nfrom the request."
        "403":
          description: "Returned if the user does not have permission to view the\nrelationship."
        "404":
          description: "Returned if the relationship does not exist."
      security:
        - basicAuth: []
        - oAuthDefinitions:
            - read:confluence-content.summary
      x-atlassian-oauth2-scopes: [{"scheme": "oAuthDefinitions", "state": "Current", "scopes": ["read:confluence-content.summary"]}, {"scheme": "oAuthDefinitions", "state": "Beta", "scopes": ["read:relation:confluence", "read:content-details:confluence"]}]
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": false}]
      x-atlassian-connect-scope: "READ"
    put:
      tags:
        - "Relation"
      summary: "Create relationship"
      description: "Creates a relationship between two entities (user, space, content). The\n'favourite' relationship is supported by default, but you can use this method\nto create any type of relationship between two entities.\n\nFor example, the following method creates a 'sibling' relationship between\ntwo pieces of content:\n`PUT /wiki/rest/api/relation/sibling/from/content/123/to/content/456`\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to access the Confluence site ('Can use' global permission)."
      operationId: "putRelationByRelationNameFromBySourceTypeBySourceKeyToByTargetTypeByTargetKeyV1"
      parameters:
        - name: "relationName"
          in: "path"
          description: "The name of the relationship. This method supports the 'favourite'\n(i.e. 'save for later') relationship. You can also specify any other\nvalue for this parameter to create a custom relationship type."
          required: true
          schema:
            type: "string"
        - name: "sourceType"
          in: "path"
          description: "The source entity type of the relationship. This must be 'user', if\nthe `relationName` is 'favourite'."
          required: true
          schema:
            type: "string"
            enum:
              - "user"
              - "content"
              - "space"
        - name: "sourceKey"
          in: "path"
          description: "- The identifier for the source entity:\n\n- If `sourceType` is `user`, then specify either `current` (logged-in user), the user key of the user, or\nthe account ID of the user. Note that the user key has been deprecated in favor of the account ID for this parameter. See the\n[migration guide](https://developer.atlassian.com/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/)\nfor details.\n- If `sourceType` is 'content', then specify the content ID.\n- If `sourceType` is 'space', then specify the space key."
          required: true
          schema:
            type: "string"
        - name: "targetType"
          in: "path"
          description: "The target entity type of the relationship. This must be 'space' or\n'content', if the `relationName` is 'favourite'."
          required: true
          schema:
            type: "string"
            enum:
              - "user"
              - "content"
              - "space"
        - name: "targetKey"
          in: "path"
          description: "- The identifier for the target entity:\n\n- If `targetType` is `user`, then specify either `current` (logged-in user), the user key of the user, or\nthe account ID of the user. Note that the user key has been deprecated in favor of the account ID for this parameter. See the\n[migration guide](https://developer.atlassian.com/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/)\nfor details.\n- If `targetType` is 'content', then specify the content ID.\n- If `targetType` is 'space', then specify the space key."
          required: true
          schema:
            type: "string"
        - name: "sourceStatus"
          in: "query"
          description: "The status of the source. This parameter is only used when the\n`sourceType` is 'content'."
          schema:
            type: "string"
        - name: "targetStatus"
          in: "query"
          description: "The status of the target. This parameter is only used when the\n`targetType` is 'content'."
          schema:
            type: "string"
        - name: "sourceVersion"
          in: "query"
          description: "The version of the source. This parameter is only used when the\n`sourceType` is 'content' and the `sourceStatus` is 'historical'."
          schema:
            type: "integer"
            format: "int32"
        - name: "targetVersion"
          in: "query"
          description: "The version of the target. This parameter is only used when the\n`targetType` is 'content' and the `targetStatus` is 'historical'."
          schema:
            type: "integer"
            format: "int32"
      responses:
        "200":
          description: "Returned if the relationship is created."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/Relation"}
        "400":
          description: "Returned if the request is invalid."
        "401":
          description: "Returned if the authentication credentials are incorrect or missing\nfrom the request."
        "403":
          description: "Returned if the user does not have permission to use Confluence."
        "404":
          description: "Returned if the user, space or content could not be found."
      security:
        - basicAuth: []
        - oAuthDefinitions:
            - write:confluence-content
      x-atlassian-oauth2-scopes: [{"scheme": "oAuthDefinitions", "state": "Current", "scopes": ["write:confluence-content"]}, {"scheme": "oAuthDefinitions", "state": "Beta", "scopes": ["read:relation:confluence", "read:space:confluence", "read:user:confluence", "read:content:confluence", "write:relation:confluence"]}]
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": false}]
      x-atlassian-connect-scope: "WRITE"
    delete:
      tags:
        - "Relation"
      summary: "Delete relationship"
      description: "Deletes a relationship between two entities (user, space, content).\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to access the Confluence site ('Can use' global permission).\nFor favourite relationships, the current user can only delete their own\nfavourite relationships. A space administrator can delete favourite\nrelationships for any user."
      operationId: "deleteRelationByRelationNameFromBySourceTypeBySourceKeyToByTargetTypeByTargetKeyV1"
      parameters:
        - name: "relationName"
          in: "path"
          description: "The name of the relationship."
          required: true
          schema:
            type: "string"
        - name: "sourceType"
          in: "path"
          description: "The source entity type of the relationship. This must be 'user', if\nthe `relationName` is 'favourite'."
          required: true
          schema:
            type: "string"
            enum:
              - "user"
              - "content"
              - "space"
        - name: "sourceKey"
          in: "path"
          description: "- The identifier for the source entity:\n\n- If `sourceType` is `user`, then specify either `current` (logged-in user), the user key of the user, or\nthe account ID of the user. Note that the user key has been deprecated in favor of the account ID for this parameter. See the\n[migration guide](https://developer.atlassian.com/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/)\nfor details.\n- If `sourceType` is 'content', then specify the content ID.\n- If `sourceType` is 'space', then specify the space key."
          required: true
          schema:
            type: "string"
        - name: "targetType"
          in: "path"
          description: "The target entity type of the relationship. This must be 'space' or\n'content', if the `relationName` is 'favourite'."
          required: true
          schema:
            type: "string"
            enum:
              - "user"
              - "content"
              - "space"
        - name: "targetKey"
          in: "path"
          description: "- The identifier for the target entity:\n\n- If `targetType` is `user`, then specify either `current` (logged-in user), the user key of the user, or\nthe account ID of the user. Note that the user key has been deprecated in favor of the account ID for this parameter. See the\n[migration guide](https://developer.atlassian.com/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/)\nfor details.\n- If `targetType` is 'content', then specify the content ID.\n- If `targetType` is 'space', then specify the space key."
          required: true
          schema:
            type: "string"
        - name: "sourceStatus"
          in: "query"
          description: "The status of the source. This parameter is only used when the\n`sourceType` is 'content'."
          schema:
            type: "string"
        - name: "targetStatus"
          in: "query"
          description: "The status of the target. This parameter is only used when the\n`targetType` is 'content'."
          schema:
            type: "string"
        - name: "sourceVersion"
          in: "query"
          description: "The version of the source. This parameter is only used when the\n`sourceType` is 'content' and the `sourceStatus` is 'historical'."
          schema:
            type: "integer"
            format: "int32"
        - name: "targetVersion"
          in: "query"
          description: "The version of the target. This parameter is only used when the\n`targetType` is 'content' and the `targetStatus` is 'historical'."
          schema:
            type: "integer"
            format: "int32"
      responses:
        "204":
          description: "Returned if the relationship is deleted or the relationship didn't\nexist."
        "400":
          description: "Returned if the request is invalid."
        "401":
          description: "Returned if the authentication credentials are incorrect or missing\nfrom the request."
        "403":
          description: "Returned if the user does not have permission to delete the\nrelationship."
        "404":
          description: "Returned if the user, space or content could not be found."
      security:
        - basicAuth: []
        - oAuthDefinitions:
            - write:confluence-content
      x-atlassian-oauth2-scopes: [{"scheme": "oAuthDefinitions", "state": "Current", "scopes": ["write:confluence-content"]}, {"scheme": "oAuthDefinitions", "state": "Beta", "scopes": ["write:relation:confluence"]}]
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": false}]
      x-atlassian-connect-scope: "WRITE"
  "/wiki/rest/api/relation/{relationName}/to/{targetType}/{targetKey}/from/{sourceType}":
    get:
      tags:
        - "Relation"
      summary: "Find source entities related to a target entity"
      description: "Returns all target entities that have a particular relationship to the\nsource entity. Note, relationships are one way.\n\nFor example, the following method finds all users that have a 'collaborator'\nrelationship to a piece of content with an ID of '1234':\n`GET /wiki/rest/api/relation/collaborator/to/content/1234/from/user`\nNote, 'collaborator' is an example custom relationship type.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view both the target entity and source entity."
      operationId: "getRelationByRelationNameToByTargetTypeByTargetKeyFromBySourceTypeV1"
      parameters:
        - name: "relationName"
          in: "path"
          description: "The name of the relationship. This method supports relationships created via\n[Create relationship](#api-wiki-rest-api-relation-relationname-from-sourcetype-sourcekey-to-targettype-targetkey-put).\nNote, this method does not support 'like' or 'favourite' relationships."
          required: true
          schema:
            type: "string"
        - name: "sourceType"
          in: "path"
          description: "The source entity type of the relationship."
          required: true
          schema:
            type: "string"
            enum:
              - "user"
              - "content"
              - "space"
        - name: "targetType"
          in: "path"
          description: "The target entity type of the relationship."
          required: true
          schema:
            type: "string"
            enum:
              - "user"
              - "content"
              - "space"
        - name: "targetKey"
          in: "path"
          description: "The identifier for the target entity:\n\n- If `targetType` is `user`, then specify either `current` (logged-in user), the user key of the user, or\nthe account ID of the user. Note that the user key has been deprecated in favor of the account ID for this parameter. See the\n[migration guide](https://developer.atlassian.com/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/)\nfor details.\n- If `targetType` is 'content', then specify the content ID.\n- If `targetType` is 'space', then specify the space key."
          required: true
          schema:
            type: "string"
        - name: "sourceStatus"
          in: "query"
          description: "The status of the source. This parameter is only used when the\n`sourceType` is 'content'."
          schema:
            type: "string"
        - name: "targetStatus"
          in: "query"
          description: "The status of the target. This parameter is only used when the\n`targetType` is 'content'."
          schema:
            type: "string"
        - name: "sourceVersion"
          in: "query"
          description: "The version of the source. This parameter is only used when the\n`sourceType` is 'content' and the `sourceStatus` is 'historical'."
          schema:
            type: "integer"
            format: "int32"
        - name: "targetVersion"
          in: "query"
          description: "The version of the target. This parameter is only used when the\n`targetType` is 'content' and the `targetStatus` is 'historical'."
          schema:
            type: "integer"
            format: "int32"
        - name: "expand"
          in: "query"
          description: "A multi-value parameter indicating which properties of the response\nobject to expand.\n\n- `relationData` returns information about the relationship, such as\nwho created it and when it was created.\n- `source` returns the source entity.\n- `target` returns the target entity."
          style: "form"
          explode: false
          schema:
            type: "array"
            items:
              type: "string"
              enum:
                - "relationData"
                - "source"
                - "target"
        - name: "start"
          in: "query"
          description: "The starting index of the returned relationships."
          schema:
            type: "integer"
            minimum: 0
            format: "int32"
            default: 0
        - name: "limit"
          in: "query"
          description: "The maximum number of relationships to return per page.\nNote, this may be restricted by fixed system limits."
          schema:
            type: "integer"
            minimum: 0
            format: "int32"
            default: 25
      responses:
        "200":
          description: "Returned if the requested relationships are returned."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/RelationArray"}
        "400":
          description: "Returned if the request is invalid."
        "403":
          description: "Returned if the user does not have permission to view the\nrelationship"
        "404":
          description: "Returned if the target entity does not exist."
      security:
        - basicAuth: []
        - oAuthDefinitions:
            - read:confluence-content.summary
      x-atlassian-oauth2-scopes: [{"scheme": "oAuthDefinitions", "state": "Current", "scopes": ["read:confluence-content.summary"]}, {"scheme": "oAuthDefinitions", "state": "Beta", "scopes": ["read:relation:confluence", "read:content-details:confluence"]}]
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": false}]
      x-atlassian-connect-scope: "READ"
  "/wiki/rest/api/search":
    get:
      tags:
        - "Search"
      summary: "Search content"
      description: "Searches for content using the\n[Confluence Query Language (CQL)](https://developer.atlassian.com/cloud/confluence/advanced-searching-using-cql/).\n\n**Note that CQL input queries submitted through the `/wiki/rest/api/search` endpoint no longer support user-specific fields like `user`, `user.fullname`, `user.accountid`, and `user.userkey`.** \nSee this [deprecation notice](https://developer.atlassian.com/cloud/confluence/deprecation-notice-search-api/) for more details.\n\nExample initial call:\n```\n/wiki/rest/api/search?cql=type=page&limit=25\n```\n\nExample response:\n```\n{\n  \"results\": [\n    { ... },\n    { ... },\n    ...\n    { ... }\n  ],\n  \"limit\": 25,\n  \"size\": 25,\n  ...\n  \"_links\": {\n    \"base\": \"<url>\",\n    \"context\": \"<url>\",\n    \"next\": \"/rest/api/search?cql=type=page&limit=25&cursor=raNDoMsTRiNg\",\n    \"self\": \"<url>\"\n  }\n}\n```\n\nWhen additional results are available, returns `next` and `prev` URLs to retrieve them in subsequent calls. The URLs each contain a cursor that points to the appropriate set of results. Use `limit` to specify the number of results returned in each call.\n\nExample subsequent call (taken from example response):\n```\n/wiki/rest/api/search?cql=type=page&limit=25&cursor=raNDoMsTRiNg\n```\nThe response to this will have a `prev` URL similar to the `next` in the example response.\n\nIf the expand query parameter is used with the `body.export_view` and/or `body.styled_view` properties, then the query limit parameter will be restricted to a maximum value of 25.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the entities. Note, only entities that the user has\npermission to view will be returned."
      operationId: "getSearchV1"
      parameters:
        - name: "cql"
          in: "query"
          description: "The CQL query to be used for the search. See\n[Advanced Searching using CQL](https://developer.atlassian.com/cloud/confluence/advanced-searching-using-cql/)\nfor instructions on how to build a CQL query."
          required: true
          schema:
            type: "string"
        - name: "cqlcontext"
          in: "query"
          description: "The space, content, and content status to execute the search\nagainst.\n\n- `spaceKey` Key of the space to search against. Optional.\n- `contentId` ID of the content to search against. Optional. Must be\nin the space specified by `spaceKey`.\n- `contentStatuses` Content statuses to search against. Optional.\n\nSpecify these values in an object. For example,\n`cqlcontext={%22spaceKey%22:%22TEST%22, %22contentId%22:%22123%22}`"
          schema:
            type: "string"
        - name: "cursor"
          in: "query"
          description: "Pointer to a set of search results, returned as part of the `next` or `prev` URL from the previous search call."
          schema:
            type: "string"
        - name: "next"
          in: "query"
          schema:
            type: "boolean"
            default: false
        - name: "prev"
          in: "query"
          schema:
            type: "boolean"
            default: false
        - name: "limit"
          in: "query"
          description: "The maximum number of content objects to return per page.\nNote, this may be restricted by fixed system limits."
          schema:
            type: "integer"
            minimum: 0
            format: "int32"
            default: 25
        - name: "start"
          in: "query"
          description: "The start point of the collection to return"
          schema:
            type: "integer"
            minimum: 0
            format: "int32"
            default: 0
        - name: "includeArchivedSpaces"
          in: "query"
          description: "Whether to include content from archived spaces in the results."
          schema:
            type: "boolean"
            default: false
        - name: "excludeCurrentSpaces"
          in: "query"
          description: "Whether to exclude current spaces and only show archived spaces."
          schema:
            type: "boolean"
            default: false
        - name: "excerpt"
          in: "query"
          description: "The excerpt strategy to apply to the result"
          schema:
            type: "string"
            enum:
              - "highlight"
              - "indexed"
              - "none"
              - "highlight_unescaped"
              - "indexed_unescaped"
            default: "highlight"
        - name: "sitePermissionTypeFilter"
          in: "query"
          description: "Filters users by permission type. Use `none` to default to licensed users, `externalCollaborator`\nfor external/guest users, and `all` to include all permission types."
          schema:
            type: "string"
            enum:
              - "all"
              - "externalCollaborator"
              - "none"
            default: "none"
        - name: "expand"
          in: "query"
          style: "form"
          explode: false
          schema:
            type: "array"
            items:
              type: "string"
      responses:
        "200":
          description: "Returned if the requested results are returned."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/SearchPageResponseSearchResult"}
        "400":
          description: "Returned if the CQL query cannot be parsed."
        "403":
          description: "Returned if the calling user does not have permission to access\nConfluence."
      security:
        - basicAuth: []
        - oAuthDefinitions:
            - search:confluence
      x-atlassian-oauth2-scopes: [{"scheme": "oAuthDefinitions", "state": "Current", "scopes": ["search:confluence"]}, {"scheme": "oAuthDefinitions", "state": "Beta", "scopes": ["read:content-details:confluence"]}]
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": false}]
      x-atlassian-connect-scope: "READ"
  "/wiki/rest/api/search/user":
    get:
      tags:
        - "Search"
      summary: "Search users"
      description: "Searches for users using user-specific queries from the\n[Confluence Query Language (CQL)](https://developer.atlassian.com/cloud/confluence/advanced-searching-using-cql/).\n\nNote that CQL input queries submitted through the `/wiki/rest/api/search/user` endpoint only support user-specific fields like `user`, `user.fullname`, `user.accountid`, and `user.userkey`.\n\nNote that some user fields may be set to null depending on the user's privacy settings.\nThese are: email, profilePicture, displayName, and timeZone."
      operationId: "getSearchUserV1"
      parameters:
        - name: "cql"
          in: "query"
          description: "The CQL query to be used for the search. See\n[Advanced Searching using CQL](https://developer.atlassian.com/cloud/confluence/advanced-searching-using-cql/)\nfor instructions on how to build a CQL query.\n\nExample queries:\n          cql=type=user will return up to 10k users\n          cql=user=\"1234\" will return user with accountId \"1234\"\n          You can also use IN, NOT IN, != operators\n          cql=user IN (\"12\", \"34\") will return users with accountids \"12\" and \"34\"\n          cql=user.fullname~jo will return users with nickname/full name starting with \"jo\"\n          cql=user.accountid=\"123\" will return user with accountId \"123\""
          required: true
          schema:
            type: "string"
        - name: "start"
          in: "query"
          description: "The starting index of the returned users."
          schema:
            type: "integer"
            minimum: 0
            format: "int32"
            default: 0
        - name: "limit"
          in: "query"
          description: "The maximum number of user objects to return per page.\nNote, this may be restricted by fixed system limits."
          schema:
            type: "integer"
            minimum: 0
            format: "int32"
            default: 25
        - name: "expand"
          in: "query"
          description: "A multi-value parameter indicating which properties of the user to expand.\n\n- `operations` returns the operations for the user, which are used\nwhen setting permissions.\n- `personalSpace` returns the personal space of the user."
          style: "form"
          explode: false
          schema:
            type: "array"
            items:
              type: "string"
        - name: "sitePermissionTypeFilter"
          in: "query"
          description: "Filters users by permission type. Use `none` to default to licensed users, `externalCollaborator`\nfor external/guest users, and `all` to include all permission types."
          schema:
            type: "string"
            enum:
              - "all"
              - "externalCollaborator"
              - "none"
            default: "none"
      responses:
        "200":
          description: "Returned if the requested results are returned."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/SearchPageResponseSearchResult"}
        "400":
          description: "Returned if the CQL query cannot be parsed."
        "403":
          description: "Returned if the calling user does not have permission to access\nConfluence."
      security:
        - basicAuth: []
        - oAuthDefinitions:
            - read:content-details:confluence
      x-atlassian-oauth2-scopes: [{"scheme": "oAuthDefinitions", "state": "Current", "scopes": ["read:content-details:confluence"]}]
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": true}]
      x-atlassian-connect-scope: "READ"
  "/wiki/rest/api/settings/lookandfeel":
    get:
      tags:
        - "Settings"
      summary: "Get look and feel settings"
      description: "Returns the look and feel settings for the site or a single space. This\nincludes attributes such as the color scheme, padding, and border radius.\n\nThe look and feel settings for a space can be inherited from the global\nlook and feel settings or provided by a theme.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nNone"
      operationId: "getSettingsLookandfeelV1"
      parameters:
        - name: "spaceKey"
          in: "query"
          description: "The key of the space for which the look and feel settings will be\nreturned. If this is not set, only the global look and feel settings\nare returned."
          schema:
            type: "string"
      responses:
        "200":
          description: "Returned if the requested look and feel settings are returned."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/LookAndFeelSettings"}
        "400":
          description: "Returned if `spaceKey` is invalid."
        "404":
          description: "Returned if there is no space with the given `spaceKey`."
      security:
        - basicAuth: []
        - oAuthDefinitions:
            - manage:confluence-configuration
      x-atlassian-oauth2-scopes: [{"scheme": "oAuthDefinitions", "state": "Current", "scopes": ["manage:confluence-configuration"]}, {"scheme": "oAuthDefinitions", "state": "Beta", "scopes": ["read:configuration:confluence", "read:space.setting:confluence"]}]
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": true}]
      x-atlassian-connect-scope: "READ"
    put:
      tags:
        - "Settings"
      summary: "Select look and feel settings"
      description: "Sets the look and feel settings to the default (global) settings, the\ncustom settings, or the current theme's settings for a space.\nThe custom and theme settings can only be selected if there is already\na theme set for a space. Note, the default space settings are inherited\nfrom the current global settings.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n'Admin' permission for the space."
      operationId: "putSettingsLookandfeelV1"
      requestBody:
        description: "The look and feel type to be set."
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/LookAndFeelSelection"}
        required: true
      responses:
        "200":
          description: "Returned if the look and feel settings were set."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/LookAndFeelSelection"}
        "400":
          description: "Returned if;\n\n- `spaceKey` is invalid.\n- `lookAndFeelType` is invalid."
        "403":
          description: "Returned if the calling user doesn't have permission to edit the\nlook and feel settings."
        "404":
          description: "Returned if there is no space with the given `spaceKey`."
        "409":
          description: "Returned if `lookAndFeelType` is set to 'custom' or 'theme',\nand a theme is not currently set for the space."
      security:
        - basicAuth: []
        - oAuthDefinitions:
            - manage:confluence-configuration
      x-atlassian-oauth2-scopes: [{"scheme": "oAuthDefinitions", "state": "Current", "scopes": ["manage:confluence-configuration"]}, {"scheme": "oAuthDefinitions", "state": "Beta", "scopes": ["read:space.setting:confluence", "write:space.setting:confluence"]}]
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": true}]
      x-codegen-request-body-name: "body"
      x-atlassian-connect-scope: "WRITE"
  "/wiki/rest/api/settings/lookandfeel/custom":
    post:
      tags:
        - "Settings"
      summary: "Update look and feel settings"
      description: "Updates the look and feel settings for the site or for a single space.\nIf custom settings exist, they are updated. If no custom settings exist,\nthen a set of custom settings is created.\n\nNote, if a theme is selected for a space, the space look and feel settings\nare provided by the theme and cannot be overridden.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n'Admin' permission for the space."
      operationId: "postSettingsLookandfeelCustomV1"
      parameters:
        - name: "spaceKey"
          in: "query"
          description: "The key of the space for which the look and feel settings will be\nupdated. If this is not set, the global look and feel settings will\nbe updated."
          schema:
            type: "string"
      requestBody:
        description: "The updated settings. All values for the settings must be included,\nregardless of whether they are being changed.\n\nOne way to create the request body is to copy the settings from the\nresponse body of [Get look and feel settings](#api-settings-lookandfeel-get)\nand modify it as needed."
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/LookAndFeel"}
        required: true
      responses:
        "200":
          description: "Returned if the look and feel settings are updated."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/LookAndFeelWithLinks"}
        "400":
          description: "Returned if;\n\n- The `spaceKey` is invalid\n- The request body contains invalid data."
        "403":
          description: "Returned if the calling user doesn't have permission to edit the\nlook and feel settings."
        "404":
          description: "Returned if there is no space with the given `spaceKey`."
      security:
        - basicAuth: []
        - oAuthDefinitions:
            - manage:confluence-configuration
      x-atlassian-oauth2-scopes: [{"scheme": "oAuthDefinitions", "state": "Current", "scopes": ["manage:confluence-configuration"]}, {"scheme": "oAuthDefinitions", "state": "Beta", "scopes": ["read:configuration:confluence", "read:space.setting:confluence", "write:configuration:confluence", "write:space.setting:confluence"]}]
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": true}]
      x-codegen-request-body-name: "body"
      x-atlassian-connect-scope: "WRITE"
    delete:
      tags:
        - "Settings"
      summary: "Reset look and feel settings"
      description: "Resets the custom look and feel settings for the site or a single space.\nThis changes the values of the custom settings to be the same as the\ndefault settings. It does not change which settings (default or custom)\nare selected. Note, the default space settings are inherited from the\ncurrent global settings.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n'Admin' permission for the space."
      operationId: "deleteSettingsLookandfeelCustomV1"
      parameters:
        - name: "spaceKey"
          in: "query"
          description: "The key of the space for which the look and feel settings will be\nreset. If this is not set, the global look and feel settings will\nbe reset."
          schema:
            type: "string"
      responses:
        "204":
          description: "Returned if the look and feel settings have been reset."
        "400":
          description: "Returned if `spaceKey` is invalid."
        "403":
          description: "Returned if the calling user doesn't have permission to reset the\nlook and feel."
        "404":
          description: "Returned if there is no space with the given `spaceKey`."
      security:
        - basicAuth: []
        - oAuthDefinitions:
            - manage:confluence-configuration
      x-atlassian-oauth2-scopes: [{"scheme": "oAuthDefinitions", "state": "Current", "scopes": ["manage:confluence-configuration"]}, {"scheme": "oAuthDefinitions", "state": "Beta", "scopes": ["write:configuration:confluence", "write:space.setting:confluence"]}]
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": true}]
      x-atlassian-connect-scope: "DELETE"
  "/wiki/rest/api/settings/systemInfo":
    get:
      tags:
        - "Settings"
      summary: "Get system info"
      description: "Returns the system information for the Confluence Cloud tenant. This\ninformation is used by Atlassian.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to access the Confluence site ('Can use' global permission)."
      operationId: "getSettingsSystemInfoV1"
      responses:
        "200":
          description: "Returned if the system information for the Confluence Cloud tenant\nis returned."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/SystemInfoEntity"}
        "403":
          description: "Returned when the user does not have permission to view the system\ninformation."
      security:
        - basicAuth: []
        - oAuthDefinitions:
            - manage:confluence-configuration
      x-atlassian-oauth2-scopes: [{"scheme": "oAuthDefinitions", "state": "Current", "scopes": ["manage:confluence-configuration"]}, {"scheme": "oAuthDefinitions", "state": "Beta", "scopes": ["read:configuration:confluence"]}]
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": true}]
      x-atlassian-connect-scope: "READ"
  "/wiki/rest/api/settings/theme":
    get:
      tags:
        - "Themes"
      summary: "Get themes"
      description: "Returns all themes, not including the default theme.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: None"
      operationId: "getSettingsThemeV1"
      parameters:
        - name: "start"
          in: "query"
          description: "The starting index of the returned themes."
          schema:
            type: "integer"
            minimum: 0
            format: "int32"
            default: 0
        - name: "limit"
          in: "query"
          description: "The maximum number of themes to return per page.\nNote, this may be restricted by fixed system limits."
          schema:
            type: "integer"
            minimum: 0
            format: "int32"
            default: 100
      responses:
        "200":
          description: "Returned if the requested themes are returned."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ThemeArray"}
      security:
        - basicAuth: []
        - oAuthDefinitions:
            - manage:confluence-configuration
      x-atlassian-oauth2-scopes: [{"scheme": "oAuthDefinitions", "state": "Current", "scopes": ["manage:confluence-configuration"]}, {"scheme": "oAuthDefinitions", "state": "Beta", "scopes": ["read:configuration:confluence"]}]
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": true}]
      x-atlassian-connect-scope: "READ"
  "/wiki/rest/api/settings/theme/selected":
    get:
      tags:
        - "Themes"
      summary: "Get global theme"
      description: "Returns the globally assigned theme.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: None"
      operationId: "getSettingsThemeSelectedV1"
      responses:
        "200":
          description: "Returned if the global theme is returned."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/Theme"}
        "404":
          description: "Returned if Confluence does not have a global theme assigned, i.e.\nthe default theme is used."
      security:
        - basicAuth: []
        - oAuthDefinitions:
            - manage:confluence-configuration
      x-atlassian-oauth2-scopes: [{"scheme": "oAuthDefinitions", "state": "Current", "scopes": ["manage:confluence-configuration"]}, {"scheme": "oAuthDefinitions", "state": "Beta", "scopes": ["read:configuration:confluence"]}]
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": true}]
      x-atlassian-connect-scope: "READ"
  "/wiki/rest/api/settings/theme/{themeKey}":
    get:
      tags:
        - "Themes"
      summary: "Get theme"
      description: "Returns a theme. This includes information about the theme name,\ndescription, and icon.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: None"
      operationId: "getSettingsThemeByThemeKeyV1"
      parameters:
        - name: "themeKey"
          in: "path"
          description: "The key of the theme to be returned."
          required: true
          schema:
            type: "string"
      responses:
        "200":
          description: "Returned if the requested theme is returned."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/Theme"}
        "404":
          description: "Returned if there is no theme with the given key."
      security:
        - basicAuth: []
        - oAuthDefinitions:
            - manage:confluence-configuration
      x-atlassian-oauth2-scopes: [{"scheme": "oAuthDefinitions", "state": "Current", "scopes": ["manage:confluence-configuration"]}, {"scheme": "oAuthDefinitions", "state": "Beta", "scopes": ["read:configuration:confluence"]}]
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": true}]
      x-atlassian-connect-scope: "READ"
  "/wiki/rest/api/space":
    post:
      tags:
        - "Space"
      summary: "Create space"
      description: "Creates a new space. Note, currently you cannot set space labels when\ncreating a space.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n'Create Space(s)' global permission."
      operationId: "postSpaceV1"
      requestBody:
        description: "The space to be created."
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/SpaceCreate"}
        required: true
      responses:
        "200":
          description: "Returned if the space is created."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/Space"}
        "400":
          description: "Returned if any of the following is true:\n\n- The request is invalid.\n- The space already exists."
        "401":
          description: "Returned if the authentication credentials are incorrect or missing\nfrom the request."
        "403":
          description: "Returned if the callig user does not have permission to create a space."
      security:
        - basicAuth: []
        - oAuthDefinitions:
            - write:confluence-space
      x-atlassian-oauth2-scopes: [{"scheme": "oAuthDefinitions", "state": "Current", "scopes": ["write:confluence-space"]}, {"scheme": "oAuthDefinitions", "state": "Beta", "scopes": ["read:space-details:confluence", "write:space:confluence", "write:space.permission:confluence"]}]
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": true}]
      x-codegen-request-body-name: "body"
      x-atlassian-connect-scope: "WRITE"
  "/wiki/rest/api/space/_private":
    post:
      tags:
        - "Space"
      summary: "Create private space"
      description: "Creates a new space that is only visible to the creator. This method is\nthe same as the [Create space](#api-space-post) method with permissions\nset to the current user only. Note, currently you cannot set space\nlabels when creating a space.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n'Create Space(s)' global permission."
      operationId: "postSpace_privateV1"
      requestBody:
        description: "The space to be created."
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/SpaceCreate"}
        required: true
      responses:
        "200":
          description: "Returned if the space is created."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/Space"}
        "400":
          description: "Returned if any of the following is true:\n\n- The request is invalid.\n- The space already exists."
        "401":
          description: "Returned if the authentication credentials are incorrect or missing\nfrom the request."
        "403":
          description: "Returned if the user does not have permission to create a space."
      security:
        - basicAuth: []
        - oAuthDefinitions:
            - write:confluence-space
      x-atlassian-oauth2-scopes: [{"scheme": "oAuthDefinitions", "state": "Current", "scopes": ["write:confluence-space"]}, {"scheme": "oAuthDefinitions", "state": "Beta", "scopes": ["read:space-details:confluence", "write:space:confluence", "write:space.permission:confluence"]}]
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": true}]
      x-codegen-request-body-name: "SpacePrivateCreate"
      x-atlassian-connect-scope: "WRITE"
  "/wiki/rest/api/space/{spaceKey}":
    put:
      tags:
        - "Space"
      summary: "Update space"
      description: "Updates the name, description, or homepage of a space.\n\n-   For security reasons, permissions cannot be updated via the API and\nmust be changed via the user interface instead.\n-   Currently you cannot set space labels when updating a space.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n'Admin' permission for the space."
      operationId: "putSpaceBySpaceKeyV1"
      parameters:
        - name: "spaceKey"
          in: "path"
          description: "The key of the space to update."
          required: true
          schema:
            type: "string"
      requestBody:
        description: "The updated space."
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/SpaceUpdate"}
        required: true
      responses:
        "200":
          description: "Returned if the space is updated."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/Space"}
        "401":
          description: "Returned if the authentication credentials are incorrect or missing\nfrom the request."
        "404":
          description: "Returned if any of the following is true:\n\n- There is no space with the given key\n- The calling user does not have permission to update the space."
      security:
        - basicAuth: []
        - oAuthDefinitions:
            - write:confluence-space
      x-atlassian-oauth2-scopes: [{"scheme": "oAuthDefinitions", "state": "Current", "scopes": ["write:confluence-space"]}, {"scheme": "oAuthDefinitions", "state": "Beta", "scopes": ["read:space-details:confluence", "write:space:confluence", "write:space.permission:confluence"]}]
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": true}]
      x-codegen-request-body-name: "body"
      x-atlassian-connect-scope: "WRITE"
    delete:
      tags:
        - "Space"
      summary: "Delete space"
      description: "Permanently deletes a space without sending it to the trash. Note, the space will be deleted in a long running task.\nTherefore, the space may not be deleted yet when this method has\nreturned. Clients should poll the status link that is returned in the\nresponse until the task completes.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n'Admin' permission for the space."
      operationId: "deleteSpaceBySpaceKeyV1"
      parameters:
        - name: "spaceKey"
          in: "path"
          description: "The key of the space to delete."
          required: true
          schema:
            type: "string"
      responses:
        "202":
          description: "Returns a pointer to the status of the space deletion task."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/LongTask"}
        "401":
          description: "Returned if the authentication credentials are incorrect or missing\nfrom the request."
        "404":
          description: "Returned if any of the following is true:\n\n- There is no space with the given key.\n- The calling user does not have permission to delete the space."
      security:
        - basicAuth: []
        - oAuthDefinitions:
            - write:confluence-space
      x-atlassian-oauth2-scopes: [{"scheme": "oAuthDefinitions", "state": "Current", "scopes": ["write:confluence-space"]}, {"scheme": "oAuthDefinitions", "state": "Beta", "scopes": ["read:content.metadata:confluence", "delete:space:confluence"]}]
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": false}]
      x-atlassian-connect-scope: "DELETE"
  "/wiki/rest/api/space/{spaceKey}/permission":
    post:
      tags:
        - "Space permissions"
      summary: "Add new permission to space"
      description: "Adds new permission to space.\n\nIf the permission to be added is a group permission, the group can be identified\nby its group name or group id.\n\nNote: Apps cannot access this REST resource - including when utilizing user impersonation.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n'Admin' permission for the space."
      operationId: "postSpaceBySpaceKeyPermissionV1"
      parameters:
        - name: "spaceKey"
          in: "path"
          description: "The key of the space to be queried for its content."
          required: true
          schema:
            type: "string"
      requestBody:
        description: "The permission to be created."
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/SpacePermissionRequest"}
        required: true
      responses:
        "200":
          description: "Returned if the requested content is returned."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/SpacePermissionV2"}
        "400":
          description: "Used for various errors. Such as:\n- Permission already exists for the given user or group.\n- 'read space' permission doesn't exist for the given user or group.\n- No group found with the given groupName or groupId"
        "401":
          description: "Returned if the authentication credentials are incorrect or missing\nfrom the request."
        "403":
          description: "Returned if the user isn't authorized."
        "404":
          description: "Returned if any of the following is true:\n- There is no space with the given key.\n- The calling user does not have permission to view the space."
      security:
        - basicAuth: []
        - oAuthDefinitions:
            - read:space.permission:confluence
            - write:space.permission:confluence
      x-codegen-request-body-name: "body"
      x-atlassian-oauth2-scopes: [{"scheme": "oAuthDefinitions", "state": "Current", "scopes": ["read:space.permission:confluence", "write:space.permission:confluence"]}]
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": true}]
      x-atlassian-connect-scope: "INACCESSIBLE"
  "/wiki/rest/api/space/{spaceKey}/permission/custom-content":
    post:
      tags:
        - "Space permissions"
      summary: "Add new custom content permission to space"
      description: "Adds new custom content permission to space.\n\nIf the permission to be added is a group permission, the group can be identified\nby its group name or group id.\n\nNote: Only apps can access this REST resource and only make changes to the respective app permissions.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n'Admin' permission for the space."
      operationId: "postSpaceBySpaceKeyPermissionCustomContentV1"
      parameters:
        - name: "spaceKey"
          in: "path"
          description: "The key of the space to be queried for its content."
          required: true
          schema:
            type: "string"
      requestBody:
        description: "The permissions to be created."
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/SpacePermissionCustomContent"}
        required: true
      responses:
        "200":
          description: "Returned if the requested content is returned."
        "400":
          description: "Used for various errors. Such as:\n- Permission already exists for the given user or group.\n- 'read space' permission doesn't exist for the given user or group.\n- No group found with the given groupName or groupId"
        "401":
          description: "Returned if the authentication credentials are incorrect or missing\nfrom the request."
        "403":
          description: "Returned if the user isn't authorized."
        "404":
          description: "Returned if any of the following is true:\n- There is no space with the given key.\n- The calling user does not have permission to view the space."
      security:
        - basicAuth: []
        - oAuthDefinitions:
            - read:space.permission:confluence
            - write:space.permission:confluence
      x-codegen-request-body-name: "body"
      x-atlassian-oauth2-scopes: [{"scheme": "oAuthDefinitions", "state": "Current", "scopes": ["read:space.permission:confluence", "write:space.permission:confluence"]}]
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": true}]
      x-atlassian-connect-scope: "WRITE"
  "/wiki/rest/api/space/{spaceKey}/permission/{id}":
    delete:
      tags:
        - "Space permissions"
      summary: "Remove a space permission"
      description: "Removes a space permission. Note that removing Read Space permission for a user or group will remove all\nthe space permissions for that user or group.\n\nNote: Apps cannot access this REST resource - including when utilizing user impersonation.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n'Admin' permission for the space."
      operationId: "deleteSpaceBySpaceKeyPermissionByIdV1"
      parameters:
        - name: "spaceKey"
          in: "path"
          description: "The key of the space to be queried for its content."
          required: true
          schema:
            type: "string"
        - name: "id"
          in: "path"
          description: "Id of the permission to be deleted."
          required: true
          schema:
            type: "integer"
      responses:
        "204":
          description: "Permission successfully removed."
        "400":
          description: "Used for various errors. Such as:\n- All of the admin permissions cannot be removed from a space."
        "401":
          description: "Returned if the authentication credentials are incorrect or missing\nfrom the request."
        "403":
          description: "Returned if the user isn't authorized."
        "404":
          description: "Returned if any of the following is true:\n- There is no permission with the given id.\n- There is no space with the given key.\n- The calling user does not have permission to view the space."
      security:
        - basicAuth: []
        - oAuthDefinitions:
            - write:space.permission:confluence
      x-atlassian-oauth2-scopes: [{"scheme": "oAuthDefinitions", "state": "Current", "scopes": ["write:space.permission:confluence"]}]
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": true}]
      x-atlassian-connect-scope: "INACCESSIBLE"
  "/wiki/rest/api/space/{spaceKey}/settings":
    get:
      tags:
        - "Space settings"
      summary: "Get space settings"
      description: "Returns the settings of a space. Currently only the\n`routeOverrideEnabled` setting can be returned.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n'View' permission for the space."
      operationId: "getSpaceBySpaceKeySettingsV1"
      parameters:
        - name: "spaceKey"
          in: "path"
          description: "The key of the space to be queried for its settings."
          required: true
          schema:
            type: "string"
      responses:
        "200":
          description: "Returned if the space settings are returned."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/SpaceSettings"}
        "401":
          description: "Returned if the authentication credentials are incorrect or missing\nfrom the request."
        "404":
          description: "Returned if;\n\n- There is no space with the given key.\n- The calling user does not have permission to view the space."
      security:
        - basicAuth: []
        - oAuthDefinitions:
            - read:confluence-space.summary
      x-atlassian-oauth2-scopes: [{"scheme": "oAuthDefinitions", "state": "Current", "scopes": ["read:confluence-space.summary"]}, {"scheme": "oAuthDefinitions", "state": "Beta", "scopes": ["read:space.setting:confluence"]}]
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": true}]
      x-atlassian-connect-scope: "READ"
    put:
      tags:
        - "Space settings"
      summary: "Update space settings"
      description: "Updates the settings for a space. Currently only the\n`routeOverrideEnabled` setting can be updated.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n'Admin' permission for the space."
      operationId: "putSpaceBySpaceKeySettingsV1"
      parameters:
        - name: "spaceKey"
          in: "path"
          description: "The key of the space whose settings will be updated."
          required: true
          schema:
            type: "string"
      requestBody:
        description: "The space settings to update."
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/SpaceSettingsUpdate"}
        required: true
      responses:
        "200":
          description: "Returned if space settings are updated."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/SpaceSettings"}
        "401":
          description: "Returned if the authentication credentials are incorrect or missing\nfrom the request."
        "404":
          description: "Returned if;\n\n- There is no space with the given key.\n- The calling user does not have permission to update the space."
      security:
        - basicAuth: []
        - oAuthDefinitions:
            - write:confluence-space
      x-atlassian-oauth2-scopes: [{"scheme": "oAuthDefinitions", "state": "Current", "scopes": ["write:confluence-space"]}, {"scheme": "oAuthDefinitions", "state": "Beta", "scopes": ["read:space.setting:confluence", "write:space.setting:confluence"]}]
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": true}]
      x-codegen-request-body-name: "SpaceSettingsUpdate"
      x-atlassian-connect-scope: "WRITE"
  "/wiki/rest/api/space/{spaceKey}/state":
    get:
      tags:
        - "Content states"
      summary: "Get space suggested content states"
      description: "Get content states that are suggested in the space.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n'View' permission for the space."
      operationId: "getSpaceBySpaceKeyStateV1"
      parameters:
        - name: "spaceKey"
          in: "path"
          description: "The key of the space to be queried for its content state settings."
          required: true
          schema:
            type: "string"
      responses:
        "200":
          description: "Returned if the requested space exists, and user has space view permission."
          content:
            "application/json":
              schema:
                $ref: '#/components/schemas/GetSpaceContentStatesR200'
        "401":
          description: "Returned if the authentication credentials are incorrect or missing from the request."
        "403":
          description: "Returned if user does not have space admin permission."
        "404":
          description: "Returned if the space with given key can not be found."
      security:
        - basicAuth: []
        - oAuthDefinitions:
            - read:confluence-space.summary
      x-atlassian-oauth2-scopes: [{"scheme": "oAuthDefinitions", "state": "Current", "scopes": ["read:confluence-space.summary"]}, {"scheme": "oAuthDefinitions", "state": "Beta", "scopes": ["read:space.setting:confluence"]}]
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": false}]
      x-atlassian-connect-scope: "READ"
  "/wiki/rest/api/space/{spaceKey}/state/settings":
    get:
      tags:
        - "Content states"
      summary: "Get content state settings for space"
      description: "Get object describing whether content states are allowed at all, if custom content states or space content states\nare restricted, and a list of space content states allowed for the space if they are not restricted.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n'Admin' permission for the space."
      operationId: "getSpaceBySpaceKeyStateSettingsV1"
      parameters:
        - name: "spaceKey"
          in: "path"
          description: "The key of the space to be queried for its content state settings."
          required: true
          schema:
            type: "string"
      responses:
        "200":
          description: "Returned if the requested space exists, and user has space admin permission."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ContentStateSettings"}
        "401":
          description: "Returned if the authentication credentials are incorrect or missing from the request."
        "403":
          description: "Returned if user does not have space admin permission."
        "404":
          description: "Returned if the space with given key can not be found."
      security:
        - basicAuth: []
        - oAuthDefinitions:
            - read:confluence-space.summary
      x-atlassian-oauth2-scopes: [{"scheme": "oAuthDefinitions", "state": "Current", "scopes": ["read:confluence-space.summary"]}, {"scheme": "oAuthDefinitions", "state": "Beta", "scopes": ["read:space.setting:confluence"]}]
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": true}]
      x-atlassian-connect-scope: "READ"
  "/wiki/rest/api/space/{spaceKey}/state/content":
    get:
      tags:
        - "Content states"
      summary: "Get content in space with given content state"
      description: "Returns all content that has the provided content state in a space.\n\nIf the expand query parameter is used with the `body.export_view` and/or `body.styled_view` properties, then the query limit parameter will be restricted to a maximum value of 25.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n'View' permission for the space."
      operationId: "getSpaceBySpaceKeyStateContentV1"
      parameters:
        - name: "spaceKey"
          in: "path"
          description: "The key of the space to be queried for its content state settings."
          required: true
          schema:
            type: "string"
        - name: "state-id"
          in: "query"
          description: "The id of the content state to filter content by"
          required: true
          schema:
            type: "integer"
            format: "int32"
        - name: "expand"
          in: "query"
          description: "A multi-value parameter indicating which properties of the content to expand.\nOptions include: space, version, history, children, etc.\n\nEx: space,version"
          style: "form"
          explode: false
          schema:
            type: "array"
            items:
              type: "string"
        - name: "limit"
          in: "query"
          description: "Maximum number of results to return"
          required: false
          schema:
            type: "integer"
            maximum: 100
            minimum: 0
            format: "int32"
            default: 25
        - name: "start"
          in: "query"
          description: "Number of result to start returning. (0 indexed)"
          schema:
            type: "integer"
            minimum: 0
            format: "int32"
      responses:
        "200":
          description: "Returned if search was successful."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ContentArray"}
        "400":
          description: "Returned if limit or start are out of range, stateId is omitted."
        "401":
          description: "Returned if the authentication credentials are incorrect or missing from the request."
        "403":
          description: "Returned if user does not have space view permission."
        "404":
          description: "Returned if the space with given key can not be found."
      security:
        - oAuthDefinitions:
            - read:confluence-content.all
        - basicAuth: []
      x-atlassian-oauth2-scopes: [{"scheme": "oAuthDefinitions", "state": "Current", "scopes": ["read:confluence-content.all"]}, {"scheme": "oAuthDefinitions", "state": "Beta", "scopes": ["read:content:confluence"]}]
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": false}]
      x-atlassian-connect-scope: "READ"
  "/wiki/rest/api/space/{spaceKey}/theme":
    get:
      tags:
        - "Themes"
      summary: "Get space theme"
      description: "Returns the theme selected for a space, if one is set. If no space\ntheme is set, this means that the space is inheriting the global look\nand feel settings.\n\n**[Permissions required](https://confluence.atlassian.com/x/_AozKw)**: ‘View’ permission for the space."
      operationId: "getSpaceBySpaceKeyThemeV1"
      parameters:
        - name: "spaceKey"
          in: "path"
          description: "The key of the space to be queried for its theme."
          required: true
          schema:
            type: "string"
      responses:
        "200":
          description: "Returned if the requested theme is returned."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/Theme"}
        "404":
          description: "Returned if any of the following is true:\n\n- There is no space with the given key.\n- The space does not have a theme assigned to it."
      security:
        - basicAuth: []
        - oAuthDefinitions:
            - read:confluence-space.summary
      x-atlassian-oauth2-scopes: [{"scheme": "oAuthDefinitions", "state": "Current", "scopes": ["read:confluence-space.summary"]}, {"scheme": "oAuthDefinitions", "state": "Beta", "scopes": ["read:space.setting:confluence"]}]
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": true}]
      x-atlassian-connect-scope: "READ"
    put:
      tags:
        - "Themes"
      summary: "Set space theme"
      description: "Sets the theme for a space. Note, if you want to reset the space theme to\nthe default Confluence theme, use the 'Reset space theme' method instead\nof this method.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n'Admin' permission for the space."
      operationId: "putSpaceBySpaceKeyThemeV1"
      parameters:
        - name: "spaceKey"
          in: "path"
          description: "The key of the space to set the theme for."
          required: true
          schema:
            type: "string"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/ThemeUpdate"}
        required: true
      responses:
        "200":
          description: "Returned if the theme was set for the space."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/Theme"}
        "403":
          description: "Returned if the theme key is invalid."
        "404":
          description: "Returned if there is no space with the given key."
      security:
        - basicAuth: []
        - oAuthDefinitions:
            - write:confluence-space
      x-atlassian-oauth2-scopes: [{"scheme": "oAuthDefinitions", "state": "Current", "scopes": ["write:confluence-space"]}, {"scheme": "oAuthDefinitions", "state": "Beta", "scopes": ["read:space.setting:confluence", "write:space.setting:confluence"]}]
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": true}]
      x-codegen-request-body-name: "body"
      x-atlassian-connect-scope: "WRITE"
    delete:
      tags:
        - "Themes"
      summary: "Reset space theme"
      description: "Resets the space theme. This means that the space will inherit the\nglobal look and feel settings\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n'Admin' permission for the space."
      operationId: "deleteSpaceBySpaceKeyThemeV1"
      parameters:
        - name: "spaceKey"
          in: "path"
          description: "The key of the space to reset the theme for."
          required: true
          schema:
            type: "string"
      responses:
        "204":
          description: "Returned if the theme was reset for the space."
        "404":
          description: "Returned if there is no space with the given key."
      security:
        - basicAuth: []
        - oAuthDefinitions:
            - write:confluence-space
      x-atlassian-oauth2-scopes: [{"scheme": "oAuthDefinitions", "state": "Current", "scopes": ["write:confluence-space"]}, {"scheme": "oAuthDefinitions", "state": "Beta", "scopes": ["write:space.setting:confluence"]}]
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": true}]
      x-atlassian-connect-scope: "DELETE"
  "/wiki/rest/api/space/{spaceKey}/watch":
    get:
      tags:
        - "Content watches"
      summary: "Get space watchers"
      description: "Returns a list of watchers of a space"
      operationId: "getSpaceBySpaceKeyWatchV1"
      parameters:
        - name: "spaceKey"
          in: "path"
          description: "The key of the space to get watchers."
          required: true
          schema:
            type: "string"
        - name: "start"
          in: "query"
          description: "The start point of the collection to return."
          schema:
            type: "string"
        - name: "limit"
          in: "query"
          description: "The limit of the number of items to return, this may be restricted by fixed system limits."
          schema:
            type: "string"
      responses:
        "200":
          description: "Returned if watchers list is returned."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/SpaceWatchArray"}
        "404":
          description: "Returned if there is no space with the given key"
      security:
        - basicAuth: []
        - oAuthDefinitions:
            - read:watcher:confluence
            - read:user:confluence
      x-atlassian-oauth2-scopes: [{"scheme": "oAuthDefinitions", "state": "Current", "scopes": ["read:watcher:confluence", "read:user:confluence"]}]
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": true}]
      x-atlassian-connect-scope: "READ"
  "/wiki/rest/api/space/{spaceKey}/label":
    get:
      tags:
        - "Experimental"
      summary: "Get Space Labels"
      description: "Returns a list of labels associated with a space. Can provide a prefix as well as other filters to\nselect different types of labels."
      operationId: "getSpaceBySpaceKeyLabelV1"
      parameters:
        - name: "spaceKey"
          in: "path"
          description: "The key of the space to get labels for."
          required: true
          schema:
            type: "string"
        - name: "prefix"
          in: "query"
          description: "Filters the results to labels with the specified prefix. If this parameter\nis not specified, then labels with any prefix will be returned.\n\n- `global` prefix is used by labels that are on content within the provided space.\n- `my` prefix can be explicitly added by a user when adding a label\nvia the UI, e.g. 'my:example-label'.\n- `team` prefix is used for labels applied to the space."
          schema:
            type: "string"
            enum:
              - "global"
              - "my"
              - "team"
        - name: "start"
          in: "query"
          description: "The starting index of the returned labels."
          schema:
            type: "integer"
            minimum: 0
            format: "int32"
            default: 0
        - name: "limit"
          in: "query"
          description: "The maximum number of labels to return per page. Note,\nthis may be restricted by fixed system limits."
          schema:
            type: "integer"
            minimum: 0
            format: "int32"
            default: 200
      responses:
        "200":
          description: "Returned if the list of labels is returned."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/LabelArray"}
        "404":
          description: "Returned if;\n- There is no space with the given space key.\n- The calling user does not have permission to view the space."
      security:
        - basicAuth: []
        - oAuthDefinitions:
            - read:confluence-space.summary
      x-atlassian-oauth2-scopes: [{"scheme": "oAuthDefinitions", "state": "Current", "scopes": ["read:confluence-space.summary"]}, {"scheme": "oAuthDefinitions", "state": "Beta", "scopes": ["read:label:confluence"]}]
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": true}]
      x-experimental: true
      x-atlassian-connect-scope: "READ"
    post:
      tags:
        - "Experimental"
      summary: "Add labels to a space"
      description: "Adds labels to a piece of content. Does not modify the existing labels.\n\nNotes:\n\n- Labels can also be added when creating content ([Create content](#api-content-post)).\n- Labels can be updated when updating content ([Update content](#api-content-id-put)).\nThis will delete the existing labels and replace them with the labels in\nthe request.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to update the content."
      operationId: "postSpaceBySpaceKeyLabelV1"
      parameters:
        - name: "spaceKey"
          in: "path"
          description: "The key of the space to add labels to."
          required: true
          schema:
            type: "string"
      requestBody:
        description: "The labels to add to the content."
        content:
          "application/json":
            schema:
              $ref: '#/components/schemas/AddLabelsToSpaceB'
        required: true
      responses:
        "200":
          description: "Returned if the labels are added to the content."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/LabelArray"}
        "400":
          description: "Returned if;\n\n- The body contains labels with invalid characters or too many characters.\n- The body contains too many labels.\n- The target content would contain too many labels after the operation.\n- The calling user does not have permission to edit labels."
        "403":
          description: "Returned if the calling user can view but not edit the content."
        "404":
          description: "Returned if;\n- There is no space with the given space key.\n- The calling user does not have permission to view the space."
      security:
        - basicAuth: []
        - oAuthDefinitions:
            - write:confluence-space
      x-atlassian-oauth2-scopes: [{"scheme": "oAuthDefinitions", "state": "Current", "scopes": ["write:confluence-space"]}, {"scheme": "oAuthDefinitions", "state": "Beta", "scopes": ["read:label:confluence", "write:label:confluence"]}]
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": true}]
      x-experimental: true
      x-atlassian-connect-scope: "WRITE"
    delete:
      tags:
        - "Experimental"
      summary: "Remove label from a space"
      operationId: "deleteSpaceBySpaceKeyLabelV1"
      parameters:
        - name: "spaceKey"
          in: "path"
          description: "The key of the space to remove a labels from."
          required: true
          schema:
            type: "string"
        - name: "name"
          in: "query"
          description: "The name of the label to remove"
          required: true
          schema:
            type: "string"
        - name: "prefix"
          in: "query"
          description: "The prefix of the label to remove. If not provided defaults to global."
          required: false
          schema:
            type: "string"
      responses:
        "204":
          description: "Returned if the label was successfully deleted."
        "400":
          description: "Returned if;\n- The user does not provide a label name"
        "404":
          description: "Returned if;\n- There is no space with the given space key.\n- The calling user does not have permission to view the space."
      security:
        - basicAuth: []
        - oAuthDefinitions:
            - write:confluence-space
      x-atlassian-oauth2-scopes: [{"scheme": "oAuthDefinitions", "state": "Current", "scopes": ["write:confluence-space"]}, {"scheme": "oAuthDefinitions", "state": "Beta", "scopes": ["write:label:confluence"]}]
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": true}]
      x-experimental: true
      x-atlassian-connect-scope: "WRITE"
  "/wiki/rest/api/template":
    put:
      tags:
        - "Template"
      summary: "Update content template"
      description: "Updates a content template. Note, blueprint templates cannot be updated\nvia the REST API.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n'Admin' permission for the space to update a space template or 'Confluence Administrator'\nglobal permission to update a global template."
      operationId: "putTemplateV1"
      requestBody:
        description: "The updated content template."
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/ContentTemplateUpdate"}
        required: true
      responses:
        "200":
          description: "Returned if the template is updated."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ContentTemplate"}
        "400":
          description: "Returned if template name is null or an empty string."
        "403":
          description: "Returned if the calling user does not have permission."
        "404":
          description: "Returned if the calling user does not have permission to update the\ntemplate or if the template doesn't exist."
      security:
        - basicAuth: []
        - oAuthDefinitions:
            - write:confluence-content
      x-atlassian-oauth2-scopes: [{"scheme": "oAuthDefinitions", "state": "Current", "scopes": ["write:confluence-content"]}, {"scheme": "oAuthDefinitions", "state": "Beta", "scopes": ["read:template:confluence", "read:content-details:confluence", "write:template:confluence"]}]
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": true}]
      x-codegen-request-body-name: "body"
      x-atlassian-connect-scope: "WRITE"
    post:
      tags:
        - "Template"
      summary: "Create content template"
      description: "Creates a new content template. Note, blueprint templates cannot be created via the REST API.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n'Admin' permission for the space to create a space template or 'Confluence Administrator'\nglobal permission to create a global template."
      operationId: "postTemplateV1"
      requestBody:
        description: "The content template to be created.\nThe content body must be in 'storage' format."
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/ContentTemplateCreate"}
        required: true
      responses:
        "200":
          description: "Returned if the template is created."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ContentTemplate"}
        "400":
          description: "Returned if template name is null or an empty string."
        "403":
          description: "Returned if the calling user does not have permission to create the\ntemplate."
      security:
        - basicAuth: []
        - oAuthDefinitions:
            - write:confluence-content
      x-atlassian-oauth2-scopes: [{"scheme": "oAuthDefinitions", "state": "Current", "scopes": ["write:confluence-content"]}, {"scheme": "oAuthDefinitions", "state": "Beta", "scopes": ["read:template:confluence", "read:content-details:confluence", "write:template:confluence"]}]
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": true}]
      x-codegen-request-body-name: "body"
      x-atlassian-connect-scope: "WRITE"
  "/wiki/rest/api/template/blueprint":
    get:
      tags:
        - "Template"
      summary: "Get blueprint templates"
      description: "Returns all templates provided by blueprints. Use this method to retrieve\nall global blueprint templates or all blueprint templates in a space.\n\nNote, all global blueprints are inherited by each space. Space blueprints\ncan be customised without affecting the global blueprints.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n'View' permission for the space to view blueprints for the space and permission\nto access the Confluence site ('Can use' global permission) to view global blueprints."
      operationId: "getTemplateBlueprintV1"
      parameters:
        - name: "spaceKey"
          in: "query"
          description: "The key of the space to be queried for templates. If the `spaceKey`\nis not specified, global blueprint templates will be returned."
          schema:
            type: "string"
        - name: "start"
          in: "query"
          description: "The starting index of the returned templates."
          schema:
            type: "integer"
            minimum: 0
            format: "int32"
            default: 0
        - name: "limit"
          in: "query"
          description: "The maximum number of templates to return per page.\nNote, this may be restricted by fixed system limits."
          schema:
            type: "integer"
            minimum: 0
            format: "int32"
            default: 25
        - {"$ref": "#/components/parameters/templateExpand"}
      responses:
        "200":
          description: "Returned if the requested templates are returned."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/BlueprintTemplateArray"}
        "403":
          description: "Returned if the calling user does not have permission to view\nblueprint templates."
      security:
        - basicAuth: []
        - oAuthDefinitions:
            - read:confluence-content.summary
      x-atlassian-oauth2-scopes: [{"scheme": "oAuthDefinitions", "state": "Current", "scopes": ["read:confluence-content.summary"]}, {"scheme": "oAuthDefinitions", "state": "Beta", "scopes": ["read:template:confluence", "read:content-details:confluence"]}]
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": true}]
      x-atlassian-connect-scope: "READ"
  "/wiki/rest/api/template/page":
    get:
      tags:
        - "Template"
      summary: "Get content templates"
      description: "Returns all content templates. Use this method to retrieve all global\ncontent templates or all content templates in a space.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n'View' permission for the space to view space templates and permission to\naccess the Confluence site ('Can use' global permission) to view global templates."
      operationId: "getTemplatePageV1"
      parameters:
        - name: "spaceKey"
          in: "query"
          description: "The key of the space to be queried for templates. If the `spaceKey`\nis not specified, global templates will be returned."
          schema:
            type: "string"
        - name: "start"
          in: "query"
          description: "The starting index of the returned templates."
          schema:
            type: "integer"
            minimum: 0
            format: "int32"
            default: 0
        - name: "limit"
          in: "query"
          description: "The maximum number of templates to return per page.\nNote, this may be restricted by fixed system limits."
          schema:
            type: "integer"
            minimum: 0
            format: "int32"
            default: 25
        - {"$ref": "#/components/parameters/templateExpand"}
      responses:
        "200":
          description: "Returned if the requested templates are returned."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ContentTemplateArray"}
        "403":
          description: "Returned if the calling user does not have permission to view the\ncontent templates."
      security:
        - basicAuth: []
        - oAuthDefinitions:
            - read:confluence-content.summary
      x-atlassian-oauth2-scopes: [{"scheme": "oAuthDefinitions", "state": "Current", "scopes": ["read:confluence-content.summary"]}, {"scheme": "oAuthDefinitions", "state": "Beta", "scopes": ["read:template:confluence", "read:content-details:confluence"]}]
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": true}]
      x-atlassian-connect-scope: "READ"
  "/wiki/rest/api/template/{contentTemplateId}":
    get:
      tags:
        - "Template"
      summary: "Get content template"
      description: "Returns a content template. This includes information about template,\nlike the name, the space or blueprint that the template is in, the body\nof the template, and more.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n'View' permission for the space to view space templates and permission to\naccess the Confluence site ('Can use' global permission) to view global templates."
      operationId: "getTemplateByContentTemplateIdV1"
      parameters:
        - name: "contentTemplateId"
          in: "path"
          description: "The ID of the content template to be returned."
          required: true
          schema:
            type: "string"
        - {"$ref": "#/components/parameters/templateExpand"}
      responses:
        "200":
          description: "Returned if the requested template is returned."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ContentTemplate"}
        "403":
          description: "Returned if;\n\n- There is no template with the given ID.\n- The calling user does not have permission to view the template."
      security:
        - basicAuth: []
        - oAuthDefinitions:
            - read:confluence-content.summary
      x-atlassian-oauth2-scopes: [{"scheme": "oAuthDefinitions", "state": "Current", "scopes": ["read:confluence-content.summary"]}, {"scheme": "oAuthDefinitions", "state": "Beta", "scopes": ["read:template:confluence", "read:content-details:confluence"]}]
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": true}]
      x-atlassian-connect-scope: "READ"
    delete:
      tags:
        - "Template"
      summary: "Remove template"
      description: "Deletes a template. This results in different actions depending on the\ntype of template:\n\n- If the template is a content template, it is deleted.\n- If the template is a modified space-level blueprint template, it reverts\nto the template inherited from the global-level blueprint template.\n- If the template is a modified global-level blueprint template, it reverts\nto the default global-level blueprint template.\n\n Note, unmodified blueprint templates cannot be deleted.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n        'Admin' permission for the space to delete a space template or 'Confluence Administrator'\n        global permission to delete a global template."
      operationId: "deleteTemplateByContentTemplateIdV1"
      parameters:
        - name: "contentTemplateId"
          in: "path"
          description: "The ID of the template to be deleted."
          required: true
          schema:
            type: "string"
      responses:
        "204":
          description: "Returned if the template has been successfully been deleted."
        "403":
          description: "Returned if;\n\n- There is no template with the given ID.\n- The calling user does not have permission to delete the template."
      security:
        - basicAuth: []
        - oAuthDefinitions:
            - write:confluence-content
      x-atlassian-oauth2-scopes: [{"scheme": "oAuthDefinitions", "state": "Current", "scopes": ["write:confluence-content"]}, {"scheme": "oAuthDefinitions", "state": "Beta", "scopes": ["write:template:confluence"]}]
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": true}]
      x-atlassian-connect-scope: "DELETE"
  "/wiki/rest/api/user":
    get:
      tags:
        - "Users"
      summary: "Get user"
      description: "Returns a user. This includes information about the user, such as the\ndisplay name, account ID, profile picture, and more. The information returned may be\nrestricted by the user's profile visibility settings.\n\n**Note:** to add, edit, or delete users in your organization, see the\n[user management REST API](/cloud/admin/user-management/about/).\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to access the Confluence site ('Can use' global permission)."
      operationId: "getUserV1"
      parameters:
        - name: "accountId"
          in: "query"
          description: "The account ID of the user. The accountId uniquely identifies the user across all Atlassian products.\nFor example, `384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192`."
          required: true
          schema:
            type: "string"
        - name: "expand"
          in: "query"
          description: "A multi-value parameter indicating which properties of the user to\nexpand.\n\n  - `operations` returns the operations that the user is allowed to do.\n  - `personalSpace` returns the user's personal space, if it exists.\n  - `isExternalCollaborator`(@deprecated) see `isGuest` in response to find out whether the user is a guest."
          style: "form"
          explode: false
          schema:
            type: "array"
            items:
              type: "string"
              enum:
                - "operations"
                - "personalSpace"
                - "isExternalCollaborator"
      responses:
        "200":
          description: "Returned if the requested user is returned."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/User"}
        "401":
          description: "Returned if the authentication credentials are incorrect or missing\nfrom the request."
        "403":
          description: "Returned if the calling user does not have permission to view users."
        "404":
          description: "Returned if a user with the given accountId does not exist."
      security:
        - basicAuth: []
        - oAuthDefinitions:
            - read:confluence-user
      x-atlassian-oauth2-scopes: [{"scheme": "oAuthDefinitions", "state": "Current", "scopes": ["read:confluence-user"]}, {"scheme": "oAuthDefinitions", "state": "Beta", "scopes": ["read:content-details:confluence"]}]
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": true}]
      x-atlassian-connect-scope: "READ"
  "/wiki/rest/api/user/anonymous":
    get:
      tags:
        - "Users"
      summary: "Get anonymous user"
      description: "Returns information about how anonymous users are represented, like the\nprofile picture and display name.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to access the Confluence site ('Can use' global permission)."
      operationId: "getUserAnonymousV1"
      parameters:
        - name: "expand"
          in: "query"
          description: "A multi-value parameter indicating which properties of the user to\nexpand.\n\n  - `operations` returns the operations that the user is allowed to do."
          style: "form"
          explode: false
          schema:
            type: "array"
            items:
              type: "string"
              enum:
                - "operations"
      responses:
        "200":
          description: "Returned if the anonymous user representation is returned."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/UserAnonymous"}
        "403":
          description: "Returned if the calling user does not have permission to use\nConfluence."
      security:
        - basicAuth: []
        - oAuthDefinitions:
            - read:confluence-user
      x-atlassian-oauth2-scopes: [{"scheme": "oAuthDefinitions", "state": "Current", "scopes": ["read:confluence-user"]}, {"scheme": "oAuthDefinitions", "state": "Beta", "scopes": ["read:user:confluence"]}]
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": true}]
      x-atlassian-connect-scope: "READ"
  "/wiki/rest/api/user/current":
    get:
      tags:
        - "Users"
      summary: "Get current user"
      description: "Returns the currently logged-in user. This includes information about\nthe user, like the display name, userKey, account ID, profile picture,\nand more.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to access the Confluence site ('Can use' global permission)."
      operationId: "getUserCurrentV1"
      parameters:
        - name: "expand"
          in: "query"
          description: "A multi-value parameter indicating which properties of the user to\nexpand.\n\n  - `operations` returns the operations that the user is allowed to do.\n  - `personalSpace` returns the user's personal space, if it exists.\n  - `isExternalCollaborator`(@deprecated) see `isGuest` in response to find out whether the user is a guest."
          style: "form"
          explode: false
          schema:
            type: "array"
            items:
              type: "string"
              enum:
                - "operations"
                - "personalSpace"
                - "isExternalCollaborator"
      responses:
        "200":
          description: "Returned if the current user is returned."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/User"}
        "403":
          description: "Returned if the calling user does not have permission to use\nConfluence."
      security:
        - basicAuth: []
        - oAuthDefinitions:
            - read:confluence-user
      x-atlassian-oauth2-scopes: [{"scheme": "oAuthDefinitions", "state": "Current", "scopes": ["read:confluence-user"]}, {"scheme": "oAuthDefinitions", "state": "Beta", "scopes": ["read:content-details:confluence"]}]
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": true}]
      x-atlassian-connect-scope: "READ"
  "/wiki/rest/api/user/memberof":
    get:
      tags:
        - "Users"
      summary: "Get group memberships for user"
      description: "Returns the groups that a user is a member of.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to access the Confluence site ('Can use' global permission)."
      operationId: "getUserMemberofV1"
      parameters:
        - name: "accountId"
          in: "query"
          description: "The account ID of the user. The accountId uniquely identifies the user across all Atlassian products.\nFor example, `384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192`."
          required: true
          schema:
            type: "string"
        - name: "start"
          in: "query"
          description: "The starting index of the returned groups."
          schema:
            type: "integer"
            minimum: 0
            format: "int32"
            default: 0
        - name: "limit"
          in: "query"
          description: "The maximum number of groups to return per page.\nNote, this may be restricted by fixed system limits."
          schema:
            type: "integer"
            minimum: 0
            format: "int32"
            default: 200
      responses:
        "200":
          description: "Returned if the requested groups are returned."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/GroupArrayWithLinks"}
        "403":
          description: "Returned if the calling user does not have permission to use\nConfluence."
      security:
        - basicAuth: []
        - oAuthDefinitions:
            - read:confluence-user
      x-atlassian-oauth2-scopes: [{"scheme": "oAuthDefinitions", "state": "Current", "scopes": ["read:confluence-user"]}, {"scheme": "oAuthDefinitions", "state": "Beta", "scopes": ["read:user:confluence", "read:group:confluence"]}]
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": true}]
      x-atlassian-connect-scope: "READ"
  "/wiki/rest/api/user/bulk":
    get:
      tags:
        - "Users"
      summary: "Get multiple users using ids"
      description: "Returns user details for the ids provided in the request.\nCurrently this API returns a maximum of 100 results.\nIf more than 100 account ids are passed in, then the first 100 will be returned.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to access the Confluence site ('Can use' global permission)."
      operationId: "getUserBulkV1"
      parameters:
        - name: "accountId"
          in: "query"
          description: "A list of accountId's of users to be returned."
          required: true
          schema:
            type: "string"
        - name: "expand"
          in: "query"
          description: "A multi-value parameter indicating which properties of the user to\nexpand.\n\n  - `operations` returns the operations that the user is allowed to do.\n  - `personalSpace` returns the user's personal space, if it exists.\n  - `isExternalCollaborator`(@deprecated) use `isGuest` instead to return whether the user is a guest."
          style: "form"
          explode: false
          schema:
            type: "array"
            items:
              type: "string"
              enum:
                - "operations"
                - "personalSpace"
                - "isExternalCollaborator"
      responses:
        "200":
          description: "Returned if, the list of users is returned."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/BulkUserLookupArray"}
        "403":
          description: "Returned if the calling user does not have permission to use\nConfluence."
      security:
        - basicAuth: []
        - oAuthDefinitions:
            - read:confluence-user
      x-atlassian-oauth2-scopes: [{"scheme": "oAuthDefinitions", "state": "Current", "scopes": ["read:confluence-user"]}, {"scheme": "oAuthDefinitions", "state": "Beta", "scopes": ["read:content-details:confluence"]}]
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": true}]
      x-atlassian-connect-scope: "READ"
  "/wiki/rest/api/user/watch/content/{contentId}":
    get:
      tags:
        - "Content watches"
      summary: "Get content watch status"
      description: "Returns whether a user is watching a piece of content. Choose the user by\ndoing one of the following:\n\n- Specify a user via a query parameter: Use the `accountId` to identify the user.\n- Do not specify a user: The currently logged-in user will be used.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n'Confluence Administrator' global permission if specifying a user, otherwise\npermission to access the Confluence site ('Can use' global permission)."
      operationId: "getUserWatchContentByContentIdV1"
      parameters:
        - name: "contentId"
          in: "path"
          description: "The ID of the content to be queried for whether the specified user is\nwatching it."
          required: true
          schema:
            type: "string"
        - {"$ref": "#/components/parameters/userLookupKey"}
        - {"$ref": "#/components/parameters/userLookupUsername"}
        - {"$ref": "#/components/parameters/userLookupAccountId"}
      responses:
        "200":
          description: "Returned if the requested watch status is returned."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/UserWatch"}
        "403":
          description: "Returned if;\n\n- The calling user does not have permission to view the\ncontent.\n- A user is specified via a query parameter and the calling user is\nnot a Confluence administrator.\n- No content exists for the specified `contentId`."
        "404":
          description: "Returned if no `contentId` is specified."
      security:
        - basicAuth: []
        - oAuthDefinitions:
            - read:confluence-content.summary
      x-atlassian-oauth2-scopes: [{"scheme": "oAuthDefinitions", "state": "Current", "scopes": ["read:confluence-content.summary"]}, {"scheme": "oAuthDefinitions", "state": "Beta", "scopes": ["read:watcher:confluence"]}]
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": false}]
      x-atlassian-connect-scope: "READ"
    post:
      tags:
        - "Content watches"
      summary: "Add content watcher"
      description: "Adds a user as a watcher to a piece of content. Choose the user by doing\none of the following:\n\n- Specify a user via a query parameter: Use the `accountId` to identify the user.\n- Do not specify a user: The currently logged-in user will be used.\n\nNote, you must add the `X-Atlassian-Token: no-check` header when making a\nrequest, as this operation has XSRF protection.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n'Confluence Administrator' global permission if specifying a user, otherwise\npermission to access the Confluence site ('Can use' global permission)."
      operationId: "postUserWatchContentByContentIdV1"
      parameters:
        - name: "contentId"
          in: "path"
          description: "The ID of the content to add the watcher to."
          required: true
          schema:
            type: "string"
        - {"$ref": "#/components/parameters/userLookupKey"}
        - {"$ref": "#/components/parameters/userLookupUsername"}
        - {"$ref": "#/components/parameters/userLookupAccountId"}
      responses:
        "204":
          description: "Returned if the watcher was successfully created. No response body is\nreturned."
        "403":
          description: "Returned if;\n\n- The `X-Atlassian-Token: no-check` header is not specified.\n- The calling user does not have permission to view the\ncontent.\n- A user is specified via a query parameter and the calling user is\nnot a Confluence administrator.\n- No content exists for the specified `contentId`."
        "404":
          description: "Returned if no `contentId` is specified."
      security:
        - basicAuth: []
        - oAuthDefinitions:
            - write:confluence-content
      x-atlassian-oauth2-scopes: [{"scheme": "oAuthDefinitions", "state": "Current", "scopes": ["write:confluence-content"]}, {"scheme": "oAuthDefinitions", "state": "Beta", "scopes": ["write:watcher:confluence"]}]
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": false}]
      x-atlassian-connect-scope: "WRITE"
    delete:
      tags:
        - "Content watches"
      summary: "Remove content watcher"
      description: "Removes a user as a watcher from a piece of content. Choose the user by\ndoing one of the following:\n\n- Specify a user via a query parameter: Use the `accountId` to identify the user.\n- Do not specify a user: The currently logged-in user will be used.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n'Confluence Administrator' global permission if specifying a user, otherwise\npermission to access the Confluence site ('Can use' global permission)."
      operationId: "deleteUserWatchContentByContentIdV1"
      parameters:
        - name: "X-Atlassian-Token"
          in: "header"
          description: "Note, you must add header when making a\nrequest, as this operation has XSRF protection."
          required: true
          schema:
            type: "string"
            default: "no-check"
        - name: "contentId"
          in: "path"
          description: "The ID of the content to remove the watcher from."
          required: true
          schema:
            type: "string"
        - {"$ref": "#/components/parameters/userLookupKey"}
        - {"$ref": "#/components/parameters/userLookupUsername"}
        - {"$ref": "#/components/parameters/userLookupAccountId"}
      responses:
        "204":
          description: "Returned if the watcher was successfully deleted. No response body is\nreturned."
        "403":
          description: "Returned if;\n\n- The `X-Atlassian-Token: no-check` header is not specified.\n- The calling user does not have permission to view the\ncontent.\n- A user is specified via a query parameter and the calling user is\nnot a Confluence administrator.\n- No content exists for the specified `contentId`."
        "404":
          description: "Returned if no `contentId` is specified."
      security:
        - basicAuth: []
        - oAuthDefinitions:
            - write:confluence-content
      x-atlassian-oauth2-scopes: [{"scheme": "oAuthDefinitions", "state": "Current", "scopes": ["write:confluence-content"]}, {"scheme": "oAuthDefinitions", "state": "Beta", "scopes": ["write:watcher:confluence"]}]
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": false}]
      x-atlassian-connect-scope: "WRITE"
  "/wiki/rest/api/user/watch/label/{labelName}":
    get:
      tags:
        - "Content watches"
      summary: "Get label watch status"
      description: "Returns whether a user is watching a label. Choose the user by doing one\nof the following:\n\n- Specify a user via a query parameter: Use the `accountId` to identify the user.\n- Do not specify a user: The currently logged-in user will be used.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n'Confluence Administrator' global permission if specifying a user, otherwise\npermission to access the Confluence site ('Can use' global permission)."
      operationId: "getUserWatchLabelByLabelNameV1"
      parameters:
        - name: "labelName"
          in: "path"
          description: "The name of the label to be queried for whether the specified user is\nwatching it."
          required: true
          schema:
            type: "string"
        - {"$ref": "#/components/parameters/userLookupKey"}
        - {"$ref": "#/components/parameters/userLookupUsername"}
        - {"$ref": "#/components/parameters/userLookupAccountId"}
      responses:
        "200":
          description: "Returned if the requested watch status is returned."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/UserWatch"}
        "403":
          description: "Returned if;\n\n- A user is specified via a query parameter and the calling user is\nnot a Confluence administrator.\n- No label exists for the specified `labelName`."
        "404":
          description: "Returned if no `labelName` is specified."
      security:
        - basicAuth: []
        - oAuthDefinitions:
            - read:confluence-content.summary
      x-atlassian-oauth2-scopes: [{"scheme": "oAuthDefinitions", "state": "Current", "scopes": ["read:confluence-content.summary"]}, {"scheme": "oAuthDefinitions", "state": "Beta", "scopes": ["read:watcher:confluence"]}]
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": true}]
      x-atlassian-connect-scope: "READ"
    post:
      tags:
        - "Content watches"
      summary: "Add label watcher"
      description: "Adds a user as a watcher to a label. Choose the user by doing one of the\nfollowing:\n\n- Specify a user via a query parameter: Use the `accountId` to identify the user.\n- Do not specify a user: The currently logged-in user will be used.\n\nNote, you must add the `X-Atlassian-Token: no-check` header when making a\nrequest, as this operation has XSRF protection.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n'Confluence Administrator' global permission if specifying a user, otherwise\npermission to access the Confluence site ('Can use' global permission)."
      operationId: "postUserWatchLabelByLabelNameV1"
      parameters:
        - name: "X-Atlassian-Token"
          in: "header"
          description: "Note, you must add header when making a\nrequest, as this operation has XSRF protection."
          required: true
          schema:
            type: "string"
            default: "no-check"
        - name: "labelName"
          in: "path"
          description: "The name of the label to add the watcher to."
          required: true
          schema:
            type: "string"
        - {"$ref": "#/components/parameters/userLookupKey"}
        - {"$ref": "#/components/parameters/userLookupUsername"}
        - {"$ref": "#/components/parameters/userLookupAccountId"}
      responses:
        "204":
          description: "Returned if the watcher was successfully created. No response body is\nreturned."
        "403":
          description: "Returned if;\n\n- The `X-Atlassian-Token: no-check` header is not specified.\n- A user is specified via a query parameter and the calling user is\nnot a Confluence administrator.\n- No label exists for the specified `labelName`."
        "404":
          description: "Returned if no `labelName` is specified."
      security:
        - basicAuth: []
        - oAuthDefinitions:
            - write:confluence-content
      x-atlassian-oauth2-scopes: [{"scheme": "oAuthDefinitions", "state": "Current", "scopes": ["write:confluence-content"]}, {"scheme": "oAuthDefinitions", "state": "Beta", "scopes": ["write:watcher:confluence"]}]
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": true}]
      x-atlassian-connect-scope: "WRITE"
    delete:
      tags:
        - "Content watches"
      summary: "Remove label watcher"
      description: "Removes a user as a watcher from a label. Choose the user by doing one of\nthe following:\n\n- Specify a user via a query parameter: Use the `accountId` to identify the user.\n- Do not specify a user: The currently logged-in user will be used.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n'Confluence Administrator' global permission if specifying a user, otherwise\npermission to access the Confluence site ('Can use' global permission)."
      operationId: "deleteUserWatchLabelByLabelNameV1"
      parameters:
        - name: "labelName"
          in: "path"
          description: "The name of the label to remove the watcher from."
          required: true
          schema:
            type: "string"
        - {"$ref": "#/components/parameters/userLookupKey"}
        - {"$ref": "#/components/parameters/userLookupUsername"}
        - {"$ref": "#/components/parameters/userLookupAccountId"}
      responses:
        "204":
          description: "Returned if the watcher was successfully deleted. No response body is\nreturned."
        "403":
          description: "Returned if;\n\n- The `X-Atlassian-Token: no-check` header is not specified.\n- A user is specified via a query parameter and the calling user is\nnot a Confluence administrator.\n- No label exists for the specified `labelName`."
        "404":
          description: "Returned if no `labelName` is specified."
      security:
        - basicAuth: []
        - oAuthDefinitions:
            - write:confluence-content
      x-atlassian-oauth2-scopes: [{"scheme": "oAuthDefinitions", "state": "Current", "scopes": ["write:confluence-content"]}, {"scheme": "oAuthDefinitions", "state": "Beta", "scopes": ["write:watcher:confluence"]}]
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": true}]
      x-atlassian-connect-scope: "WRITE"
  "/wiki/rest/api/user/watch/space/{spaceKey}":
    get:
      tags:
        - "Content watches"
      summary: "Get space watch status"
      description: "Returns whether a user is watching a space. Choose the user by\ndoing one of the following:\n\n- Specify a user via a query parameter: Use the `accountId` to identify the user.\n- Do not specify a user: The currently logged-in user will be used.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n'Confluence Administrator' global permission if specifying a user, otherwise\npermission to access the Confluence site ('Can use' global permission)."
      operationId: "getUserWatchSpaceBySpaceKeyV1"
      parameters:
        - name: "spaceKey"
          in: "path"
          description: "The key of the space to be queried for whether the specified user is\nwatching it."
          required: true
          schema:
            type: "string"
        - {"$ref": "#/components/parameters/userLookupKey"}
        - {"$ref": "#/components/parameters/userLookupUsername"}
        - {"$ref": "#/components/parameters/userLookupAccountId"}
      responses:
        "200":
          description: "Returned if the requested watch status is returned."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/UserWatch"}
        "403":
          description: "Returned if;\n\n- The calling user does not have permission to view the\nspace.\n- A user is specified via a query parameter and the calling user is\nnot a Confluence administrator.\n- No space exists for the specified `spaceKey`."
        "404":
          description: "Returned if no `spaceKey` is specified."
      security:
        - basicAuth: []
        - oAuthDefinitions:
            - read:confluence-content.summary
      x-atlassian-oauth2-scopes: [{"scheme": "oAuthDefinitions", "state": "Current", "scopes": ["read:confluence-content.summary"]}, {"scheme": "oAuthDefinitions", "state": "Beta", "scopes": ["read:watcher:confluence"]}]
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": true}]
      x-atlassian-connect-scope: "READ"
    post:
      tags:
        - "Content watches"
      summary: "Add space watcher"
      description: "Adds a user as a watcher to a space. Choose the user by doing one of the\nfollowing:\n\n- Specify a user via a query parameter: Use the `accountId` to identify the user.\n- Do not specify a user: The currently logged-in user will be used.\n\nNote, you must add the `X-Atlassian-Token: no-check` header when making a\nrequest, as this operation has XSRF protection.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n'Confluence Administrator' global permission if specifying a user, otherwise\npermission to access the Confluence site ('Can use' global permission)."
      operationId: "postUserWatchSpaceBySpaceKeyV1"
      parameters:
        - name: "X-Atlassian-Token"
          in: "header"
          description: "Note, you must add header when making a\nrequest, as this operation has XSRF protection."
          required: true
          schema:
            type: "string"
            default: "no-check"
        - name: "spaceKey"
          in: "path"
          description: "The key of the space to add the watcher to."
          required: true
          schema:
            type: "string"
        - {"$ref": "#/components/parameters/userLookupKey"}
        - {"$ref": "#/components/parameters/userLookupUsername"}
        - {"$ref": "#/components/parameters/userLookupAccountId"}
      responses:
        "204":
          description: "Returned if the watcher was successfully created. No response body is\nreturned."
        "403":
          description: "Returned if;\n\n- The `X-Atlassian-Token: no-check` header is not specified.\n- The calling user does not have permission to view the\nspace.\n- A user is specified via a query parameter and the calling user is\nnot a Confluence administrator.\n- No space exists for the specified `spaceKey`."
        "404":
          description: "Returned if no `spaceKey` is specified."
      security:
        - basicAuth: []
        - oAuthDefinitions:
            - write:confluence-content
      x-atlassian-oauth2-scopes: [{"scheme": "oAuthDefinitions", "state": "Current", "scopes": ["write:confluence-content"]}, {"scheme": "oAuthDefinitions", "state": "Beta", "scopes": ["write:watcher:confluence"]}]
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": true}]
      x-atlassian-connect-scope: "WRITE"
    delete:
      tags:
        - "Content watches"
      summary: "Remove space watch"
      description: "Removes a user as a watcher from a space. Choose the user by doing one of\nthe following:\n\n- Specify a user via a query parameter: Use the `accountId` to identify the user.\n- Do not specify a user: The currently logged-in user will be used.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n'Confluence Administrator' global permission if specifying a user, otherwise\npermission to access the Confluence site ('Can use' global permission)."
      operationId: "deleteUserWatchSpaceBySpaceKeyV1"
      parameters:
        - name: "spaceKey"
          in: "path"
          description: "The key of the space to remove the watcher from."
          required: true
          schema:
            type: "string"
        - {"$ref": "#/components/parameters/userLookupKey"}
        - {"$ref": "#/components/parameters/userLookupUsername"}
        - {"$ref": "#/components/parameters/userLookupAccountId"}
      responses:
        "204":
          description: "Returned if the watcher was successfully deleted. No response body is returned."
        "403":
          description: "Returned if;\n\n- The `X-Atlassian-Token: no-check` header is not specified.\n- The calling user does not have permission to view the space.\n- A user is specified via a query parameter and the calling user is\nnot a Confluence administrator.\n- No space exists for the specified `spaceKey`."
        "404":
          description: "Returned if no `spaceKey` is specified."
      security:
        - basicAuth: []
        - oAuthDefinitions:
            - write:confluence-content
      x-atlassian-oauth2-scopes: [{"scheme": "oAuthDefinitions", "state": "Current", "scopes": ["write:confluence-content"]}, {"scheme": "oAuthDefinitions", "state": "Beta", "scopes": ["write:watcher:confluence"]}]
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": true}]
      x-atlassian-connect-scope: "WRITE"
  "/wiki/rest/api/user/email":
    get:
      tags:
        - "Users"
      summary: "Get user email address"
      description: "Returns a user's email address regardless of the user’s profile visibility settings. For Connect apps, this API is only available to apps approved by\nAtlassian, according to these [guidelines](https://community.developer.atlassian.com/t/guidelines-for-requesting-access-to-email-address/27603).\nFor Forge apps, this API only supports access via asApp() requests.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to access the Confluence site ('Can use' global permission)."
      operationId: "getUserEmailV1"
      parameters:
        - name: "accountId"
          in: "query"
          description: "The account ID of the user, which uniquely identifies the user across all Atlassian products.\nFor example, `384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192`. Required."
          required: true
          schema:
            type: "string"
      responses:
        "200":
          description: "Returned if the requested user's email is returned."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/AccountIdEmailRecord"}
        "400":
          description: "Returned if the calling app is not approved to use this API."
        "401":
          description: "Returned if the authentication credentials are incorrect or missing\nfrom the request."
        "404":
          description: "Returned if a user with the given accountId does not exist."
        "501":
          description: "Indicates that the API is not currently enabled."
      x-atlassian-oauth2-scopes: [{"scheme": "oAuthDefinitions", "state": "Beta", "scopes": ["read:email-address:confluence"]}]
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": true}]
      x-atlassian-connect-scope: "ACCESS_EMAIL_ADDRESSES"
  "/wiki/rest/api/user/email/bulk":
    get:
      tags:
        - "Users"
      summary: "Get user email addresses in batch"
      description: "Returns a user's email address regardless of the user’s profile visibility settings. For Connect apps, this API is only available to apps approved by\nAtlassian, according to these [guidelines](https://community.developer.atlassian.com/t/guidelines-for-requesting-access-to-email-address/27603).\nFor Forge apps, this API only supports access via asApp() requests.\n\nAny accounts which are not available will not be included in the result.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to access the Confluence site ('Can use' global permission)."
      operationId: "getUserEmailBulkV1"
      parameters:
        - name: "accountId"
          in: "query"
          description: "The account IDs of the users."
          required: true
          style: "form"
          explode: false
          schema:
            type: "array"
            items:
              type: "string"
      responses:
        "200":
          description: "Returned if the request is successful."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/AccountIdEmailRecordArray"}
        "400":
          description: "Returned if the calling app is not approved to use this API."
        "401":
          description: "Returned if the authentication credentials are incorrect or missing\nfrom the request."
        "501":
          description: "Indicates that the API is not currently enabled."
      x-atlassian-oauth2-scopes: [{"scheme": "oAuthDefinitions", "state": "Beta", "scopes": ["read:email-address:confluence"]}]
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": true}]
      x-atlassian-connect-scope: "ACCESS_EMAIL_ADDRESSES"
  "/atlassian-connect/1/app/module/dynamic":
    get:
      tags:
        - "Dynamic modules"
      summary: "Get modules"
      description: "Returns all modules registered dynamically by the calling app.\n\n**[Permissions](#permissions) required:** Only Connect apps can make this request."
      operationId: "getAtlassianConnect1AppModuleDynamicV1"
      responses:
        "200":
          description: "Returned if the request is successful."
          content:
            "*/*":
              schema: {"$ref": "#/components/schemas/ConnectModules"}
        "401":
          description: "Returned if the call is not from a Connect app."
          content:
            "*/*":
              schema: {"$ref": "#/components/schemas/DynamicModulesErrorMessage"}
            "message":
              example: "The request is not from a Connect app."
              schema:
                $ref: '#/components/schemas/GetModulesR401'
      x-experimental: true
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": true}]
      x-atlassian-connect-scope: "INACCESSIBLE"
    post:
      tags:
        - "Dynamic modules"
      summary: "Register modules"
      description: "Registers a list of modules. For the list of modules that support dynamic registration, see [Dynamic modules](https://developer.atlassian.com/cloud/confluence/dynamic-modules/).\n\n**[Permissions](#permissions) required:** Only Connect apps can make this request."
      operationId: "postAtlassianConnect1AppModuleDynamicV1"
      requestBody:
        content:
          "*/*":
            schema: {"$ref": "#/components/schemas/ConnectModules"}
        required: true
      responses:
        "200":
          description: "Returned if the request is successful."
        "400":
          description: "Returned if:\n* any of the provided modules is invalid. For example, required properties are missing.\n* any of the modules conflict with registered dynamic modules or modules defined in the app descriptor. For example, there are duplicate keys.\n\nDetails of the issues encountered are included in the error message."
          content:
            "*/*":
              schema: {"$ref": "#/components/schemas/DynamicModulesErrorMessage"}
            "message":
              example: "Installation failed. The app com.example.app.key has duplicate module keys: [module-key]. Please contact the app vendor."
              schema:
                $ref: '#/components/schemas/RegisterModulesR400'
        "401":
          description: "Returned if the call is not from a Connect app."
          content:
            "*/*":
              schema: {"$ref": "#/components/schemas/DynamicModulesErrorMessage"}
            "message":
              example: "The request is not from a Connect app."
              schema:
                $ref: '#/components/schemas/RegisterModulesR401'
      x-experimental: true
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": true}]
      x-codegen-request-body-name: "body"
      x-atlassian-connect-scope: "INACCESSIBLE"
    delete:
      tags:
        - "Dynamic modules"
      summary: "Remove modules"
      description: "Remove all or a list of modules registered by the calling app.\n\n**[Permissions](#permissions) required:** Only Connect apps can make this request."
      operationId: "deleteAtlassianConnect1AppModuleDynamicV1"
      parameters:
        - name: "moduleKey"
          in: "query"
          description: "The key of the module to remove. To include multiple module keys, provide multiple copies of this parameter.\nFor example, `moduleKey=dynamic-attachment-entity-property&moduleKey=dynamic-select-field`.\nNonexistent keys are ignored."
          required: true
          style: "form"
          explode: false
          schema:
            type: "array"
            items:
              type: "string"
      responses:
        "204":
          description: "Returned if the request is successful."
        "401":
          description: "Returned if the call is not from a Connect app."
          content:
            "*/*":
              schema: {"$ref": "#/components/schemas/DynamicModulesErrorMessage"}
            "message":
              example: "The request is not from a Connect app."
              schema:
                $ref: '#/components/schemas/RemoveModulesR401'
      x-experimental: true
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": true}]
      x-atlassian-connect-scope: "INACCESSIBLE"
  "/wiki/rest/api/analytics/content/{contentId}/views":
    get:
      tags:
        - "Analytics"
      summary: "Get views"
      description: "Get the total number of views a piece of content has."
      operationId: "getAnalyticsContentByContentIdViewsV1"
      parameters:
        - name: "contentId"
          in: "path"
          description: "The ID of the content to get the views for."
          required: true
          schema:
            type: "string"
        - name: "fromDate"
          in: "query"
          description: "The number of views for the content since the date."
          schema:
            type: "string"
          example: "2021-03-21T00:00:00.000Z"
      responses:
        "200":
          description: "Returns the total number of views for the content."
          content:
            "application/json":
              schema:
                $ref: '#/components/schemas/GetViewsR200'
        "400":
          description: "Returned if client input is invalid."
        "401":
          description: "Returned if the authentication credentials are incorrect."
        "403":
          description: "Returned if the authentication credentials are missing\nfrom the request."
        "404":
          description: "Returned if;\n- There is no content with the given ID."
      security:
        - basicAuth: []
        - oAuthDefinitions:
            - read:confluence-content.summary
      x-atlassian-oauth2-scopes: [{"scheme": "oAuthDefinitions", "state": "Current", "scopes": ["read:confluence-content.summary"]}, {"scheme": "oAuthDefinitions", "state": "Beta", "scopes": ["read:analytics.content:confluence"]}]
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": false}]
      x-atlassian-connect-scope: "READ"
  "/wiki/rest/api/analytics/content/{contentId}/viewers":
    get:
      tags:
        - "Analytics"
      summary: "Get viewers"
      description: "Get the total number of distinct viewers a piece of content has."
      operationId: "getAnalyticsContentByContentIdViewersV1"
      parameters:
        - name: "contentId"
          in: "path"
          description: "The ID of the content to get the viewers for."
          required: true
          schema:
            type: "string"
        - name: "fromDate"
          in: "query"
          description: "The number of views for the content since the date."
          schema:
            type: "string"
          example: "2021-03-21T00:00:00.000Z"
      responses:
        "200":
          description: "Returns the total number of distinct viewers for the content."
          content:
            "application/json":
              schema:
                $ref: '#/components/schemas/GetViewersR200'
        "400":
          description: "Returned if client input is invalid."
        "401":
          description: "Returned if the authentication credentials are incorrect."
        "403":
          description: "Returned if the authentication credentials are missing\nfrom the request."
        "404":
          description: "Returned if;\n- There is no content with the given ID."
      security:
        - basicAuth: []
        - oAuthDefinitions:
            - read:confluence-content.summary
      x-atlassian-oauth2-scopes: [{"scheme": "oAuthDefinitions", "state": "Current", "scopes": ["read:confluence-content.summary"]}, {"scheme": "oAuthDefinitions", "state": "Beta", "scopes": ["read:analytics.content:confluence"]}]
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": false}]
      x-atlassian-connect-scope: "READ"
  "/wiki/rest/api/user/{userId}/property":
    get:
      tags:
        - "User properties"
      summary: "Get user properties"
      description: "Returns the properties for a user as list of property keys. For more information\nabout user properties, see [Confluence entity properties](https://developer.atlassian.com/cloud/confluence/confluence-entity-properties/).\n`Note`, these properties stored against a user are on a Confluence site level and not space/content level.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to access the Confluence site ('Can use' global permission)."
      operationId: "getUserByUserIdPropertyV1"
      parameters:
        - name: "userId"
          in: "path"
          description: "The account ID of the user to be queried for its properties."
          required: true
          schema:
            type: "string"
        - name: "start"
          in: "query"
          description: "The starting index of the returned properties."
          schema:
            type: "integer"
            minimum: 0
            format: "int32"
            default: 0
        - name: "limit"
          in: "query"
          description: "The maximum number of properties to return per page.\nNote, this may be restricted by fixed system limits."
          schema:
            type: "integer"
            maximum: 25
            minimum: 0
            format: "int32"
            default: 5
      responses:
        "200":
          description: "Returned if the requested properties are returned."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/UserPropertyKeyArray"}
        "400":
          description: "Returned if request has malformed syntax or userId is not a valid user id."
        "401":
          description: "Returned if the authentication credentials are incorrect or missing from the request."
        "403":
          description: "Returned if the user does not have the correct permissions."
        "404":
          description: "Returned if there is no user with the given user ID."
      security:
        - basicAuth: []
        - oAuthDefinitions:
            - read:user.property:confluence
      x-atlassian-oauth2-scopes: [{"scheme": "oAuthDefinitions", "state": "Current", "scopes": ["read:user.property:confluence"]}]
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": true}]
      x-atlassian-connect-scope: "READ"
  "/wiki/rest/api/user/{userId}/property/{key}":
    get:
      tags:
        - "User properties"
      summary: "Get user property"
      description: "Returns the property corresponding to `key` for a user. For more information\nabout user properties, see [Confluence entity properties](https://developer.atlassian.com/cloud/confluence/confluence-entity-properties/).\n`Note`, these properties stored against a user are on a Confluence site level and not space/content level.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to access the Confluence site ('Can use' global permission)."
      operationId: "getUserByUserIdPropertyByKeyV1"
      parameters:
        - name: "userId"
          in: "path"
          description: "The account ID of the user to be queried for its properties."
          required: true
          schema:
            type: "string"
        - name: "key"
          in: "path"
          description: "The key of the user property."
          required: true
          schema:
            type: "string"
            pattern: "^[-_a-zA-Z0-9]+$"
      responses:
        "200":
          description: "Returned if the requested properties are returned."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/UserProperty"}
        "400":
          description: "Returned if;\n\n- The key is too long.\n- Request has malformed syntax or userId is not a valid user id."
        "401":
          description: "Returned if the authentication credentials are incorrect or missing from the request."
        "403":
          description: "Returned if the user does not have the correct permissions."
        "404":
          description: "Returned if;\n\n- There is no user with the given user ID\n- There is no user property with the given key"
      security:
        - basicAuth: []
        - oAuthDefinitions:
            - read:user.property:confluence
      x-atlassian-oauth2-scopes: [{"scheme": "oAuthDefinitions", "state": "Current", "scopes": ["read:user.property:confluence"]}]
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": true}]
      x-atlassian-connect-scope: "READ"
    put:
      tags:
        - "User properties"
      summary: "Update user property"
      description: "Updates a property for the given user. Note, you cannot update the key of a user property, only the value.\nFor more information about user properties, see\n[Confluence entity properties](https://developer.atlassian.com/cloud/confluence/confluence-entity-properties/).\n`Note`, these properties stored against a user are on a Confluence site level and not space/content level.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to access the Confluence site ('Can use' global permission)."
      operationId: "putUserByUserIdPropertyByKeyV1"
      parameters:
        - name: "userId"
          in: "path"
          description: "The account ID of the user. The accountId uniquely identifies the user across all Atlassian\nproducts. For example, 384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192"
          required: true
          schema:
            type: "string"
        - name: "key"
          in: "path"
          description: "The key of the user property."
          required: true
          schema:
            type: "string"
            pattern: "^[-_a-zA-Z0-9]+$"
      requestBody:
        description: "The user property to be updated."
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/UserPropertyUpdate"}
        required: true
      responses:
        "204":
          description: "Returned if the user property is updated."
        "400":
          description: "Returned if;\n\n- The key is too long.\n- The value is empty.\n- The value is too long.\n- Request has malformed syntax or userId is not a valid user id."
        "401":
          description: "Returned if the authentication credentials are incorrect or missing from the request."
        "403":
          description: "Returned if the user does not have the correct permissions."
        "404":
          description: "Returned if;\n\n- There is no user property with the given key.\n- There is no user with the given user id."
      security:
        - basicAuth: []
        - oAuthDefinitions:
            - write:user.property:confluence
      x-atlassian-oauth2-scopes: [{"scheme": "oAuthDefinitions", "state": "Current", "scopes": ["write:user.property:confluence"]}]
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": true}]
      x-codegen-request-body-name: "body"
      x-atlassian-connect-scope: "WRITE"
    post:
      tags:
        - "User properties"
      summary: "Create user property by key"
      description: "Creates a property for a user. For more information  about user properties, see [Confluence entity properties]\n(https://developer.atlassian.com/cloud/confluence/confluence-entity-properties/).\n`Note`, these properties stored against a user are on a Confluence site level and not space/content level.\n\n`Note:` the number of properties which could be created per app in a tenant for each user might be\nrestricted by fixed system limits.\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to access the Confluence site ('Can use' global permission)."
      operationId: "postUserByUserIdPropertyByKeyV1"
      parameters:
        - name: "userId"
          in: "path"
          description: "The account ID of the user. The accountId uniquely identifies the user across all Atlassian\nproducts. For example, 384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192"
          required: true
          schema:
            type: "string"
        - name: "key"
          in: "path"
          description: "The key of the user property."
          required: true
          schema:
            type: "string"
            pattern: "^[-_a-zA-Z0-9]+$"
      requestBody:
        description: "The user property to be created."
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/UserPropertyCreate"}
        required: true
      responses:
        "201":
          description: "Returned if the user property is created."
        "400":
          description: "Returned if;\n\n- The key is too long.\n- The value is empty.\n- The value is too long.\n- Request has malformed syntax or userId is not a valid user id."
        "401":
          description: "Returned if the authentication credentials are incorrect or missing from the request."
        "403":
          description: "Returned if the user does not have the correct permissions."
        "404":
          description: "Returned if there is no user with the given user id."
        "409":
          description: "Returned if the key already exists for the user."
      security:
        - basicAuth: []
        - oAuthDefinitions:
            - write:user.property:confluence
      x-atlassian-oauth2-scopes: [{"scheme": "oAuthDefinitions", "state": "Current", "scopes": ["write:user.property:confluence"]}]
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": true}]
      x-codegen-request-body-name: "body"
      x-atlassian-connect-scope: "WRITE"
    delete:
      tags:
        - "User properties"
      summary: "Delete user property"
      description: "Deletes a property for the given user.\nFor more information about user properties, see\n[Confluence entity properties](https://developer.atlassian.com/cloud/confluence/confluence-entity-properties/).\n`Note`, these properties stored against a user are on a Confluence site level and not space/content level.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to access the Confluence site ('Can use' global permission)."
      operationId: "deleteUserByUserIdPropertyByKeyV1"
      parameters:
        - name: "userId"
          in: "path"
          description: "The account ID of the user. The accountId uniquely identifies the user across all Atlassian\nproducts. For example, 384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192"
          required: true
          schema:
            type: "string"
        - name: "key"
          in: "path"
          description: "The key of the user property."
          required: true
          schema:
            type: "string"
            pattern: "^[-_a-zA-Z0-9]+$"
      responses:
        "204":
          description: "Returned if the user property is deleted."
        "400":
          description: "Returned if;\n\n- The key is too long.\n- Request has malformed syntax or userId is not a valid user id."
        "401":
          description: "Returned if the authentication credentials are incorrect or missing from the request."
        "403":
          description: "Returned if the user does not have the correct permissions."
        "404":
          description: "Returned if;\n\n- There is no user property with the given key\n- There is no user with the given user id"
      security:
        - basicAuth: []
        - oAuthDefinitions:
            - write:user.property:confluence
      x-atlassian-oauth2-scopes: [{"scheme": "oAuthDefinitions", "state": "Current", "scopes": ["write:user.property:confluence"]}]
      x-atlassian-data-security-policy: [{"app-access-rule-exempt": true}]
      x-atlassian-connect-scope: "WRITE"
components:
  schemas:
    "AccountId":
      type: "object"
      properties:
        "accountId":
          type: "string"
      required:
        - "accountId"
      title: AccountId
    "AccountIdEmailRecord":
      type: "object"
      properties:
        "accountId":
          type: "string"
        "email":
          type: "string"
      required:
        - "accountId"
        - "email"
      title: AccountIdEmailRecord
    "AccountIdEmailRecordArray":
      type: "array"
      items: {"$ref": "#/components/schemas/AccountIdEmailRecord"}
      title: AccountIdEmailRecordArray
    "AffectedObject":
      type: "object"
      properties:
        "name":
          type: "string"
        "objectType":
          type: "string"
      required:
        - "name"
        - "objectType"
      title: AffectedObject
    "AsyncId":
      type: "object"
      properties:
        "asyncId":
          type: "string"
      required:
        - "asyncId"
      title: AsyncId
    "AsyncIdArray":
      type: "array"
      items: {"$ref": "#/components/schemas/AsyncId"}
      title: AsyncIdArray
    "AttachmentUpdate":
      type: "object"
      properties:
        "version":
          $ref: '#/components/schemas/Version83f448'
        "id":
          type: "string"
          description: "The ID of the attachment to be updated."
        "type":
          $ref: '#/components/schemas/TypeEnum'
        "title":
          type: "string"
          maxLength: 255
          description: "The updated name of the attachment."
        "metadata":
          $ref: '#/components/schemas/Metadata'
        "container":
          $ref: '#/components/schemas/Containerb524b8'
      required:
        - "id"
        - "type"
        - "version"
      title: AttachmentUpdate
    "AuditRecord":
      type: "object"
      properties:
        "author":
          $ref: '#/components/schemas/Author'
        "remoteAddress":
          type: "string"
        "creationDate":
          type: "integer"
          format: "int64"
          description: "The creation date-time of the audit record, as a timestamp."
        "summary":
          type: "string"
        "description":
          type: "string"
        "category":
          type: "string"
        "sysAdmin":
          type: "boolean"
        "superAdmin":
          type: "boolean"
        "affectedObject": {"$ref": "#/components/schemas/AffectedObject"}
        "changedValues":
          type: "array"
          items: {"$ref": "#/components/schemas/ChangedValue"}
        "associatedObjects":
          type: "array"
          items: {"$ref": "#/components/schemas/AffectedObject"}
      required:
        - "affectedObject"
        - "associatedObjects"
        - "author"
        - "category"
        - "changedValues"
        - "creationDate"
        - "description"
        - "remoteAddress"
        - "summary"
        - "sysAdmin"
      title: AuditRecord
    "AuditRecordArray":
      type: "object"
      properties:
        "results":
          type: "array"
          items: {"$ref": "#/components/schemas/AuditRecord"}
        "start":
          type: "integer"
          format: "int32"
        "limit":
          type: "integer"
          format: "int32"
        "size":
          type: "integer"
          format: "int32"
        "_links": {"$ref": "#/components/schemas/GenericLinks"}
      required:
        - "_links"
        - "limit"
        - "results"
        - "size"
        - "start"
      title: AuditRecordArray
    "AuditRecordCreate":
      type: "object"
      properties:
        "author":
          $ref: '#/components/schemas/Author0d1a37'
        "remoteAddress":
          type: "string"
          description: "The IP address of the computer where the event was initiated from."
        "creationDate":
          type: "integer"
          format: "int64"
          description: "The creation date-time of the audit record, as a timestamp. This is converted\nto a date-time display in the Confluence UI. If the `creationDate` is not\nspecified, then it will be set to the timestamp for the current date-time."
        "summary":
          type: "string"
          description: "The summary of the event, which is displayed in the 'Change' column on\nthe audit log in the Confluence UI."
        "description":
          type: "string"
          description: "A long description of the event, which is displayed in the 'Description'\nfield on the audit log in the Confluence UI."
        "category":
          type: "string"
          description: "The category of the event, which is displayed in the 'Event type' column\non the audit log in the Confluence UI."
        "sysAdmin":
          type: "boolean"
          description: "Indicates whether the event was actioned by a system administrator."
          default: false
        "affectedObject": {"$ref": "#/components/schemas/AffectedObject"}
        "changedValues":
          type: "array"
          items: {"$ref": "#/components/schemas/ChangedValue"}
          description: "The values that were changed in the event."
        "associatedObjects":
          type: "array"
          items: {"$ref": "#/components/schemas/AffectedObject"}
          description: "Objects that were associated with the event. For example, if the event\nwas a space permission change then the associated object would be the\nspace."
      required:
        - "remoteAddress"
      title: AuditRecordCreate
    "AvailableContentStates":
      type: "object"
      properties:
        "spaceContentStates":
          type: "array"
          items: {"type": "object", "$ref": "#/components/schemas/ContentState"}
          description: "Space suggested content states that can be used in the space.\nThis list can be empty if there are no space content states defined in the space or if space content states are disabled in the space.\nAll spaces start with 4 default space content states, and this can be modified in the UI under space settings."
        "customContentStates":
          type: "array"
          items: {"type": "object", "$ref": "#/components/schemas/ContentState"}
          description: "Custom content states that can be used by the user on the content of this call.\nThis list can be empty if there are no custom content states defined by the user or if custom content states are disabled in the space of the content.\nThis will at most have 3 of the most recently published content states. \nOnly the calling user has access to place these states on content, but all users can see these states once they are placed."
      required:
        - "spaceContentStates"
        - "customContentStates"
      title: AvailableContentStates
    "BlueprintTemplate":
      type: "object"
      properties:
        "templateId":
          type: "string"
        "originalTemplate":
          $ref: '#/components/schemas/OriginalTemplate'
        "referencingBlueprint":
          type: "string"
        "name":
          type: "string"
        "description":
          type: "string"
        "space":
          $ref: '#/components/schemas/Space82ef96'
        "labels":
          type: "array"
          items: {"$ref": "#/components/schemas/Label"}
        "templateType":
          type: "string"
        "editorVersion":
          type: "string"
        "body": {"$ref": "#/components/schemas/ContentTemplateBody"}
        "_expandable":
          $ref: '#/components/schemas/Expandable'
        "_links": {"$ref": "#/components/schemas/GenericLinks"}
      required:
        - "_links"
        - "description"
        - "labels"
        - "name"
        - "originalTemplate"
        - "referencingBlueprint"
        - "templateId"
        - "templateType"
      title: BlueprintTemplate
    "BlueprintTemplateArray":
      type: "object"
      properties:
        "results":
          type: "array"
          items: {"$ref": "#/components/schemas/BlueprintTemplate"}
        "start":
          type: "integer"
          format: "int32"
        "limit":
          type: "integer"
          format: "int32"
        "size":
          type: "integer"
          format: "int32"
        "_links": {"$ref": "#/components/schemas/GenericLinks"}
      required:
        - "_links"
        - "limit"
        - "results"
        - "size"
        - "start"
      title: BlueprintTemplateArray
    "ButtonLookAndFeel":
      type: "object"
      properties:
        "backgroundColor":
          type: "string"
        "color":
          type: "string"
      required:
        - "backgroundColor"
        - "color"
      nullable: true
      title: ButtonLookAndFeel
    "Breadcrumb":
      type: "object"
      properties:
        "label":
          type: "string"
        "url":
          type: "string"
        "separator":
          type: "string"
      required:
        - "label"
        - "separator"
        - "url"
      title: Breadcrumb
    "ChangedValue":
      type: "object"
      properties:
        "name":
          type: "string"
        "oldValue":
          type: "string"
        "hiddenOldValue":
          type: "string"
        "newValue":
          type: "string"
        "hiddenNewValue":
          type: "string"
      required:
        - "name"
        - "newValue"
        - "oldValue"
      title: ChangedValue
    "ConnectModule":
      type: "object"
      description: "A [Connect module](https://developer.atlassian.com/cloud/confluence/modules/admin-page/) in the same format as in the\n[app descriptor](https://developer.atlassian.com/cloud/confluence/app-descriptor/)."
      example: {"key": "my-webitem", "location": "system.admin/globalsettings", "url": "/my-web-item", "name": {"value": "My Web Item"}}
      title: ConnectModule
    "ConnectModules":
      type: "object"
      properties:
        "modules":
          type: "array"
          items: {"$ref": "#/components/schemas/ConnectModule"}
          description: "A list of app modules in the same format as the `modules` property in the\n[app descriptor](https://developer.atlassian.com/cloud/confluence/app-descriptor/)."
      required:
        - "modules"
      example: {"webItems": [{"key": "my-webitem", "location": "system.admin/globalsettings", "url": "/my-web-item", "name": {"value": "My Web Item"}}], "adminPages": [{"key": "my-admin-page", "name": {"value": "My Admin Page"}, "url": "/my-admin-page"}]}
      title: ConnectModules
    "Container":
      type: "object"
      additionalProperties: true
      description: "Container for content. This can be either a space (containing a page or blogpost)\nor a page/blog post (containing an attachment or comment)"
      nullable: true
      title: Container
    "ContainerLookAndFeel":
      type: "object"
      properties:
        "background":
          type: "string"
        "backgroundAttachment":
          type: "string"
          nullable: true
        "backgroundBlendMode":
          type: "string"
          nullable: true
        "backgroundClip":
          type: "string"
          nullable: true
        "backgroundColor":
          type: "string"
          nullable: true
        "backgroundImage":
          type: "string"
          nullable: true
        "backgroundOrigin":
          type: "string"
          nullable: true
        "backgroundPosition":
          type: "string"
          nullable: true
        "backgroundRepeat":
          type: "string"
          nullable: true
        "backgroundSize":
          type: "string"
          nullable: true
        "padding":
          type: "string"
        "borderRadius":
          type: "string"
      required:
        - "background"
        - "backgroundColor"
        - "backgroundImage"
        - "backgroundSize"
        - "borderRadius"
        - "padding"
      nullable: true
      title: ContainerLookAndFeel
    "ContainerSummary":
      type: "object"
      properties:
        "title":
          type: "string"
        "displayUrl":
          type: "string"
      required:
        - "displayUrl"
        - "title"
      title: ContainerSummary
    "AttachmentPropertiesUpdateBody":
      type: "object"
      properties:
        "id":
          type: "string"
        "type":
          type: "string"
          description: "Set this to \"attachment\""
        "status":
          type: "string"
        "title":
          type: "string"
        "container": {"$ref": "#/components/schemas/Container"}
        "metadata":
          $ref: '#/components/schemas/Metadata9a43e8'
        "extensions":
          $ref: '#/components/schemas/Extensions'
        "version": {"$ref": "#/components/schemas/Version"}
      required:
        - "id"
        - "type"
        - "version"
      additionalProperties: true
      title: AttachmentPropertiesUpdateBody
    "Content":
      type: "object"
      properties:
        "id":
          type: "string"
        "type":
          type: "string"
          description: "Can be \"page\", \"blogpost\", \"attachment\" or \"content\""
        "status":
          type: "string"
        "title":
          type: "string"
        "space": {"$ref": "#/components/schemas/Space"}
        "history": {"$ref": "#/components/schemas/ContentHistory"}
        "version": {"$ref": "#/components/schemas/Version"}
        "ancestors":
          type: "array"
          items: {"$ref": "#/components/schemas/Content"}
          nullable: true
        "operations":
          type: "array"
          items: {"$ref": "#/components/schemas/OperationCheckResult"}
        "children": {"$ref": "#/components/schemas/ContentChildren"}
        "childTypes": {"$ref": "#/components/schemas/ContentChildType"}
        "descendants": {"$ref": "#/components/schemas/ContentChildren"}
        "container": {"$ref": "#/components/schemas/Container"}
        "body":
          $ref: '#/components/schemas/Body'
        "restrictions":
          $ref: '#/components/schemas/Restrictions'
        "metadata": {"$ref": "#/components/schemas/ContentMetadata"}
        "macroRenderedOutput":
          $ref: '#/components/schemas/MacroRenderedOutput'
        "extensions":
          $ref: '#/components/schemas/Extensions'
        "_expandable":
          $ref: '#/components/schemas/Expandable07c2ed'
        "_links": {"$ref": "#/components/schemas/GenericLinks"}
        ari:
          type: string
        base64EncodedAri:
          type: string
      required:
        - "status"
        - "type"
      description: "Base object for all content types.\nRepresentation of a blogpost (content)"
      nullable: true
      title: Content
    "ContentArray":
      type: "object"
      properties:
        "results":
          type: "array"
          items: {"$ref": "#/components/schemas/Content"}
        "start":
          type: "integer"
          format: "int32"
        "limit":
          type: "integer"
          format: "int32"
        "size":
          type: "integer"
          format: "int32"
        "_links": {"$ref": "#/components/schemas/GenericLinks"}
      required:
        - "_links"
        - "results"
        - "size"
      title: ContentArray
    "ContentBlogpost":
      description: "Representation of a blogpost (content)"
      title: ContentBlogpost
    "ContentBlueprintDraft":
      type: "object"
      properties:
        "version":
          $ref: '#/components/schemas/Versiona9ec0e'
        "title":
          type: "string"
          maxLength: 255
          description: "The title of the content. If you don't want to change the title,\nset this to the current title of the draft."
        "type":
          $ref: '#/components/schemas/TypeEnumc97071'
        "status":
          $ref: '#/components/schemas/StatusEnum'
        "space":
          $ref: '#/components/schemas/Space33569e'
        "ancestors":
          type: "array"
          items:
            $ref: '#/components/schemas/AncestorsItem'
          description: "The new ancestor (i.e. parent page) for the content. If you have\nspecified an ancestor, you must also specify a `space` property\nin the request body for the space that the ancestor is in.\n\nNote, if you specify more than one ancestor, the last ID in the array\nwill be selected as the parent page for the content."
          nullable: true
      required:
        - "title"
        - "type"
        - "version"
      additionalProperties: true
      title: ContentBlueprintDraft
    "AsyncContentBody":
      type: "object"
      properties:
        "value":
          type: "string"
        "representation":
          $ref: '#/components/schemas/RepresentationEnum'
        "renderTaskId":
          type: "string"
        "error":
          type: "string"
        "status":
          $ref: '#/components/schemas/StatusEnumb3e4e3'
        "embeddedContent":
          type: "array"
          items: {"$ref": "#/components/schemas/EmbeddedContent"}
        "webresource": {"$ref": "#/components/schemas/WebResourceDependencies"}
        "mediaToken":
          $ref: '#/components/schemas/MediaToken'
        "_expandable":
          $ref: '#/components/schemas/Expandable9bc16d'
        "_links": {"$ref": "#/components/schemas/GenericLinks"}
      title: AsyncContentBody
    "AsyncContentBodyArray":
      type: "array"
      items: {"$ref": "#/components/schemas/AsyncContentBody"}
      title: AsyncContentBodyArray
    "ContentBody":
      type: "object"
      properties:
        "value":
          type: "string"
        "representation":
          $ref: '#/components/schemas/RepresentationEnum'
        "embeddedContent":
          type: "array"
          items: {"$ref": "#/components/schemas/EmbeddedContent"}
        "webresource": {"$ref": "#/components/schemas/WebResourceDependencies"}
        "mediaToken":
          $ref: '#/components/schemas/MediaToken'
        "_expandable":
          $ref: '#/components/schemas/Expandable9bc16d'
        "_links": {"$ref": "#/components/schemas/GenericLinks"}
      required:
        - "representation"
        - "value"
      title: ContentBody
    "ContentBodyCreate":
      type: "object"
      properties:
        "value":
          type: "string"
          description: "The body of the content in the relevant format."
        "representation":
          $ref: '#/components/schemas/RepresentationEnum5a505f'
      required:
        - "representation"
        - "value"
      additionalProperties: true
      description: "This object is used when creating or updating content."
      title: ContentBodyCreate
    "ContentChildren":
      type: "object"
      properties:
        "attachment": {"$ref": "#/components/schemas/ContentArray"}
        "comment": {"$ref": "#/components/schemas/ContentArray"}
        "page": {"$ref": "#/components/schemas/ContentArray"}
        "whiteboard": {"$ref": "#/components/schemas/ContentArray"}
        "database": {"$ref": "#/components/schemas/ContentArray"}
        "embed": {"$ref": "#/components/schemas/ContentArray"}
        "folder": {"$ref": "#/components/schemas/ContentArray"}
        "_expandable":
          $ref: '#/components/schemas/Expandable3263e2'
        "_links": {"$ref": "#/components/schemas/GenericLinks"}
      additionalProperties: true
      title: ContentChildren
    "ContentBodyCreateStorage":
      type: "object"
      properties:
        "value":
          type: "string"
          description: "The body of the content in the relevant format."
        "representation":
          $ref: '#/components/schemas/RepresentationEnumc45a34'
      required:
        - "representation"
        - "value"
      additionalProperties: true
      description: "This object is used when creating or updating content."
      title: ContentBodyCreateStorage
    "ContentChildType":
      type: "object"
      properties:
        "attachment":
          $ref: '#/components/schemas/Attachment'
        "comment":
          $ref: '#/components/schemas/Comment'
        "page":
          $ref: '#/components/schemas/Page'
        "_expandable":
          $ref: '#/components/schemas/Expandable890c87'
      additionalProperties: true
      description: "Shows whether a piece of content has attachments, comments, or child pages/whiteboards.\nNote, this doesn't actually contain the child objects."
      title: ContentChildType
    "ContentCreate":
      type: "object"
      properties:
        "id":
          type: "string"
          description: "The ID of the draft content. Required when publishing a draft."
          nullable: true
        "title":
          type: "string"
          maxLength: 255
          nullable: true
        "type":
          type: "string"
          description: "The type of the new content. Custom content types defined by apps are also supported. eg. 'page', 'blogpost', 'comment' etc."
        "space":
          $ref: '#/components/schemas/Spacecc1e40'
        "status":
          $ref: '#/components/schemas/StatusEnume76e6a'
        "container":
          $ref: '#/components/schemas/Container7b328b'
        "ancestors":
          type: "array"
          items:
            $ref: '#/components/schemas/AncestorsItemee9937'
          description: "The parent content of the new content.  If you are creating a top-level `page` or `comment`,\nthis can be left blank. If you are creating a child page, this is where the parent page id goes.\nIf you are creating a child comment, this is where the parent comment id goes. Only one parent\ncontent id can be specified."
          nullable: true
        "body":
          $ref: '#/components/schemas/Body5304ad'
      required:
        - "type"
      additionalProperties: true
      nullable: true
      title: ContentCreate
    "ContentHistory":
      type: "object"
      properties:
        "latest":
          type: "boolean"
        "createdBy": {"$ref": "#/components/schemas/User"}
        "ownedBy": {"$ref": "#/components/schemas/User"}
        "lastOwnedBy": {"$ref": "#/components/schemas/User"}
        "createdDate":
          type: "string"
          format: "date-time"
        "lastUpdated": {"$ref": "#/components/schemas/Version"}
        "previousVersion": {"$ref": "#/components/schemas/Version"}
        "contributors":
          $ref: '#/components/schemas/Contributors'
        "nextVersion": {"$ref": "#/components/schemas/Version"}
        "_expandable":
          $ref: '#/components/schemas/Expandabled312ab'
        "_links": {"$ref": "#/components/schemas/GenericLinks"}
      required:
        - "latest"
      nullable: true
      title: ContentHistory
    "ContentId":
      type: "string"
      title: ContentId
    "ContentLookAndFeel":
      type: "object"
      properties:
        "screen": {"$ref": "#/components/schemas/ScreenLookAndFeel"}
        "container": {"$ref": "#/components/schemas/ContainerLookAndFeel"}
        "header": {"$ref": "#/components/schemas/ContainerLookAndFeel"}
        "body": {"$ref": "#/components/schemas/ContainerLookAndFeel"}
      title: ContentLookAndFeel
    "ContentMetadata":
      type: "object"
      properties:
        "currentuser":
          $ref: '#/components/schemas/Currentuser'
        "properties": {"$ref": "#/components/schemas/GenericLinks"}
        "frontend":
          $ref: '#/components/schemas/Frontend'
        "labels":
          $ref: '#/components/schemas/Labels'
      description: "Metadata object for page, blogpost, comment content"
      title: ContentMetadata
    "ContentProperty":
      type: "object"
      properties:
        "id":
          type: "string"
        "key":
          type: "string"
        "value":
          description: "The value of the content property. This can be empty or a complex object."
        "version":
          $ref: '#/components/schemas/Version13bb46'
        "_links": {"$ref": "#/components/schemas/GenericLinks"}
        "_expandable":
          $ref: '#/components/schemas/Expandableabce4d'
      required:
        - "_links"
        - "id"
        - "key"
        - "value"
      title: ContentProperty
    "ContentPropertyArray":
      type: "object"
      properties:
        "results":
          type: "array"
          items: {"$ref": "#/components/schemas/ContentProperty"}
        "start":
          type: "integer"
          format: "int32"
        "limit":
          type: "integer"
          format: "int32"
        "size":
          type: "integer"
          format: "int32"
        "_links": {"$ref": "#/components/schemas/GenericLinks"}
      required:
        - "_links"
        - "limit"
        - "results"
        - "size"
        - "start"
      title: ContentPropertyArray
    "ContentPropertyCreate":
      type: "object"
      properties:
        "key":
          type: "string"
          maxLength: 255
          description: "The key of the new property."
        "value":
          description: "The value of the content property. This can be empty or a complex object."
      required:
        - "key"
        - "value"
      additionalProperties: true
      title: ContentPropertyCreate
    "ContentPropertyCreateNoKey":
      type: "object"
      properties:
        "value":
          description: "The value of the content property. This can be empty or a complex object."
      required:
        - "value"
      additionalProperties: true
      title: ContentPropertyCreateNoKey
    "ContentPropertyUpdate":
      type: "object"
      properties:
        "value":
          description: "The value of the content property. This can be empty or a complex object."
        "version":
          $ref: '#/components/schemas/Version9f6eac'
      required:
        - "value"
        - "version"
      additionalProperties: true
      title: ContentPropertyUpdate
    "ContentRestriction":
      type: "object"
      properties:
        "operation":
          $ref: '#/components/schemas/OperationEnum'
        "restrictions":
          $ref: '#/components/schemas/Restrictions88a50a'
        "content": {"$ref": "#/components/schemas/Content"}
        "_expandable":
          $ref: '#/components/schemas/Expandablea42744'
        "_links": {"$ref": "#/components/schemas/GenericLinks"}
      required:
        - "_expandable"
        - "_links"
        - "operation"
      title: ContentRestriction
    "ContentRestrictionArray":
      type: "object"
      properties:
        "results":
          type: "array"
          items: {"$ref": "#/components/schemas/ContentRestriction"}
        "start":
          type: "integer"
          format: "int32"
        "limit":
          type: "integer"
          format: "int32"
        "size":
          type: "integer"
          format: "int32"
        "restrictionsHash":
          type: "string"
          description: "This property is used by the UI to figure out whether a set of restrictions\nhas changed."
        "_links": {"$ref": "#/components/schemas/GenericLinks"}
      required:
        - "_links"
        - "limit"
        - "restrictionsHash"
        - "results"
        - "size"
        - "start"
      title: ContentRestrictionArray
    "ContentRestrictionUpdate":
      type: "object"
      properties:
        "operation":
          $ref: '#/components/schemas/OperationEnum5bd999'
        "restrictions":
          $ref: '#/components/schemas/Restrictionsf477d3'
        "content": {"$ref": "#/components/schemas/Content"}
      required:
        - "operation"
        - "restrictions"
      title: ContentRestrictionUpdate
    "ContentRestrictionAddOrUpdateArray":
      title: ContentRestrictionAddOrUpdateArray
    "AddContentRestriction":
      type: "object"
      properties:
        "operation":
          $ref: '#/components/schemas/OperationEnum3ac951'
        "restrictions":
          $ref: '#/components/schemas/Restrictionsa50726'
      required:
        - "operation"
        - "restrictions"
      title: AddContentRestriction
    "AddContentRestrictionUpdateArray":
      type: "array"
      items: {"$ref": "#/components/schemas/AddContentRestriction"}
      title: AddContentRestrictionUpdateArray
    "ContentPageResponse":
      type: "object"
      properties:
        "results":
          type: "array"
          items: {"$ref": "#/components/schemas/Content"}
        "start":
          type: "integer"
          format: "int32"
        "limit":
          type: "integer"
          format: "int32"
        "size":
          type: "integer"
          format: "int32"
      required:
        - "limit"
        - "results"
        - "size"
        - "start"
      title: ContentPageResponse
    "ContentState":
      type: "object"
      properties:
        "id":
          type: "integer"
          format: "int64"
          description: "identifier of content state. If 0, 1, or 2, this is a default space state"
        "name":
          type: "string"
          description: "name of content state."
        "color":
          type: "string"
          description: "hex string representing color of state"
      required:
        - "id"
        - "name"
        - "color"
      title: ContentState
    "ContentStateRestInput":
      type: "object"
      properties:
        "name":
          type: "string"
          description: "Name of content state. Maximum 20 characters."
        "color":
          type: "string"
          description: "Color of state. Must be in 6 digit hex form (#FFFFFF). The default colors offered in the UI are:\n #ff7452 (red),\n #2684ff (blue),\n #ffc400 (yellow),\n #57d9a3 (green), and\n #8777d9 (purple)"
        "id":
          type: "integer"
          format: "int64"
          description: "id of state. This can be 0,1, or 2 if you wish to specify a default space state."
      title: ContentStateRestInput
    "ContentStateResponse":
      type: "object"
      properties:
        "contentState": {"$ref": "#/components/schemas/ContentState", "description": "Null or content state"}
        "lastUpdated":
          type: "string"
          description: "Timestamp of last publish event where content state changed"
      title: ContentStateResponse
    "ContentStateSettings":
      type: "object"
      properties:
        "contentStatesAllowed":
          type: "boolean"
          description: "Whether users can place any content states on content"
        "customContentStatesAllowed":
          type: "boolean"
          description: "Whether users can place their custom states on content"
        "spaceContentStatesAllowed":
          type: "boolean"
          description: "Whether users can place space suggested states on content"
        "spaceContentStates":
          type: "array"
          items: {"$ref": "#/components/schemas/ContentState"}
          description: "space suggested content states that users can choose from"
      required:
        - "contentStatesAllowed"
        - "customContentStatesAllowed"
        - "spaceContentStatesAllowed"
      title: ContentStateSettings
    "ContentTemplate":
      type: "object"
      properties:
        "templateId":
          type: "string"
        "originalTemplate":
          $ref: '#/components/schemas/OriginalTemplate25a4f5'
        "referencingBlueprint":
          type: "string"
        "name":
          type: "string"
        "description":
          type: "string"
        "space":
          $ref: '#/components/schemas/Space82ef96'
        "labels":
          type: "array"
          items: {"$ref": "#/components/schemas/Label"}
        "templateType":
          type: "string"
        "editorVersion":
          type: "string"
        "body": {"$ref": "#/components/schemas/ContentTemplateBody"}
        "_expandable":
          $ref: '#/components/schemas/Expandable'
        "_links": {"$ref": "#/components/schemas/GenericLinks"}
      required:
        - "_links"
        - "description"
        - "labels"
        - "name"
        - "templateId"
        - "templateType"
      title: ContentTemplate
    "ContentTemplateArray":
      type: "object"
      properties:
        "results":
          type: "array"
          items: {"$ref": "#/components/schemas/ContentTemplate"}
        "start":
          type: "integer"
          format: "int32"
        "limit":
          type: "integer"
          format: "int32"
        "size":
          type: "integer"
          format: "int32"
        "_links": {"$ref": "#/components/schemas/GenericLinks"}
      required:
        - "_links"
        - "limit"
        - "results"
        - "size"
        - "start"
      title: ContentTemplateArray
    "ContentTemplateCreate":
      type: "object"
      properties:
        "name":
          type: "string"
          description: "The name of the new template."
        "templateType":
          type: "string"
          description: "The type of the new template. Set to `page`."
        "body": {"$ref": "#/components/schemas/ContentTemplateBodyCreate"}
        "description":
          type: "string"
          maxLength: 255
          description: "A description of the new template."
        "labels":
          type: "array"
          items: {"$ref": "#/components/schemas/Label"}
          description: "Labels for the new template."
        "space":
          $ref: '#/components/schemas/Space3ea116'
      required:
        - "body"
        - "name"
        - "templateType"
      additionalProperties: true
      description: "This object is used to create content templates."
      title: ContentTemplateCreate
    "ContentTemplateBody":
      type: "object"
      properties:
        "view": {"$ref": "#/components/schemas/ContentBody"}
        "export_view": {"$ref": "#/components/schemas/ContentBody"}
        "styled_view": {"$ref": "#/components/schemas/ContentBody"}
        "storage": {"$ref": "#/components/schemas/ContentBody"}
        "editor": {"$ref": "#/components/schemas/ContentBody"}
        "editor2": {"$ref": "#/components/schemas/ContentBody"}
        "wiki": {"$ref": "#/components/schemas/ContentBody"}
        "atlas_doc_format": {"$ref": "#/components/schemas/ContentBody"}
        "anonymous_export_view": {"$ref": "#/components/schemas/ContentBody"}
      description: "The body of the new content. Does not apply to attachments.\nOnly one body format should be specified as the property for\nthis object, e.g. `storage`.\n\nNote, `editor2` format is used by Atlassian only. `anonymous_export_view` is\nthe same as `export_view` format but only content viewable by an anonymous\nuser is included."
      title: ContentTemplateBody
    "ContentTemplateBodyCreate":
      type: "object"
      properties:
        "view": {"$ref": "#/components/schemas/ContentBodyCreate"}
        "export_view": {"$ref": "#/components/schemas/ContentBodyCreate"}
        "styled_view": {"$ref": "#/components/schemas/ContentBodyCreate"}
        "storage": {"$ref": "#/components/schemas/ContentBodyCreate"}
        "editor": {"$ref": "#/components/schemas/ContentBodyCreate"}
        "editor2": {"$ref": "#/components/schemas/ContentBodyCreate"}
        "wiki": {"$ref": "#/components/schemas/ContentBodyCreate"}
        "atlas_doc_format": {"$ref": "#/components/schemas/ContentBodyCreate"}
        "anonymous_export_view": {"$ref": "#/components/schemas/ContentBodyCreate"}
      description: "The body of the new content. Does not apply to attachments.\nOnly one body format should be specified as the property for\nthis object, e.g. `storage`.\n\nNote, `editor2` format is used by Atlassian only. `anonymous_export_view` is\nthe same as `export_view` format but only content viewable by an anonymous\nuser is included."
      title: ContentTemplateBodyCreate
    "ContentTemplateUpdate":
      type: "object"
      properties:
        "templateId":
          type: "string"
          description: "The ID of the template being updated."
        "name":
          type: "string"
          description: "The name of the template. Set to the current `name` if this field is\nnot being updated."
        "templateType":
          $ref: '#/components/schemas/TemplateTypeEnum'
        "body": {"$ref": "#/components/schemas/ContentTemplateBodyCreate"}
        "description":
          type: "string"
          maxLength: 100
          description: "A description of the template."
        "labels":
          type: "array"
          items: {"$ref": "#/components/schemas/Label"}
          description: "Labels for the template."
        "space":
          $ref: '#/components/schemas/Spaceb021ae'
      required:
        - "body"
        - "name"
        - "templateId"
        - "templateType"
      additionalProperties: true
      description: "This object is used to update content templates."
      title: ContentTemplateUpdate
    "ContentUpdate":
      type: "object"
      properties:
        "version":
          $ref: '#/components/schemas/Version5f500d'
        "title":
          type: "string"
          maxLength: 255
          description: "The updated title of the content. If you are updating a non-draft `page` or `blogpost`, title is required. If you are not changing the title, set this field to the the current title."
          nullable: true
        "type":
          type: "string"
          description: "The type of content. Set this to the current type of the content. For example, - page - blogpost - comment - attachment"
          nullable: true
        "status":
          $ref: '#/components/schemas/StatusEnum2ed78b'
        "ancestors":
          type: "array"
          items:
            $ref: '#/components/schemas/AncestorsItem97fa4e'
          description: "The new parent for the content. Only one parent content 'id' can be specified."
          nullable: true
        "body":
          $ref: '#/components/schemas/Body632549'
      required:
        - "type"
        - "version"
      additionalProperties: true
      title: ContentUpdate
    "ContentBodyConversionInput":
      type: "object"
      properties:
        "to":
          type: "string"
          description: "The name of the target format for the content body conversion."
        "allowCache":
          type: "boolean"
          description: "If `false`, the cache will erase its current value and begin a new conversion. If `true`, the cache will not erase its current value, and will set the status of the async conversion to “RERUNNING”. Once the data is updated, the status will change to “COMPLETED”. Large macros that take a long time to convert and that need not be immediately up to date (e.g. a macro in which the new conversion result is the same as a previous conversion result that was completed within the last 5 minutes) should set this field to `true`. Cache values are stored per user per content body and expansions."
          default: false
        "spaceKeyContext":
          type: "string"
          description: "The space key used for resolving embedded content (page includes, files, and links) in the content body. For example, if the source content contains the link `<ac:link><ri:page ri:content-title=\"Example page\" /><ac:link>` and the `spaceKeyContext=TEST` parameter is provided, then the link will be converted into a link to the \"Example page\" page in the \"TEST\" space."
        "contentIdContext":
          type: "string"
          description: "The content ID used to find the space for resolving embedded content (page includes, files, and links) in the content body. For example, if the source content contains the link `<ac:link><ri:page ri:content-title=\"Example page\" /><ac:link>` and the `contentIdContext=123` parameter is provided, then the link will be converted into a link to the \"Example page\" page in the same space that has the content with ID=123. Note that `spaceKeyContext` will be ignored if this parameter is provided."
        "embeddedContentRender":
          $ref: '#/components/schemas/EmbeddedContentRenderEnum'
        "expand":
          type: "array"
          items:
            type: "string"
          description: "A multi-value, comma-separated parameter indicating which properties of the content to expand and populate. Expands are dependent\non the `to` conversion format and may be irrelevant for certain conversions (e.g. `macroRenderedOutput` is redundant when\nconverting to `view` format). \n\nIf rendering to `view` format, and the body content being converted includes arbitrary nested content (such as macros); then it is \nnecessary to include webresource expands in the request. Webresources for content body are the batched JS and CSS dependencies for\nany nested dynamic content (i.e. macros).\n\n- `embeddedContent` returns metadata for nested content (e.g. page included using page include macro)\n- `mediaToken` returns JWT token for retrieving attachment data from Media API\n- `macroRenderedOutput` additionally converts body to view format\n- `webresource.superbatch.uris.js` returns all common JS dependencies as static URLs\n- `webresource.superbatch.uris.css` returns all common CSS dependencies as static URLs\n- `webresource.superbatch.uris.all` returns all common dependencies as static URLs\n- `webresource.superbatch.tags.all` returns all common JS dependencies as html `<script>` tags\n- `webresource.superbatch.tags.css` returns all common CSS dependencies as html `<style>` tags\n- `webresource.superbatch.tags.js` returns all common dependencies as html `<script>` and `<style>` tags\n- `webresource.uris.js` returns JS dependencies specific to conversion\n- `webresource.uris.css` returns CSS dependencies specific to conversion\n- `webresource.uris.all` returns all dependencies specific to conversion     \n- `webresource.tags.all` returns common JS dependencies as html `<script>` tags\n- `webresource.tags.css` returns common CSS dependencies as html `<style>` tags\n- `webresource.tags.js` returns common dependencies as html `<script>` and `<style>` tags"
        "body": {"$ref": "#/components/schemas/ContentBodyCreate"}
      required:
        - "to"
        - "body"
      title: ContentBodyConversionInput
    "ContentBodyConversionInputArray":
      type: "array"
      items: {"$ref": "#/components/schemas/ContentBodyConversionInput"}
      title: ContentBodyConversionInputArray
    "CopyPageHierarchyRequest":
      type: "object"
      properties:
        "copyAttachments":
          type: "boolean"
          description: "If set to `true`, attachments are copied to the destination page."
          default: false
        "copyPermissions":
          type: "boolean"
          description: "If set to `true`, page permissions are copied to the destination page."
          default: false
        "copyProperties":
          type: "boolean"
          description: "If set to `true`, content properties are copied to the destination page."
          default: false
        "copyLabels":
          type: "boolean"
          description: "If set to `true`, labels are copied to the destination page."
          default: false
        "copyCustomContents":
          type: "boolean"
          description: "If set to `true`, custom contents are copied to the destination page."
          default: false
        "copyDescendants":
          type: "boolean"
          description: "If set to `true`, descendants are copied to the destination page."
          default: true
        "destinationPageId": {"$ref": "#/components/schemas/ContentId"}
        "titleOptions": {"$ref": "#/components/schemas/CopyPageHierarchyTitleOptions"}
      required:
        - "destinationPageId"
      title: CopyPageHierarchyRequest
    "CopyPageHierarchyTitleOptions":
      type: "object"
      properties:
        "prefix":
          type: "string"
        "replace":
          type: "string"
        "search":
          type: "string"
      description: "Required for copying page in the same space."
      title: CopyPageHierarchyTitleOptions
    "CopyPageRequest":
      type: "object"
      properties:
        "copyAttachments":
          type: "boolean"
          description: "If set to `true`, attachments are copied to the destination page."
          default: false
        "copyPermissions":
          type: "boolean"
          description: "If set to `true`, page permissions are copied to the destination page."
          default: false
        "copyProperties":
          type: "boolean"
          description: "If set to `true`, content properties are copied to the destination page."
          default: false
        "copyLabels":
          type: "boolean"
          description: "If set to `true`, labels are copied to the destination page."
          default: false
        "copyCustomContents":
          type: "boolean"
          description: "If set to `true`, custom contents are copied to the destination page."
          default: false
        "destination": {"$ref": "#/components/schemas/CopyPageRequestDestination"}
        "pageTitle":
          type: "string"
          description: "If defined, this will replace the title of the destination page."
        "body":
          $ref: '#/components/schemas/Bodyded886'
      required:
        - "destination"
      title: CopyPageRequest
    "CopyPageRequestDestination":
      type: "object"
      properties:
        "type":
          $ref: '#/components/schemas/TypeEnumed0c22'
        "value":
          type: "string"
          description: "The space key for `space` type, and content id for `parent_page`, `parent_content`, and `existing_page`"
      required:
        - "type"
        - "value"
      description: "Defines where the page will be copied to, and can be one of the following types.\n\n  - `parent_page`: page will be copied as a child of the specified parent page\n  - `parent_content`: page will be copied as a child of the specified parent content\n  - `space`: page will be copied to the specified space as a root page on the space\n  - `existing_page`: page will be copied and replace the specified page"
      title: CopyPageRequestDestination
    "CQLPersonalDataConvertedQueries":
      type: "object"
      properties:
        "queryStrings":
          type: "array"
          items:
            type: "string"
          description: "The list of converted CQL query strings with account IDs in\nplace of user identifiers."
      required:
        - "queryStrings"
      description: "The converted CQL queries."
      title: CQLPersonalDataConvertedQueries
    "CQLPersonalDataMigrationRequest":
      type: "object"
      properties:
        "queryStrings":
          type: "array"
          items:
            type: "string"
          description: "A list of queries with user identifiers. Maximum of 100 queries."
          example: ["type = page and creator != admin and space = DEV"]
      required:
        - "queryStrings"
      description: "The CQL queries to be converted."
      title: CQLPersonalDataMigrationRequest
    "DynamicModulesErrorMessage":
      type: "object"
      properties:
        "message":
          type: "string"
          description: "The error message."
      required:
        - "message"
      example: {"message": "The request is not from a Connect app."}
      title: DynamicModulesErrorMessage
    "Embeddable":
      type: "object"
      additionalProperties: true
      title: Embeddable
    "EmbeddedContent":
      type: "object"
      properties:
        "entityId":
          type: "integer"
          format: "int64"
        "entityType":
          type: "string"
        "entity": {"$ref": "#/components/schemas/Embeddable"}
      additionalProperties: true
      title: EmbeddedContent
    "GenericAccountId":
      type: "string"
      description: "The account ID of the user, which uniquely identifies the user across all Atlassian products.\nFor example, `384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192`."
      nullable: true
      title: GenericAccountId
    "GenericLinks":
      type: "object"
      additionalProperties:
        oneOf:
          - type: "object"
            additionalProperties: true
          - type: "string"
      title: GenericLinks
    "GenericUserName":
      type: "string"
      description: "This property is no longer available and will be removed from the documentation soon.\nUse `accountId` instead.\nSee the [deprecation notice](/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/) for details."
      nullable: true
      title: GenericUserName
    "GenericUserKey":
      type: "string"
      description: "This property is no longer available and will be removed from the documentation soon.\nUse `accountId` instead.\nSee the [deprecation notice](/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/) for details."
      nullable: true
      title: GenericUserKey
    "GlobalSpaceIdentifier":
      type: "object"
      properties:
        "spaceIdentifier":
          type: "string"
      required:
        - "spaceIdentifier"
      nullable: true
      title: GlobalSpaceIdentifier
    "Group":
      type: "object"
      properties:
        "type":
          $ref: '#/components/schemas/TypeEnum675952'
        "name":
          type: "string"
        "id":
          type: "string"
        "_links": {"$ref": "#/components/schemas/GenericLinks"}
      required:
        - "name"
        - "type"
        - "id"
      title: Group
    "GroupCreate":
      type: "object"
      properties:
        "type":
          $ref: '#/components/schemas/TypeEnum675952'
        "id":
          type: "string"
      required:
        - "type"
      additionalProperties: true
      title: GroupCreate
    "GroupArray":
      type: "object"
      properties:
        "results":
          type: "array"
          items: {"$ref": "#/components/schemas/Group"}
        "start":
          type: "integer"
          format: "int32"
        "limit":
          type: "integer"
          format: "int32"
        "size":
          type: "integer"
          format: "int32"
      required:
        - "limit"
        - "results"
        - "size"
        - "start"
      title: GroupArray
    "GroupArrayWithLinks":
      type: "object"
      properties:
        "results":
          type: "array"
          items: {"$ref": "#/components/schemas/Group"}
        "start":
          type: "integer"
          format: "int32"
        "limit":
          type: "integer"
          format: "int32"
        "size":
          type: "integer"
          format: "int32"
        "totalSize":
          type: "integer"
          format: "int64"
          description: "This property will return total count of the objects before pagination is applied.\nThis value is returned if `shouldReturnTotalSize` is set to `true`."
          default: 0
        "_links": {"$ref": "#/components/schemas/GenericLinks"}
      required:
        - "limit"
        - "results"
        - "size"
        - "start"
        - "_links"
      description: "Same as GroupArray but with `_links` property."
      title: GroupArrayWithLinks
    "GroupName":
      type: "object"
      properties:
        "name":
          type: "string"
      required:
        - "name"
      title: GroupName
    "HeaderLookAndFeel":
      type: "object"
      properties:
        "backgroundColor":
          type: "string"
        "button": {"$ref": "#/components/schemas/ButtonLookAndFeel"}
        "primaryNavigation": {"$ref": "#/components/schemas/NavigationLookAndFeel"}
        "secondaryNavigation": {"$ref": "#/components/schemas/NavigationLookAndFeel"}
        "search": {"$ref": "#/components/schemas/SearchFieldLookAndFeel"}
      required:
        - "backgroundColor"
        - "button"
        - "primaryNavigation"
        - "search"
        - "secondaryNavigation"
      title: HeaderLookAndFeel
    "HorizontalHeaderLookAndFeel":
      type: "object"
      properties:
        "backgroundColor":
          type: "string"
        "button": {"$ref": "#/components/schemas/ButtonLookAndFeel"}
        "primaryNavigation": {"$ref": "#/components/schemas/TopNavigationLookAndFeel"}
        "secondaryNavigation": {"$ref": "#/components/schemas/NavigationLookAndFeel"}
        "search": {"$ref": "#/components/schemas/SearchFieldLookAndFeel"}
      required:
        - "backgroundColor"
        - "primaryNavigation"
      title: HorizontalHeaderLookAndFeel
    "Icon":
      type: "object"
      properties:
        "path":
          type: "string"
        "width":
          type: "integer"
          format: "int32"
        "height":
          type: "integer"
          format: "int32"
        "isDefault":
          type: "boolean"
      required:
        - "height"
        - "isDefault"
        - "path"
        - "width"
      description: "This object represents an icon. If used as a profilePicture, this may be returned as null, depending on the user's privacy setting."
      nullable: true
      title: Icon
    "Label":
      type: "object"
      properties:
        "prefix":
          type: "string"
        "name":
          type: "string"
        "id":
          type: "string"
        "label":
          type: "string"
      required:
        - "id"
        - "label"
        - "name"
        - "prefix"
      title: Label
    "LabelArray":
      type: "object"
      properties:
        "results":
          type: "array"
          items: {"$ref": "#/components/schemas/Label"}
        "start":
          type: "integer"
          format: "int32"
        "limit":
          type: "integer"
          format: "int32"
        "size":
          type: "integer"
          format: "int32"
        "_links": {"$ref": "#/components/schemas/GenericLinks"}
      required:
        - "results"
        - "size"
      title: LabelArray
    "LabeledContent":
      type: "object"
      properties:
        "contentType": {"$ref": "#/components/schemas/LabeledContentType"}
        "contentId":
          type: "integer"
          format: "int64"
        "title":
          type: "string"
          description: "Title of the content."
      required:
        - "contentId"
        - "contentType"
        - "title"
      title: LabeledContent
    "LabeledContentType":
      type: "string"
      enum:
        - "page"
        - "blogpost"
        - "attachment"
        - "page_template"
      title: LabeledContentType
    "LabeledContentPageResponse":
      type: "object"
      properties:
        "results":
          type: "array"
          items: {"$ref": "#/components/schemas/LabeledContent"}
        "start":
          type: "integer"
          format: "int32"
        "limit":
          type: "integer"
          format: "int32"
        "size":
          type: "integer"
          format: "int32"
      required:
        - "results"
        - "size"
      title: LabeledContentPageResponse
    "LabelDetails":
      type: "object"
      properties:
        "label": {"$ref": "#/components/schemas/Label"}
        "associatedContents": {"$ref": "#/components/schemas/LabeledContentPageResponse"}
      required:
        - "label"
      title: LabelDetails
    "LabelCreate":
      type: "object"
      properties:
        "prefix":
          type: "string"
          description: "The prefix for the label. `global`, `my` `team`, etc."
        "name":
          type: "string"
          description: "The name of the label, which will be shown in the UI."
      required:
        - "name"
        - "prefix"
      additionalProperties: true
      title: LabelCreate
    "LabelCreateArray":
      type: "array"
      items: {"$ref": "#/components/schemas/LabelCreate"}
      title: LabelCreateArray
    "LongTask":
      type: "object"
      properties:
        "ari":
          type: "string"
          description: "the ARI for the long task, based on its ID"
        "id":
          type: "string"
          description: "a unique identifier for the long task"
        "links":
          $ref: '#/components/schemas/Links'
      required:
        - "id"
        - "links"
      title: LongTask
    "LookAndFeel":
      type: "object"
      properties:
        "headings":
          $ref: '#/components/schemas/Headings'
        "links":
          $ref: '#/components/schemas/Links9496b4'
        "menus": {"$ref": "#/components/schemas/MenusLookAndFeel"}
        "header": {"$ref": "#/components/schemas/HeaderLookAndFeel"}
        "horizontalHeader": {"$ref": "#/components/schemas/HorizontalHeaderLookAndFeel"}
        "content": {"$ref": "#/components/schemas/ContentLookAndFeel"}
        "bordersAndDividers":
          $ref: '#/components/schemas/BordersAndDivIDErs'
        "spaceReference":
          $ref: '#/components/schemas/SpaceReference'
        _links: {"$ref": "#/components/schemas/GenericLinks"}
      required:
        - "bordersAndDividers"
        - "content"
        - "header"
        - "headings"
        - "links"
        - "menus"
      description: Look and feel settings returned after an update.
      title: LookAndFeel
    "LookAndFeelWithLinks":
      description: "Look and feel settings returned after an update."
      title: LookAndFeelWithLinks
    "LookAndFeelSelection":
      type: "object"
      properties:
        "spaceKey":
          type: "string"
          description: "The key of the space for which the look and feel settings will be\nset."
        "lookAndFeelType":
          $ref: '#/components/schemas/LookAndFeelTypeEnum'
      required:
        - "lookAndFeelType"
        - "spaceKey"
      description: "Look and feel selection"
      title: LookAndFeelSelection
    "LookAndFeelSettings":
      type: "object"
      properties:
        "selected":
          $ref: '#/components/schemas/SelectedEnum'
        "global": {"$ref": "#/components/schemas/LookAndFeel"}
        "theme": {"$ref": "#/components/schemas/LookAndFeel"}
        "custom": {"$ref": "#/components/schemas/LookAndFeel"}
      required:
        - "custom"
        - "global"
        - "selected"
      title: LookAndFeelSettings
    "LongTaskStatus":
      type: "object"
      properties:
        "ari":
          type: "string"
          description: "the ARI for the long task, based on its ID"
        "id":
          type: "string"
        "name":
          $ref: '#/components/schemas/Name'
        "elapsedTime":
          type: "integer"
          format: "int64"
        "percentageComplete":
          type: "integer"
          format: "int32"
        "successful":
          type: "boolean"
        "finished":
          type: "boolean"
        "messages":
          type: "array"
          items: {"$ref": "#/components/schemas/Message"}
        "status":
          type: "string"
        "errors":
          type: "array"
          items: {"$ref": "#/components/schemas/Message"}
        "additionalDetails":
          $ref: '#/components/schemas/AdditionalDetails'
      required:
        - "elapsedTime"
        - "finished"
        - "id"
        - "messages"
        - "name"
        - "percentageComplete"
        - "successful"
      description: "Current status of a long running task\n\nStatus keys:\n\n- `ERROR_UNKNOWN` - Generic error\n- `ERROR_LOCK_FAILED` - Could not get the lock on destination space\n- `ERROR_RELINK` - Error when relink pages/attachments\n- `ERROR_COPY_PAGE` - Error while copying 1 page\n- `WARN_RENAME_PAGE` - Warning page is rename during copy\n- `WARN_IGNORE_COPY_PERMISSION` - Warning could not copy permission\n- `WARN_IGNORE_COPY_ATTACHMENT` - Warning could not copy attachment\n- `WARN_IGNORE_DELETE_PAGE` - Warning ignoring delete of a non agreed on page\n- `STATUS_COPIED_PAGES` - Message total pages are copied\n- `STATUS_COPYING_PAGES` - Message copy pages\n- `STATUS_RELINK_PAGES` - Message relink pages/attachments\n- `STATUS_DELETING_PAGES` - Message delete pages\n- `STATUS_DELETED_PAGES` - Message total pages are deleted\n- `STATUS_MOVING_PAGES` - Message move pages\n- `WARN_IGNORE_VIEW_RESTRICTED` - Permission changed - view restricted\n- `WARN_IGNORE_EDIT_RESTRICTED` - Permission changed - edit restricted\n- `INITIALIZING_TASK` - Message when initializing task\n- `UNKNOWN_STATUS` - Message when status is unknown"
      title: LongTaskStatus
    "LongTaskStatusArray":
      type: "object"
      properties:
        "results":
          type: "array"
          items: {"$ref": "#/components/schemas/LongTaskStatus"}
        "start":
          type: "integer"
          format: "int32"
        "limit":
          type: "integer"
          format: "int32"
        "size":
          type: "integer"
          format: "int32"
        "_links": {"$ref": "#/components/schemas/GenericLinks"}
      required:
        - "_links"
        - "limit"
        - "results"
        - "size"
        - "start"
      title: LongTaskStatusArray
    "LongTaskStatusWithLinks":
      type: "object"
      properties:
        "ari":
          type: "string"
          description: "the ARI for the long task, based on its ID"
        "id":
          type: "string"
        "name":
          $ref: '#/components/schemas/Name'
        "elapsedTime":
          type: "integer"
          format: "int64"
        "percentageComplete":
          type: "integer"
          format: "int32"
        "successful":
          type: "boolean"
        "finished":
          type: "boolean"
        "messages":
          type: "array"
          items: {"$ref": "#/components/schemas/Message"}
        "_links": {"$ref": "#/components/schemas/GenericLinks"}
        "status":
          type: "string"
        "errors":
          type: "array"
          items: {"$ref": "#/components/schemas/Message"}
        "additionalDetails":
          $ref: '#/components/schemas/AdditionalDetails7a6f26'
      required:
        - "_links"
        - "elapsedTime"
        - "finished"
        - "id"
        - "messages"
        - "name"
        - "percentageComplete"
        - "successful"
      description: "Same as LongTaskStatus but with `_links` property.\n\nStatus keys:\n\n- `ERROR_UNKNOWN` - Generic error\n- `ERROR_LOCK_FAILED` - Could not get the lock on destination space\n- `ERROR_RELINK` - Error when relink pages/attachments\n- `ERROR_COPY_PAGE` - Error while copying 1 page\n- `WARN_RENAME_PAGE` - Warning page is rename during copy\n- `WARN_IGNORE_COPY_PERMISSION` - Warning could not copy permission\n- `WARN_IGNORE_COPY_ATTACHMENT` - Warning could not copy attachment\n- `WARN_IGNORE_DELETE_PAGE` - Warning ignoring delete of a non agreed on page\n- `STATUS_COPIED_PAGES` - Message total pages are copied\n- `STATUS_COPYING_PAGES` - Message copy pages\n- `STATUS_RELINK_PAGES` - Message relink pages/attachments\n- `STATUS_DELETING_PAGES` - Message delete pages\n- `STATUS_DELETED_PAGES` - Message total pages are deleted\n- `STATUS_MOVING_PAGES` - Message move pages\n- `WARN_IGNORE_VIEW_RESTRICTED` - Permission changed - view restricted\n- `WARN_IGNORE_EDIT_RESTRICTED` - Permission changed - edit restricted\n- `INITIALIZING_TASK` - Message when initializing task\n- `UNKNOWN_STATUS` - Message when status is unknown"
      title: LongTaskStatusWithLinks
    "MacroInstance":
      type: "object"
      properties:
        "name":
          type: "string"
        "body":
          type: "string"
        "parameters":
          $ref: '#/components/schemas/Parameters'
        "_links": {"$ref": "#/components/schemas/GenericLinks"}
      title: MacroInstance
    "MenusLookAndFeel":
      type: "object"
      properties:
        "hoverOrFocus":
          $ref: '#/components/schemas/HoverOrFocus'
        "color":
          type: "string"
      required:
        - "color"
        - "hoverOrFocus"
      title: MenusLookAndFeel
    "Message":
      type: "object"
      properties:
        "translation":
          type: "string"
        "args":
          type: "array"
          items:
            oneOf:
              - type: "string"
              - type: "object"
                additionalProperties: true
      required:
        - "args"
      additionalProperties: true
      title: Message
    "BulkUserLookup":
      type: "object"
      properties:
        "type":
          $ref: '#/components/schemas/TypeEnumdd7d20'
        "username": {"$ref": "#/components/schemas/GenericUserName"}
        "userKey": {"$ref": "#/components/schemas/GenericUserKey"}
        "accountId": {"$ref": "#/components/schemas/GenericAccountId"}
        "accountType":
          type: "string"
          description: "The account type of the user, may return empty string if unavailable."
        "email":
          type: "string"
          description: "The email address of the user. Depending on the user's privacy setting, this may return an empty string."
        "publicName":
          type: "string"
          description: "The public name or nickname of the user. Will always contain a value."
        "profilePicture": {"$ref": "#/components/schemas/Icon"}
        "displayName":
          type: "string"
          description: "The displays name of the user. Depending on the user's privacy setting, this may be the same as publicName."
        "timeZone":
          type: "string"
          description: "This displays user time zone. Depending on the user's privacy setting, this may return null."
          nullable: true
        "isExternalCollaborator":
          type: "boolean"
          description: "This is deprecated. Use `isGuest` instead to find out whether the user is a guest user."
        "isGuest":
          type: "boolean"
          description: "Whether the user is a guest user"
        "operations":
          type: "array"
          items: {"$ref": "#/components/schemas/OperationCheckResult"}
        "details": {"$ref": "#/components/schemas/UserDetails"}
        "personalSpace": {"$ref": "#/components/schemas/Space"}
        "_expandable":
          $ref: '#/components/schemas/Expandable5c5d70'
        "_links": {"$ref": "#/components/schemas/GenericLinks"}
      required:
        - "_expandable"
        - "_links"
        - "accountId"
        - "accountType"
        - "displayName"
        - "email"
        - "profilePicture"
        - "publicName"
        - "type"
      title: BulkUserLookup
    "BulkUserLookupArray":
      type: "object"
      properties:
        "results":
          type: "array"
          items: {"$ref": "#/components/schemas/BulkUserLookup"}
        "start":
          type: "integer"
          format: "int32"
        "limit":
          type: "integer"
          format: "int32"
        "size":
          type: "integer"
          format: "int32"
        "_links": {"$ref": "#/components/schemas/GenericLinks"}
      required:
        - "_links"
        - "limit"
        - "results"
        - "size"
        - "start"
      title: BulkUserLookupArray
    "NavigationLookAndFeel":
      type: "object"
      properties:
        "color":
          type: "string"
        "highlightColor":
          type: "string"
          nullable: true
        "hoverOrFocus":
          $ref: '#/components/schemas/HoverOrFocus53690d'
      required:
        - "color"
        - "hoverOrFocus"
      nullable: true
      title: NavigationLookAndFeel
    "TopNavigationLookAndFeel":
      type: "object"
      properties:
        "color":
          type: "string"
          nullable: true
        "highlightColor":
          type: "string"
        "hoverOrFocus":
          $ref: '#/components/schemas/HoverOrFocusf1c7a6'
      required:
        - "highlightColor"
      title: TopNavigationLookAndFeel
    "OperationCheckResult":
      type: "object"
      properties:
        "operation":
          $ref: '#/components/schemas/OperationEnum749875'
        "targetType":
          type: "string"
          description: "The space or content type that the operation applies to. Could be one of- - application - page - blogpost - comment - attachment - space"
      required:
        - "operation"
        - "targetType"
      description: "An operation and the target entity that it applies to, e.g. create page."
      title: OperationCheckResult
    "PropertyValue":
      description: "The value of the property. This can be empty or a complex object. 64KB Size Limit\nFor example,\n```\n\"value\": {\n  \"example1\": \"value\",\n  \"example2\": true,\n  \"example3\": 123,\n  \"example4\": [\"value1\", \"value2\"],\n}\n```"
      title: PropertyValue
    "Relation":
      type: "object"
      properties:
        "name":
          type: "string"
        "relationData": {"$ref": "#/components/schemas/RelationData"}
        "source":
          $ref: '#/components/schemas/Source'
        "target":
          $ref: '#/components/schemas/Target'
        "_expandable":
          $ref: '#/components/schemas/Expandableb48ed1'
        "_links": {"$ref": "#/components/schemas/GenericLinks"}
      required:
        - "_links"
        - "name"
      title: Relation
    "RelationArray":
      type: "object"
      properties:
        "results":
          type: "array"
          items: {"$ref": "#/components/schemas/Relation"}
        "start":
          type: "integer"
          format: "int32"
        "limit":
          type: "integer"
          format: "int32"
        "size":
          type: "integer"
          format: "int32"
        "_links": {"$ref": "#/components/schemas/GenericLinks"}
      required:
        - "_links"
        - "limit"
        - "results"
        - "size"
        - "start"
      title: RelationArray
    "RelationData":
      type: "object"
      properties:
        "createdBy": {"$ref": "#/components/schemas/User"}
        "createdDate":
          type: "string"
          format: "date-time"
        "friendlyCreatedDate":
          type: "string"
      title: RelationData
    "RetentionPeriod":
      type: "object"
      properties:
        "number":
          type: "integer"
          format: "int32"
          description: "The number of units for the retention period."
        "units":
          $ref: '#/components/schemas/UnitsEnum'
      required:
        - "number"
        - "units"
      title: RetentionPeriod
    "ScreenLookAndFeel":
      type: "object"
      properties:
        "background":
          type: "string"
        "backgroundAttachment":
          type: "string"
          nullable: true
        "backgroundBlendMode":
          type: "string"
          nullable: true
        "backgroundClip":
          type: "string"
          nullable: true
        "backgroundColor":
          type: "string"
          nullable: true
        "backgroundImage":
          type: "string"
          nullable: true
        "backgroundOrigin":
          type: "string"
          nullable: true
        "backgroundPosition":
          type: "string"
          nullable: true
        "backgroundRepeat":
          type: "string"
          nullable: true
        "backgroundSize":
          type: "string"
          nullable: true
        "layer":
          $ref: '#/components/schemas/Layer'
        "gutterTop":
          type: "string"
          nullable: true
        "gutterRight":
          type: "string"
          nullable: true
        "gutterBottom":
          type: "string"
          nullable: true
        "gutterLeft":
          type: "string"
          nullable: true
      required:
        - "background"
      title: ScreenLookAndFeel
    "SearchFieldLookAndFeel":
      type: "object"
      properties:
        "backgroundColor":
          type: "string"
        "color":
          type: "string"
      required:
        - "backgroundColor"
        - "color"
      nullable: true
      title: SearchFieldLookAndFeel
    "SearchPageResponseSearchResult":
      type: "object"
      properties:
        "results":
          type: "array"
          items: {"$ref": "#/components/schemas/SearchResult"}
        "start":
          type: "integer"
          format: "int32"
        "limit":
          type: "integer"
          format: "int32"
        "size":
          type: "integer"
          format: "int32"
        "totalSize":
          type: "integer"
          format: "int32"
        "cqlQuery":
          type: "string"
        "searchDuration":
          type: "integer"
          format: "int32"
        "archivedResultCount":
          type: "integer"
          format: "int32"
        "_links": {"$ref": "#/components/schemas/GenericLinks"}
      required:
        - "_links"
        - "cqlQuery"
        - "limit"
        - "results"
        - "searchDuration"
        - "size"
        - "start"
        - "totalSize"
      title: SearchPageResponseSearchResult
    "SearchResult":
      type: "object"
      properties:
        "content": {"$ref": "#/components/schemas/Content"}
        "user": {"$ref": "#/components/schemas/User"}
        "space": {"$ref": "#/components/schemas/Space"}
        "title":
          type: "string"
        "excerpt":
          type: "string"
        "url":
          type: "string"
        "resultParentContainer": {"$ref": "#/components/schemas/ContainerSummary"}
        "resultGlobalContainer": {"$ref": "#/components/schemas/ContainerSummary"}
        "breadcrumbs":
          type: "array"
          items: {"$ref": "#/components/schemas/Breadcrumb"}
        "entityType":
          type: "string"
        "iconCssClass":
          type: "string"
        "lastModified":
          type: "string"
          format: "date-time"
        "friendlyLastModified":
          type: "string"
        "score":
          type: "number"
      required:
        - "breadcrumbs"
        - "entityType"
        - "excerpt"
        - "iconCssClass"
        - "lastModified"
        - "title"
        - "url"
      title: SearchResult
    "Space":
      type: "object"
      properties:
        "id":
          type: "integer"
          format: "int64"
        "key":
          type: "string"
        "alias":
          type: "string"
        "name":
          type: "string"
        "icon": {"$ref": "#/components/schemas/Icon"}
        "description":
          $ref: '#/components/schemas/Description'
        "homepage": {"$ref": "#/components/schemas/Content"}
        "type":
          type: "string"
        "metadata":
          $ref: '#/components/schemas/Metadata5bfc61'
        "operations":
          type: "array"
          items: {"$ref": "#/components/schemas/OperationCheckResult"}
        "permissions":
          type: "array"
          items: {"$ref": "#/components/schemas/SpacePermission"}
        "status":
          type: "string"
        "settings": {"$ref": "#/components/schemas/SpaceSettings"}
        "theme": {"$ref": "#/components/schemas/Theme"}
        "lookAndFeel": {"$ref": "#/components/schemas/LookAndFeel"}
        "history":
          $ref: '#/components/schemas/History'
        "_expandable":
          $ref: '#/components/schemas/Expandable52d461'
        "_links": {"$ref": "#/components/schemas/GenericLinks"}
      required:
        - "_expandable"
        - "_links"
        - "key"
        - "name"
        - "status"
        - "type"
      nullable: true
      title: Space
    "SpaceArray":
      type: "object"
      properties:
        "results":
          type: "array"
          items: {"$ref": "#/components/schemas/Space"}
        "start":
          type: "integer"
          format: "int32"
        "limit":
          type: "integer"
          format: "int32"
        "size":
          type: "integer"
          format: "int32"
        "_links": {"$ref": "#/components/schemas/GenericLinks"}
      required:
        - "_links"
        - "limit"
        - "results"
        - "size"
        - "start"
      title: SpaceArray
    "SpaceCreate":
      type: "object"
      properties:
        "name":
          type: "string"
          maxLength: 200
          description: "The name of the new space."
        "key":
          type: "string"
          description: "The key for the new space. Format: See [Space\nkeys](https://confluence.atlassian.com/x/lqNMMQ). If `alias` is not provided, this is required."
        "alias":
          type: "string"
          description: "This field will be used as the new identifier for the space in confluence page URLs.\nIf the property is not provided the alias will be the provided key.\nThis property is experimental and may be changed or removed in the future."
        "description": {"$ref": "#/components/schemas/SpaceDescriptionCreate"}
        "permissions":
          type: "array"
          items: {"$ref": "#/components/schemas/SpacePermissionCreate"}
          description: "The permissions for the new space. If no permissions are provided, the\n[Confluence default space permissions](https://confluence.atlassian.com/x/UAgzKw#CreateaSpace-Spacepermissions)\nare applied. Note that if permissions are provided, the space is\ncreated with only the provided set of permissions, not\nincluding the default space permissions. Space permissions\ncan be modified after creation using the space permissions\nendpoints, and a private space can be created using the\ncreate private space endpoint."
          nullable: true
      required:
        - "name"
      additionalProperties: true
      description: "This is the request object used when creating a new space."
      title: SpaceCreate
    "SpaceUpdate":
      type: "object"
      properties:
        "name":
          type: "string"
          maxLength: 200
          description: "The updated name of the space."
          nullable: true
        "description": {"$ref": "#/components/schemas/SpaceDescriptionCreate"}
        "homepage":
          $ref: '#/components/schemas/Homepage'
        "type":
          type: "string"
          description: "The updated type for this space."
        "status":
          type: "string"
          description: "The updated status for this space."
          nullable: true
      additionalProperties: true
      description: "The properties of a space that can be updated."
      title: SpaceUpdate
    "SpaceDescription":
      type: "object"
      properties:
        "value":
          type: "string"
        "representation":
          $ref: '#/components/schemas/RepresentationEnum'
        "embeddedContent":
          type: "array"
          items:
            $ref: '#/components/schemas/EmbeddedContentItem'
      required:
        - "embeddedContent"
        - "representation"
        - "value"
      additionalProperties: true
      title: SpaceDescription
    "SpaceDescriptionCreate":
      type: "object"
      properties:
        "plain":
          $ref: '#/components/schemas/Plain'
      required:
        - "plain"
      description: "The description of the new/updated space. Note, only the 'plain' representation\ncan be used for the description when creating or updating a space."
      nullable: true
      title: SpaceDescriptionCreate
    "SpacePermission":
      type: "object"
      properties:
        "id":
          type: "integer"
          format: "int64"
        "subjects":
          $ref: '#/components/schemas/Subjects'
        "operation": {"$ref": "#/components/schemas/OperationCheckResult"}
        "anonymousAccess":
          type: "boolean"
          description: "Grant anonymous users permission to use the operation."
          default: false
        "unlicensedAccess":
          type: "boolean"
          description: "Grants access to unlicensed users from JIRA Service Desk when used\nwith the 'read space' operation."
          default: false
      required:
        - "anonymousAccess"
        - "operation"
        - "unlicensedAccess"
      description: "This object represents a permission for given space. Permissions consist of\nat least one operation object with an accompanying subjects object.\n\nThe following combinations of `operation` and `targetType` values are\nvalid for the `operation` object:\n\n  - 'create': 'page', 'blogpost', 'comment', 'attachment'\n  - 'read': 'space'\n  - 'delete': 'page', 'blogpost', 'comment', 'attachment'\n  - 'export': 'space'\n  - 'administer': 'space'"
      title: SpacePermission
    "SpacePermissionCreate":
      type: "object"
      properties:
        "subjects":
          $ref: '#/components/schemas/Subjects96eb79'
        "operation": {"$ref": "#/components/schemas/OperationCheckResult"}
        "anonymousAccess":
          type: "boolean"
          description: "Grant anonymous users permission to use the operation."
          default: false
        "unlicensedAccess":
          type: "boolean"
          description: "Grants access to unlicensed users from JIRA Service Desk when used\nwith the 'read space' operation."
          default: false
      required:
        - "anonymousAccess"
        - "operation"
        - "unlicensedAccess"
      additionalProperties: true
      description: "This object represents a permission for given space. Permissions consist of\nat least one operation object with an accompanying subjects object.\n\nThe following combinations of `operation` and `targetType` values are\nvalid for the `operation` object:\n\n  - 'create': 'page', 'blogpost', 'comment', 'attachment'\n  - 'read': 'space'\n  - 'delete': 'page', 'blogpost', 'comment', 'attachment'\n  - 'export': 'space'\n  - 'administer': 'space'"
      title: SpacePermissionCreate
    "SpaceProperty":
      type: "object"
      properties:
        "id":
          type: "string"
        "key":
          type: "string"
        "value": {}
        "version": {"$ref": "#/components/schemas/Version"}
        "space": {"$ref": "#/components/schemas/Space"}
        "_links": {"$ref": "#/components/schemas/GenericLinks"}
        "_expandable":
          $ref: '#/components/schemas/Expandable3adce7'
      required:
        - "_expandable"
        - "id"
        - "key"
        - "value"
      title: SpaceProperty
    "SpacePropertyArray":
      type: "object"
      properties:
        "results":
          type: "array"
          items: {"$ref": "#/components/schemas/SpaceProperty"}
        "start":
          type: "integer"
          format: "int32"
        "limit":
          type: "integer"
          format: "int32"
        "size":
          type: "integer"
          format: "int32"
        "_links": {"$ref": "#/components/schemas/GenericLinks"}
      required:
        - "_links"
        - "limit"
        - "results"
        - "size"
        - "start"
      title: SpacePropertyArray
    "SpacePropertyCreate":
      type: "object"
      properties:
        "key":
          type: "string"
          description: "The key of the new property."
        "value": {"$ref": "#/components/schemas/PropertyValue"}
        "space":
          $ref: '#/components/schemas/Space505a67'
      required:
        - "key"
        - "value"
      title: SpacePropertyCreate
    "SpacePropertyCreateNoKey":
      type: "object"
      properties:
        "value": {"$ref": "#/components/schemas/PropertyValue"}
      required:
        - "value"
      title: SpacePropertyCreateNoKey
    "SpacePropertyUpdate":
      type: "object"
      properties:
        "key":
          type: "string"
        "value": {}
        "version": {"$ref": "#/components/schemas/Version"}
        "space":
          $ref: '#/components/schemas/Space505a67'
      required:
        - "value"
        - "version"
      title: SpacePropertyUpdate
    "SpaceSettings":
      type: "object"
      properties:
        "routeOverrideEnabled":
          type: "boolean"
          description: "Defines whether an override for the space home should be used. This is\nused in conjunction with a space theme provided by an app. For\nexample, if this property is set to true, a theme can display a page\nother than the space homepage when users visit the root URL for a\nspace. This property allows apps to provide content-only theming\nwithout overriding the space home."
        "editor":
          $ref: '#/components/schemas/Editor'
        "spaceKey":
          type: "string"
        "_links": {"$ref": "#/components/schemas/GenericLinks"}
      required:
        - "_links"
        - "routeOverrideEnabled"
      nullable: true
      title: SpaceSettings
    "SpaceSettingsUpdate":
      type: "object"
      properties:
        "routeOverrideEnabled":
          type: "boolean"
          description: "Defines whether an override for the space home should be used. This is\nused in conjunction with a space theme provided by an app. For\nexample, if this property is set to true, a theme can display a page\nother than the space homepage when users visit the root URL for a\nspace. This property allows apps to provide content-only theming\nwithout overriding the space home."
      title: SpaceSettingsUpdate
    "SpaceWatch":
      type: "object"
      properties:
        "type":
          type: "string"
        "watcher": {"$ref": "#/components/schemas/WatchUser"}
        "spaceKey":
          type: "string"
        "labelName":
          type: "string"
        "prefix":
          type: "string"
      required:
        - "type"
        - "watcher"
      title: SpaceWatch
    "SpaceWatchArray":
      type: "object"
      properties:
        "results":
          type: "array"
          items: {"$ref": "#/components/schemas/SpaceWatch"}
        "start":
          type: "integer"
          format: "int32"
        "limit":
          type: "integer"
          format: "int32"
        "size":
          type: "integer"
          format: "int32"
        "_links": {"$ref": "#/components/schemas/GenericLinks"}
      required:
        - "limit"
        - "results"
        - "size"
        - "start"
      title: SpaceWatchArray
    "SuperBatchWebResources":
      type: "object"
      properties:
        "uris":
          $ref: '#/components/schemas/Uris'
        "tags":
          $ref: '#/components/schemas/Tags'
        "metatags":
          type: "string"
        "_expandable":
          $ref: '#/components/schemas/Expandable82ef96'
      title: SuperBatchWebResources
    "SystemInfoEntity":
      type: "object"
      properties:
        "cloudId":
          type: "string"
        "commitHash":
          type: "string"
        "baseUrl":
          type: "string"
        "fallbackBaseUrl":
          type: "string"
        "edition":
          type: "string"
        "siteTitle":
          type: "string"
        "defaultLocale":
          type: "string"
        "defaultTimeZone":
          type: "string"
        "microsPerimeter":
          type: "string"
      required:
        - "cloudId"
        - "commitHash"
      nullable: true
      title: SystemInfoEntity
    "TaskStatusUpdate":
      type: "object"
      properties:
        "status":
          $ref: '#/components/schemas/StatusEnum4c7224'
      required:
        - "status"
      title: TaskStatusUpdate
    "Task":
      type: "object"
      properties:
        "globalId":
          type: "integer"
          format: "int64"
        "id":
          type: "integer"
          format: "int64"
        "contentId":
          type: "integer"
          format: "int64"
        "status":
          type: "string"
        "title":
          type: "string"
        "description":
          type: "string"
        "body":
          type: "string"
        "creator":
          type: "string"
        "assignee":
          type: "string"
        "completeUser":
          type: "string"
        "createDate":
          type: "integer"
          format: "int64"
        "dueDate":
          type: "integer"
          format: "int64"
        "updateDate":
          type: "integer"
          format: "int64"
        "completeDate":
          type: "integer"
          format: "int64"
        "_links": {"$ref": "#/components/schemas/GenericLinks"}
      required:
        - "contentId"
        - "createDate"
        - "creator"
        - "globalId"
        - "id"
        - "status"
      title: Task
    "TaskPageResponse":
      type: "object"
      properties:
        "results":
          type: "array"
          items: {"$ref": "#/components/schemas/Task"}
        "start":
          type: "integer"
          format: "int32"
        "limit":
          type: "integer"
          format: "int32"
        "size":
          type: "integer"
          format: "int32"
      required:
        - "limit"
        - "results"
        - "size"
        - "start"
      title: TaskPageResponse
    "Theme":
      type: "object"
      properties:
        "themeKey":
          type: "string"
        "name":
          type: "string"
        "description":
          type: "string"
        "icon": {"$ref": "#/components/schemas/Icon"}
        "_links": {"$ref": "#/components/schemas/GenericLinks"}
      required:
        - "themeKey"
      title: Theme
    "ThemeNoLinks":
      type: "object"
      properties:
        "themeKey":
          type: "string"
        "name":
          type: "string"
        "description":
          type: "string"
        "icon": {"$ref": "#/components/schemas/Icon"}
      required:
        - "themeKey"
      description: "Theme object without links. Used in ThemeArray."
      title: ThemeNoLinks
    "ThemeArray":
      type: "object"
      properties:
        "results":
          type: "array"
          items: {"$ref": "#/components/schemas/ThemeNoLinks"}
        "start":
          type: "integer"
          format: "int32"
        "limit":
          type: "integer"
          format: "int32"
        "size":
          type: "integer"
          format: "int32"
        "_links": {"$ref": "#/components/schemas/GenericLinks"}
      required:
        - "_links"
        - "limit"
        - "results"
        - "size"
        - "start"
      title: ThemeArray
    "ThemeUpdate":
      type: "object"
      properties:
        "themeKey":
          type: "string"
          description: "The key of the theme to be set as the space theme."
      required:
        - "themeKey"
      title: ThemeUpdate
    "User":
      type: "object"
      properties:
        "type":
          $ref: '#/components/schemas/TypeEnumdd7d20'
        "username": {"$ref": "#/components/schemas/GenericUserName"}
        "userKey": {"$ref": "#/components/schemas/GenericUserKey"}
        "accountId": {"$ref": "#/components/schemas/GenericAccountId"}
        "accountType":
          $ref: '#/components/schemas/AccountTypeEnum'
        "email":
          type: "string"
          description: "The email address of the user. Depending on the user's privacy setting, this may return an empty string."
          nullable: true
        "publicName":
          type: "string"
          description: "The public name or nickname of the user. Will always contain a value."
        "profilePicture": {"$ref": "#/components/schemas/Icon"}
        "displayName":
          type: "string"
          description: "The displays name of the user. Depending on the user's privacy setting, this may be the same as publicName."
          nullable: true
        "timeZone":
          type: "string"
          description: "This displays user time zone. Depending on the user's privacy setting, this may return null."
          nullable: true
        "externalCollaborator":
          type: "boolean"
          description: "This is deprecated. Use `isGuest` instead to find out whether the user is a guest user."
        "isExternalCollaborator":
          type: "boolean"
          description: "This is deprecated. Use `isGuest` instead to find out whether the user is a guest user."
        "isGuest":
          type: "boolean"
          description: "Whether the user is a guest user"
        "operations":
          type: "array"
          items: {"$ref": "#/components/schemas/OperationCheckResult"}
          nullable: true
        "details": {"$ref": "#/components/schemas/UserDetails"}
        "personalSpace": {"$ref": "#/components/schemas/Space"}
        "_expandable":
          $ref: '#/components/schemas/Expandable5c5d70'
        "_links": {"$ref": "#/components/schemas/GenericLinks"}
      required:
        - "type"
      additionalProperties: true
      nullable: true
      title: User
    "UserAnonymous":
      type: "object"
      properties:
        "type":
          type: "string"
        "profilePicture": {"$ref": "#/components/schemas/Icon"}
        "displayName":
          type: "string"
        "operations":
          type: "array"
          items: {"$ref": "#/components/schemas/OperationCheckResult"}
        "_expandable":
          $ref: '#/components/schemas/Expandabled0ed16'
        "_links": {"$ref": "#/components/schemas/GenericLinks"}
      required:
        - "_links"
        - "displayName"
        - "profilePicture"
        - "type"
      title: UserAnonymous
    "UserArray":
      type: "object"
      properties:
        "results":
          type: "array"
          items: {"$ref": "#/components/schemas/User"}
        "start":
          type: "integer"
          format: "int32"
        "limit":
          type: "integer"
          format: "int32"
        "size":
          type: "integer"
          format: "int32"
        "totalSize":
          type: "integer"
          format: "int64"
          description: "This property will return total count of the objects before pagination is applied.\nThis value is returned if `shouldReturnTotalSize` is set to `true`."
          default: 0
        "_links": {"$ref": "#/components/schemas/GenericLinks"}
      required:
        - "results"
      title: UserArray
    "UserDetails":
      type: "object"
      properties:
        "business":
          $ref: '#/components/schemas/Business'
        "personal":
          $ref: '#/components/schemas/Personal'
      title: UserDetails
    "UserProperty":
      type: "object"
      properties:
        "key":
          type: "string"
        "value":
          $ref: '#/components/schemas/Value'
        "id":
          type: "string"
          description: "a unique identifier for the user property"
        "lastModifiedDate":
          type: "string"
          format: "date-time"
          description: "datetime when the property was last modified such as `2022-02-01T12:00:00.111Z`"
        "createdDate":
          type: "string"
          format: "date-time"
          description: "datetime when the property was created such as `2022-01-01T12:00:00.111Z`"
        "_links": {"$ref": "#/components/schemas/GenericLinks"}
      required:
        - "key"
        - "value"
        - "id"
        - "lastModifiedDate"
        - "createdDate"
      title: UserProperty
    "UserPropertyKeyArray":
      type: "object"
      properties:
        "results":
          type: "array"
          items:
            $ref: '#/components/schemas/ResultsItem'
        "start":
          type: "integer"
          format: "int32"
        "limit":
          type: "integer"
          format: "int32"
        "size":
          type: "integer"
          format: "int32"
        "_links": {"$ref": "#/components/schemas/GenericLinks"}
      required:
        - "results"
      title: UserPropertyKeyArray
    "UserPropertyCreate":
      type: "object"
      properties:
        "value":
          $ref: '#/components/schemas/Value96656d'
      required:
        - "value"
      additionalProperties: false
      title: UserPropertyCreate
    "UserPropertyUpdate":
      type: "object"
      properties:
        "value":
          $ref: '#/components/schemas/Value96656d'
      required:
        - "value"
      additionalProperties: false
      title: UserPropertyUpdate
    "UsersUserKeys":
      type: "object"
      properties:
        "users":
          type: "array"
          items: {"$ref": "#/components/schemas/User"}
        "userKeys":
          type: "array"
          items:
            type: "string"
        "_links": {"$ref": "#/components/schemas/GenericLinks"}
      required:
        - "userAccountIds"
      additionalProperties: true
      nullable: true
      title: UsersUserKeys
    "UserWatch":
      type: "object"
      properties:
        "watching":
          type: "boolean"
      required:
        - "watching"
      title: UserWatch
    "Version":
      type: "object"
      properties:
        "by": {"$ref": "#/components/schemas/User"}
        "when":
          type: "string"
          format: "date-time"
          nullable: true
        "friendlyWhen":
          type: "string"
          nullable: true
        "message":
          type: "string"
          nullable: true
        "number":
          type: "integer"
          format: "int32"
          description: "Set this to the current version number incremented by one"
        "minorEdit":
          type: "boolean"
          description: "If `minorEdit` is set to 'true', no notification email or activity\nstream will be generated for the change."
        "content": {"$ref": "#/components/schemas/Content"}
        "collaborators": {"$ref": "#/components/schemas/UsersUserKeys"}
        "_expandable":
          $ref: '#/components/schemas/Expandablefdb576'
        "_links": {"$ref": "#/components/schemas/GenericLinks"}
        "contentTypeModified":
          type: "boolean"
          description: "True if content type is modifed in this version (e.g. page to blog)"
        "confRev":
          type: "string"
          description: "The revision id provided by confluence to be used as a revision in Synchrony"
          nullable: true
        "syncRev":
          type: "string"
          description: "The revision id provided by Synchrony"
          nullable: true
        "syncRevSource":
          type: "string"
          description: "Source of the synchrony revision"
          nullable: true
      required:
        - "minorEdit"
        - "number"
        - "when"
      nullable: true
      title: Version
    "VersionArray":
      type: "object"
      properties:
        "results":
          type: "array"
          items: {"$ref": "#/components/schemas/Version"}
        "start":
          type: "integer"
          format: "int32"
        "limit":
          type: "integer"
          format: "int32"
        "size":
          type: "integer"
          format: "int32"
        "_links": {"$ref": "#/components/schemas/GenericLinks"}
      required:
        - "_links"
        - "limit"
        - "results"
        - "size"
        - "start"
      title: VersionArray
    "VersionRestore":
      type: "object"
      properties:
        "operationKey":
          $ref: '#/components/schemas/OperationKeyEnum'
        "params":
          $ref: '#/components/schemas/Params'
      required:
        - "operationKey"
        - "params"
      title: VersionRestore
    "Watch":
      type: "object"
      properties:
        "type":
          type: "string"
        "watcher": {"$ref": "#/components/schemas/WatchUser"}
        "contentId":
          type: "integer"
          format: "int64"
      required:
        - "contentId"
        - "type"
        - "watcher"
      title: Watch
    "WatchArray":
      type: "object"
      properties:
        "results":
          type: "array"
          items: {"$ref": "#/components/schemas/Watch"}
        "start":
          type: "integer"
          format: "int32"
        "limit":
          type: "integer"
          format: "int32"
        "size":
          type: "integer"
          format: "int32"
        "_links": {"$ref": "#/components/schemas/GenericLinks"}
      required:
        - "_links"
        - "limit"
        - "results"
        - "size"
        - "start"
      title: WatchArray
    "WatchUser":
      type: "object"
      properties:
        "type":
          type: "string"
        "username": {"$ref": "#/components/schemas/GenericUserName"}
        "userKey": {"$ref": "#/components/schemas/GenericUserKey"}
        "accountId": {"$ref": "#/components/schemas/GenericAccountId"}
        "profilePicture": {"$ref": "#/components/schemas/Icon"}
        "displayName":
          type: "string"
        "timeZone":
          type: "string"
          nullable: true
        "operations":
          type: "array"
          items: {"$ref": "#/components/schemas/OperationCheckResult"}
          nullable: true
        "externalCollaborator":
          type: "boolean"
        "isGuest":
          type: "boolean"
          nullable: true
        "isExternalCollaborator":
          type: "boolean"
        "details": {"$ref": "#/components/schemas/UserDetails"}
        "accountType":
          type: "string"
        "email":
          type: "string"
        "publicName":
          type: "string"
        "personalSpace":
          $ref: '#/components/schemas/PersonalSpace'
      required:
        - "type"
        - "accountId"
        - "profilePicture"
        - "displayName"
        - "operations"
        - "isExternalCollaborator"
        - "isGuest"
        - "accountType"
        - "email"
        - "publicName"
        - "personalSpace"
        - "externalCollaborator"
      description: "This essentially the same as the `User` object, but no `_links` property and\nno `_expandable` property (therefore, different required fields)."
      title: WatchUser
    "WebResourceDependencies":
      type: "object"
      properties:
        "_expandable":
          $ref: '#/components/schemas/Expandablef62071'
        "keys":
          type: "array"
          items:
            type: "string"
        "contexts":
          type: "array"
          items:
            type: "string"
        "uris":
          $ref: '#/components/schemas/Uris867f9b'
        "tags":
          $ref: '#/components/schemas/Tags5c2963'
        "superbatch": {"$ref": "#/components/schemas/SuperBatchWebResources"}
      title: WebResourceDependencies
    "PermissionSubject":
      type: "object"
      properties:
        "type":
          $ref: '#/components/schemas/TypeEnum1f3bca'
        "identifier":
          type: "string"
          description: "for `type=user`, identifier should be user's accountId or `anonymous` for anonymous users\n\nfor `type=group`, identifier should be the groupId."
      required:
        - "identifier"
        - "type"
      description: "The user or group that the permission applies to."
      title: PermissionSubject
    "PermissionSubjectWithGroupId":
      type: "object"
      properties:
        "type":
          $ref: '#/components/schemas/TypeEnum1f3bca'
        "identifier":
          type: "string"
          description: "for `type=user`, identifier should be user's accountId or `anonymous` for anonymous users\n\nfor `type=group`, identifier should be ID of the group"
      required:
        - "identifier"
        - "type"
      description: "The user or group that the permission applies to."
      title: PermissionSubjectWithGroupId
    "SpacePermissionV2":
      type: "object"
      properties:
        "id":
          type: "integer"
          format: "int64"
        "subject": {"$ref": "#/components/schemas/PermissionSubject"}
        "operation":
          $ref: '#/components/schemas/Operation'
        "_links": {"$ref": "#/components/schemas/GenericLinks"}
      required:
        - "id"
        - "subject"
        - "operation"
      description: "This object represents a single space permission. Permissions consist of\nat least one operation object with an accompanying subjects object.\n\nThe following combinations of `operation.key` and `operation.target` values are\nvalid for the `operation` object:\n``` bash\n'create': 'page', 'blogpost', 'comment', 'attachment'\n'read': 'space'\n'delete': 'page', 'blogpost', 'comment', 'attachment', 'space'\n'export': 'space'\n'administer': 'space'\n'archive': 'page'\n'restrict_content': 'space'\n```\n\nFor example, to enable Delete Own permission, set the `operation` object to the following:\n```\n\"operation\": {\n    \"key\": \"delete\",\n    \"target\": \"space\"\n}\n```\nTo enable Add/Delete Restrictions permissions, set the `operation` object to the following:\n```\n\"operation\": {\n    \"key\": \"restrict_content\",\n    \"target\": \"space\"\n}\n```"
      title: SpacePermissionV2
    "SpacePermissionRequest":
      type: "object"
      properties:
        "subject": {"$ref": "#/components/schemas/PermissionSubject"}
        "operation":
          $ref: '#/components/schemas/Operation'
        "_links": {"$ref": "#/components/schemas/GenericLinks"}
      required:
        - "subject"
        - "operation"
      additionalProperties: true
      description: "This object represents the request for the single space permission. Permissions consist of\none operation object with an accompanying subjects object.\n\nThe following combinations of `operation.key` and `operation.target` values are\nvalid for the `operation` object:\n``` bash\n'create': 'page', 'blogpost', 'comment', 'attachment'\n'read': 'space'\n'delete': 'page', 'blogpost', 'comment', 'attachment', 'space'\n'export': 'space'\n'administer': 'space'\n'archive': 'page'\n'restrict_content': 'space'\n```\n\nFor example, to enable Delete Own permission, set the `operation` object to the following:\n```\n\"operation\": {\n    \"key\": \"delete\",\n    \"target\": \"space\"\n}\n```\nTo enable Add/Delete Restrictions permissions, set the `operation` object to the following:\n```\n\"operation\": {\n    \"key\": \"restrict_content\",\n    \"target\": \"space\"\n}\n```"
      title: SpacePermissionRequest
    "SpacePermissionCustomContent":
      type: "object"
      properties:
        "subject": {"$ref": "#/components/schemas/PermissionSubject"}
        "operations":
          type: "array"
          items:
            $ref: '#/components/schemas/OperationsItem'
      required:
        - "operations"
        - "subject"
      description: "This object represents a list of space permissions for custom content type for an individual user. Permissions consist of\na subjects object and a list with at least one operation object."
      title: SpacePermissionCustomContent
    "ContentPermissionRequest":
      type: "object"
      properties:
        "subject": {"$ref": "#/components/schemas/PermissionSubjectWithGroupId"}
        "operation":
          $ref: '#/components/schemas/OperationEnum04b7f7'
      required:
        - "operation"
        - "subject"
      description: "This object represents the request for the content permission check API."
      title: ContentPermissionRequest
    "PermissionCheckResponse":
      type: "object"
      properties:
        "hasPermission":
          type: "boolean"
        "errors":
          type: "array"
          items: {"$ref": "#/components/schemas/Message"}
        "_links": {"$ref": "#/components/schemas/GenericLinks"}
      required:
        - "hasPermission"
      description: "This object represents the response for the content permission check API. If the user or group does not have\npermissions, the following errors may be returned:\n\n- Group does not have permission to the space\n- Group does not have permission to the content\n- User is not allowed to use Confluence\n- User does not have permission to the space\n- User does not have permission to the content\n- Anonymous users are not allowed to use Confluence\n- Anonymous user does not have permission to the space\n- Anonymous user does not have permission to the content"
      title: PermissionCheckResponse
    labels:
      type: object
      properties:
        results:
          type: "array"
          items: {"$ref": "#/components/schemas/Label"}
        start:
          type: "integer"
          format: "int32"
        limit:
          type: "integer"
          format: "int32"
        size:
          type: "integer"
          format: "int32"
        _links: {"$ref": "#/components/schemas/GenericLinks"}
      required:
        - results
        - size
      title: labels
    source:
      type:
        - object
        - object
        - object
      properties:
        id:
          type: "integer"
          format: "int64"
        type:
          type: "string"
        status:
          type: "string"
        title:
          type: "string"
        space: {"$ref": "#/components/schemas/Space"}
        history:
          $ref: '#/components/schemas/History'
        version: {"$ref": "#/components/schemas/Version"}
        ancestors:
          type: "array"
          items: {"$ref": "#/components/schemas/Content"}
          nullable: true
        operations:
          type: "array"
          items: {"$ref": "#/components/schemas/OperationCheckResult"}
        children: {"$ref": "#/components/schemas/ContentChildren"}
        childTypes: {"$ref": "#/components/schemas/ContentChildType"}
        descendants: {"$ref": "#/components/schemas/ContentChildren"}
        container: {"$ref": "#/components/schemas/Container"}
        body:
          $ref: '#/components/schemas/Body'
        restrictions:
          $ref: '#/components/schemas/Restrictions'
        metadata:
          $ref: '#/components/schemas/Metadata5bfc61'
        macroRenderedOutput:
          $ref: '#/components/schemas/MacroRenderedOutput'
        extensions:
          $ref: '#/components/schemas/Extensions'
        _expandable:
          $ref: '#/components/schemas/Expandable52d461'
        _links: {"$ref": "#/components/schemas/GenericLinks"}
        ari:
          type: string
        base64EncodedAri:
          type: string
        username: {"$ref": "#/components/schemas/GenericUserName"}
        userKey: {"$ref": "#/components/schemas/GenericUserKey"}
        accountId: {"$ref": "#/components/schemas/GenericAccountId"}
        accountType:
          $ref: '#/components/schemas/AccountTypeEnum'
        email:
          type: "string"
          description: "The email address of the user. Depending on the user's privacy setting, this may return an empty string."
          nullable: true
        publicName:
          type: "string"
          description: "The public name or nickname of the user. Will always contain a value."
        profilePicture: {"$ref": "#/components/schemas/Icon"}
        displayName:
          type: "string"
          description: "The displays name of the user. Depending on the user's privacy setting, this may be the same as publicName."
          nullable: true
        timeZone:
          type: "string"
          description: "This displays user time zone. Depending on the user's privacy setting, this may return null."
          nullable: true
        externalCollaborator:
          type: "boolean"
          description: "This is deprecated. Use `isGuest` instead to find out whether the user is a guest user."
        isExternalCollaborator:
          type: "boolean"
          description: "This is deprecated. Use `isGuest` instead to find out whether the user is a guest user."
        isGuest:
          type: "boolean"
          description: "Whether the user is a guest user"
        details: {"$ref": "#/components/schemas/UserDetails"}
        personalSpace: {"$ref": "#/components/schemas/Space"}
        key:
          type: "string"
        alias:
          type: "string"
        name:
          type: "string"
        icon: {"$ref": "#/components/schemas/Icon"}
        description:
          $ref: '#/components/schemas/Description'
        homepage: {"$ref": "#/components/schemas/Content"}
        permissions:
          type: "array"
          items: {"$ref": "#/components/schemas/SpacePermission"}
        settings: {"$ref": "#/components/schemas/SpaceSettings"}
        theme: {"$ref": "#/components/schemas/Theme"}
        lookAndFeel: {"$ref": "#/components/schemas/LookAndFeel"}
      required:
        - status
        - type
        - type
        - _expandable
        - _links
        - key
        - name
        - status
        - type
      additionalProperties: true
      description: |-
        Base object for all content types.
        Representation of a blogpost (content)
      nullable: true
      title: source
    target:
      type:
        - object
        - object
        - object
      properties:
        id:
          type: "integer"
          format: "int64"
        type:
          type: "string"
        status:
          type: "string"
        title:
          type: "string"
        space: {"$ref": "#/components/schemas/Space"}
        history:
          $ref: '#/components/schemas/History'
        version: {"$ref": "#/components/schemas/Version"}
        ancestors:
          type: "array"
          items: {"$ref": "#/components/schemas/Content"}
          nullable: true
        operations:
          type: "array"
          items: {"$ref": "#/components/schemas/OperationCheckResult"}
        children: {"$ref": "#/components/schemas/ContentChildren"}
        childTypes: {"$ref": "#/components/schemas/ContentChildType"}
        descendants: {"$ref": "#/components/schemas/ContentChildren"}
        container: {"$ref": "#/components/schemas/Container"}
        body:
          $ref: '#/components/schemas/Body'
        restrictions:
          $ref: '#/components/schemas/Restrictions'
        metadata:
          $ref: '#/components/schemas/Metadata5bfc61'
        macroRenderedOutput:
          $ref: '#/components/schemas/MacroRenderedOutput'
        extensions:
          $ref: '#/components/schemas/Extensions'
        _expandable:
          $ref: '#/components/schemas/Expandable52d461'
        _links: {"$ref": "#/components/schemas/GenericLinks"}
        ari:
          type: string
        base64EncodedAri:
          type: string
        username: {"$ref": "#/components/schemas/GenericUserName"}
        userKey: {"$ref": "#/components/schemas/GenericUserKey"}
        accountId: {"$ref": "#/components/schemas/GenericAccountId"}
        accountType:
          $ref: '#/components/schemas/AccountTypeEnum'
        email:
          type: "string"
          description: "The email address of the user. Depending on the user's privacy setting, this may return an empty string."
          nullable: true
        publicName:
          type: "string"
          description: "The public name or nickname of the user. Will always contain a value."
        profilePicture: {"$ref": "#/components/schemas/Icon"}
        displayName:
          type: "string"
          description: "The displays name of the user. Depending on the user's privacy setting, this may be the same as publicName."
          nullable: true
        timeZone:
          type: "string"
          description: "This displays user time zone. Depending on the user's privacy setting, this may return null."
          nullable: true
        externalCollaborator:
          type: "boolean"
          description: "This is deprecated. Use `isGuest` instead to find out whether the user is a guest user."
        isExternalCollaborator:
          type: "boolean"
          description: "This is deprecated. Use `isGuest` instead to find out whether the user is a guest user."
        isGuest:
          type: "boolean"
          description: "Whether the user is a guest user"
        details: {"$ref": "#/components/schemas/UserDetails"}
        personalSpace: {"$ref": "#/components/schemas/Space"}
        key:
          type: "string"
        alias:
          type: "string"
        name:
          type: "string"
        icon: {"$ref": "#/components/schemas/Icon"}
        description:
          $ref: '#/components/schemas/Description'
        homepage: {"$ref": "#/components/schemas/Content"}
        permissions:
          type: "array"
          items: {"$ref": "#/components/schemas/SpacePermission"}
        settings: {"$ref": "#/components/schemas/SpaceSettings"}
        theme: {"$ref": "#/components/schemas/Theme"}
        lookAndFeel: {"$ref": "#/components/schemas/LookAndFeel"}
      required:
        - status
        - type
        - type
        - _expandable
        - _links
        - key
        - name
        - status
        - type
      additionalProperties: true
      description: |-
        Base object for all content types.
        Representation of a blogpost (content)
      nullable: true
      title: target
    ArchivePagesB:
      type: "object"
      properties:
        "pages":
          type: "array"
          items:
            $ref: '#/components/schemas/PagesItem'
      title: ArchivePagesB
    AddLabelsToContentB:
      oneOf:
        - {"$ref": "#/components/schemas/LabelCreateArray"}
        - {"$ref": "#/components/schemas/LabelCreate"}
      title: AddLabelsToContentB
    AddLabelsToSpaceB:
      type: "array"
      items: {"$ref": "#/components/schemas/LabelCreate"}
      title: AddLabelsToSpaceB
    ExportAuditRecordsR200:
      type: "string"
      format: "binary"
      title: ExportAuditRecordsR200
    MovePageR200:
      type: "object"
      properties:
        "pageId": {"$ref": "#/components/schemas/ContentId"}
      title: MovePageR200
    GetRestrictionsByOperation:
      type: "object"
      title: GetRestrictionsByOperation
      properties:
        operationType: {"$ref": "#/components/schemas/ContentRestriction"}
        _links: {"$ref": "#/components/schemas/GenericLinks"}
    GetCustomContentStatesR200:
      type: "array"
      items: {"$ref": "#/components/schemas/ContentState"}
      title: GetCustomContentStatesR200
    GetSpaceContentStatesR200:
      type: "array"
      items: {"$ref": "#/components/schemas/ContentState"}
      description: "Space suggested content states that users can choose from"
      title: GetSpaceContentStatesR200
    GetModulesR401:
      type: string
      description: Shemaless response
      title: GetModulesR401
    RegisterModulesR400:
      type: string
      description: Shemaless response
      title: RegisterModulesR400
    RegisterModulesR401:
      type: string
      description: Shemaless response
      title: RegisterModulesR401
    RemoveModulesR401:
      type: string
      description: Shemaless response
      title: RemoveModulesR401
    GetViewsR200:
      type: "object"
      properties:
        "id":
          type: "integer"
          description: "The content ID."
        "count":
          type: "integer"
          description: "The total number of views for the content."
      title: GetViewsR200
    GetViewersR200:
      type: "object"
      properties:
        "id":
          type: "integer"
          description: "The content ID."
        "count":
          type: "integer"
          description: "The total number of distinct viewers for the content."
      title: GetViewersR200
    TypeEnum:
      type: "string"
      enum:
        - "attachment"
      description: "Set this to `attachment`."
      title: TypeEnum
    TypeEnumc97071:
      type: "string"
      enum:
        - "page"
      description: "The type of content. Set this to `page`."
      title: TypeEnumc97071
    StatusEnum:
      type: "string"
      enum:
        - "current"
      description: "The status of the content. Set this to `current` or omit it altogether."
      default: "current"
      title: StatusEnum
    RepresentationEnum:
      type: "string"
      enum:
        - "view"
        - "export_view"
        - "styled_view"
        - "storage"
        - "editor"
        - "editor2"
        - "anonymous_export_view"
        - "wiki"
        - "atlas_doc_format"
      title: RepresentationEnum
    StatusEnumb3e4e3:
      type: "string"
      enum:
        - "WORKING"
        - "QUEUED"
        - "FAILED"
        - "COMPLETED"
        - "RERUNNING"
      description: "Rerunning is reserved for when the job is working, but there is a previous run's value in the cache. You may choose to continue polling, or use the cached value."
      title: StatusEnumb3e4e3
    RepresentationEnum5a505f:
      type: "string"
      enum:
        - "view"
        - "export_view"
        - "styled_view"
        - "storage"
        - "editor"
        - "editor2"
        - "anonymous_export_view"
        - "wiki"
        - "atlas_doc_format"
        - "plain"
        - "raw"
      description: "The content format type. Set the value of this property to\nthe name of the format being used, e.g. 'storage'."
      title: RepresentationEnum5a505f
    RepresentationEnumc45a34:
      type: "string"
      enum:
        - "storage"
        - "view"
        - "export_view"
        - "styled_view"
        - "editor"
        - "editor2"
        - "anonymous_export_view"
        - "wiki"
        - "atlas_doc_format"
      description: "The content format type. Set the value of this property to\nthe name of the format being used, e.g. 'storage'."
      title: RepresentationEnumc45a34
    StatusEnume76e6a:
      type: "string"
      enum:
        - "current"
        - "deleted"
        - "historical"
        - "draft"
      description: "The status of the new content."
      default: "current"
      title: StatusEnume76e6a
    OperationEnum:
      type: "string"
      enum:
        - "administer"
        - "copy"
        - "create"
        - "delete"
        - "export"
        - "move"
        - "purge"
        - "purge_version"
        - "read"
        - "restore"
        - "update"
        - "use"
      title: OperationEnum
    OperationEnum5bd999:
      type: "string"
      enum:
        - "administer"
        - "copy"
        - "create"
        - "delete"
        - "export"
        - "move"
        - "purge"
        - "purge_version"
        - "read"
        - "restore"
        - "update"
        - "use"
      description: "The restriction operation applied to content."
      title: OperationEnum5bd999
    OperationEnum3ac951:
      type: "string"
      enum:
        - "read"
        - "update"
      description: "The restriction operation applied to content."
      title: OperationEnum3ac951
    TemplateTypeEnum:
      type: "string"
      enum:
        - "page"
      description: "The type of the template. Set to `page`."
      title: TemplateTypeEnum
    StatusEnum2ed78b:
      type: "string"
      enum:
        - "current"
        - "trashed"
        - "deleted"
        - "historical"
        - "draft"
      description: "The updated status of the content. Note, if you change the status of a page from\n'current' to 'draft' and it has an existing draft, the existing draft will be deleted\nin favor of the updated page."
      title: StatusEnum2ed78b
    EmbeddedContentRenderEnum:
      type: "string"
      enum:
        - "current"
        - "version-at-save"
      description: "Mode used for rendering embedded content, such as attachments. - `current` renders the embedded content using the latest version. - `version-at-save` renders the embedded content using the version at the time of save."
      default: "current"
      title: EmbeddedContentRenderEnum
    TypeEnumed0c22:
      type: "string"
      enum:
        - "space"
        - "existing_page"
        - "parent_page"
        - "parent_content"
      title: TypeEnumed0c22
    TypeEnum675952:
      type: "string"
      enum:
        - "group"
      default: "group"
      title: TypeEnum675952
    LookAndFeelTypeEnum:
      type: "string"
      enum:
        - "global"
        - "custom"
        - "theme"
      title: LookAndFeelTypeEnum
    SelectedEnum:
      type: "string"
      enum:
        - "global"
        - "custom"
      title: SelectedEnum
    TypeEnumdd7d20:
      type: "string"
      enum:
        - "known"
        - "unknown"
        - "anonymous"
        - "user"
      title: TypeEnumdd7d20
    OperationEnum749875:
      type: "string"
      enum:
        - "administer"
        - "archive"
        - "clear_permissions"
        - "copy"
        - "create"
        - "create_space"
        - "delete"
        - "export"
        - "move"
        - "purge"
        - "purge_version"
        - "read"
        - "restore"
        - "restrict_content"
        - "update"
        - "use"
      description: "The operation itself."
      title: OperationEnum749875
    UnitsEnum:
      type: "string"
      enum:
        - "NANOS"
        - "MICROS"
        - "MILLIS"
        - "SECONDS"
        - "MINUTES"
        - "HOURS"
        - "HALF_DAYS"
        - "DAYS"
        - "WEEKS"
        - "MONTHS"
        - "YEARS"
        - "DECADES"
        - "CENTURIES"
        - "MILLENNIA"
        - "ERAS"
        - "FOREVER"
      description: "The unit of time that the retention period is measured in."
      title: UnitsEnum
    StatusEnum4c7224:
      type: "string"
      enum:
        - "complete"
        - "incomplete"
      title: StatusEnum4c7224
    AccountTypeEnum:
      type: "string"
      enum:
        - "atlassian"
        - "app"
        - ""
      description: "The account type of the user, may return empty string if unavailable. App is if the user is a bot user created on behalf of an Atlassian app."
      title: AccountTypeEnum
    OperationKeyEnum:
      type: "string"
      enum:
        - "restore"
      description: "Set to 'restore'."
      title: OperationKeyEnum
    TypeEnum1f3bca:
      type: "string"
      enum:
        - "user"
        - "group"
      title: TypeEnum1f3bca
    OperationEnum04b7f7:
      type: "string"
      enum:
        - "read"
        - "update"
        - "delete"
      description: "The content permission operation to check."
      title: OperationEnum04b7f7
    Version83f448:
      type: "object"
      properties:
        "number":
          type: "integer"
          format: "int32"
          description: "The version number."
      required:
        - "number"
      description: "The attachment version. Set this to the current version number of the\nattachment. Note, the version number only needs to be incremented when\nupdating the actual attachment, not its properties."
      title: Version83f448
    Metadata:
      type: "object"
      properties:
        "mediaType":
          type: "string"
          description: "The media type of the attachment, e.g. 'img/jpg'."
        "comment":
          type: "string"
          description: "The comment for this update."
      title: Metadata
    Containerb524b8:
      type: "object"
      properties:
        "id":
          type: "string"
          description: "The `id` of the parent content."
        "type":
          type: "string"
          description: "The content type. You can only attach attachments to content\nof type: `page`, `blogpost`."
      required:
        - "id"
        - "type"
      description: "The new content to attach the attachment to."
      title: Containerb524b8
    Author:
      type: "object"
      properties:
        "type":
          type: "string"
          enum:
            - "user"
          default: "user"
        "displayName":
          type: "string"
        "operations":
          $ref: '#/components/schemas/Operations'
        "username": {"$ref": "#/components/schemas/GenericUserName"}
        "userKey": {"$ref": "#/components/schemas/GenericUserKey"}
        "accountId": {"$ref": "#/components/schemas/GenericAccountId"}
        "accountType":
          type: "string"
        "externalCollaborator":
          type: "boolean"
          description: "This is deprecated. Use `isGuest` instead."
        "isExternalCollaborator":
          type: "boolean"
          description: "This is deprecated. Use `isGuest` instead. Whether the user is an external collaborator user"
        "isGuest":
          type: "boolean"
          description: "Whether the user is a guest user"
        "publicName":
          type: "string"
          description: "The public name or nickname of the user. Will always contain a value."
      required:
        - "displayName"
        - "operations"
        - "type"
      title: Author
    Author0d1a37:
      type: "object"
      properties:
        "type":
          type: "string"
          enum:
            - "user"
          description: "Set to 'user'."
          default: "user"
        "displayName":
          type: "string"
          description: "The name that is displayed on the audit log in the Confluence UI."
        "operations":
          $ref: '#/components/schemas/Operationsd3ea1b'
        "username": {"$ref": "#/components/schemas/GenericUserName"}
        "userKey": {"$ref": "#/components/schemas/GenericUserKey"}
      required:
        - "type"
      description: "The user that actioned the event. If `author` is not specified, then all\n`author` properties will be set to null/empty, except for `type` which\nwill be set to 'user'."
      title: Author0d1a37
    OriginalTemplate:
      type: "object"
      properties:
        "pluginKey":
          type: "string"
        "moduleKey":
          type: "string"
      required:
        - "moduleKey"
        - "pluginKey"
      title: OriginalTemplate
    Space82ef96:
      type: "object"
      additionalProperties: true
      title: Space82ef96
    Expandable:
      type: "object"
      properties:
        "body":
          type: "string"
      title: Expandable
    Metadata9a43e8:
      type: "object"
      properties:
        "mediaType":
          type: "string"
      title: Metadata9a43e8
    Extensions:
      type: "object"
      title: Extensions
    Body:
      type: "object"
      properties:
        "view": {"$ref": "#/components/schemas/ContentBody"}
        "export_view": {"$ref": "#/components/schemas/ContentBody"}
        "styled_view": {"$ref": "#/components/schemas/ContentBody"}
        "storage": {"$ref": "#/components/schemas/ContentBody"}
        "wiki": {"$ref": "#/components/schemas/ContentBody"}
        "editor": {"$ref": "#/components/schemas/ContentBody"}
        "editor2": {"$ref": "#/components/schemas/ContentBody"}
        "anonymous_export_view": {"$ref": "#/components/schemas/ContentBody"}
        "atlas_doc_format": {"$ref": "#/components/schemas/ContentBody"}
        "dynamic": {"$ref": "#/components/schemas/ContentBody"}
        "raw": {"$ref": "#/components/schemas/ContentBody"}
        "_expandable":
          $ref: '#/components/schemas/Expandable7de7ff'
      title: Body
    Restrictions:
      type: "object"
      properties:
        "read": {"$ref": "#/components/schemas/ContentRestriction"}
        "update": {"$ref": "#/components/schemas/ContentRestriction"}
        "_expandable":
          $ref: '#/components/schemas/Expandable25a645'
        "_links": {"$ref": "#/components/schemas/GenericLinks"}
      title: Restrictions
    MacroRenderedOutput:
      type: "object"
      additionalProperties:
        type: "object"
      title: MacroRenderedOutput
    Expandable07c2ed:
      type: "object"
      properties:
        "childTypes":
          type: "string"
        "container":
          type: "string"
        "metadata":
          type: "string"
        "operations":
          type: "string"
        "children":
          type: "string"
        "restrictions":
          type: "string"
        "history":
          type: "string"
        "ancestors":
          type: "string"
        "body":
          type: "string"
        "version":
          type: "string"
        "descendants":
          type: "string"
        "space":
          type: "string"
        "extensions":
          type: "string"
        "schedulePublishDate":
          type: "string"
        "schedulePublishInfo":
          type: "string"
        "macroRenderedOutput":
          type: "string"
      title: Expandable07c2ed
    Versiona9ec0e:
      type: "object"
      properties:
        "number":
          type: "integer"
          format: "int32"
          description: "The version number. Set this to `1`."
      required:
        - "number"
      additionalProperties: true
      description: "The version for the new content."
      title: Versiona9ec0e
    Space33569e:
      type: "object"
      properties:
        "key":
          type: "string"
          format: "int32"
          description: "The key of the space"
      required:
        - "key"
      additionalProperties: true
      description: "The space for the content."
      title: Space33569e
    AncestorsItem:
      type: "object"
      properties:
        "id":
          type: "string"
          description: "The content ID of the ancestor."
      required:
        - "id"
      title: AncestorsItem
    MediaToken:
      type: "object"
      properties:
        "collectionIds":
          type: "array"
          items:
            type: "string"
        "contentId":
          type: "string"
        "expiryDateTime":
          type: "string"
        "fileIds":
          type: "array"
          items:
            type: "string"
        "token":
          type: "string"
      title: MediaToken
    Expandable9bc16d:
      type: "object"
      properties:
        "content":
          type: "string"
        "embeddedContent":
          type: "string"
        "webresource":
          type: "string"
        "mediaToken":
          type: "string"
      title: Expandable9bc16d
    Expandable3263e2:
      type: "object"
      properties:
        "attachment":
          type: "string"
        "comment":
          type: "string"
        "page":
          type: "string"
        "whiteboard":
          type: "string"
        "database":
          type: "string"
        "embed":
          type: "string"
        "folder":
          type: "string"
      additionalProperties: true
      title: Expandable3263e2
    Attachment:
      type: "object"
      properties:
        "value":
          type: "boolean"
        "_links": {"$ref": "#/components/schemas/GenericLinks"}
      required:
        - "_links"
        - "value"
      title: Attachment
    Comment:
      type: "object"
      properties:
        "value":
          type: "boolean"
        "_links": {"$ref": "#/components/schemas/GenericLinks"}
      required:
        - "_links"
        - "value"
      title: Comment
    Page:
      type: "object"
      properties:
        "value":
          type: "boolean"
        "_links": {"$ref": "#/components/schemas/GenericLinks"}
      required:
        - "_links"
        - "value"
      title: Page
    Expandable890c87:
      type: "object"
      properties:
        "all":
          type: "string"
        "attachment":
          type: "string"
        "comment":
          type: "string"
        "page":
          type: "string"
        "whiteboard":
          type: "string"
        "database":
          type: "string"
        "embed":
          type: "string"
        "folder":
          type: "string"
      title: Expandable890c87
    Spacecc1e40:
      type: "object"
      properties:
        "id":
          type: "integer"
          format: "int64"
          nullable: true
        "name":
          type: "string"
          nullable: true
        "icon": {"$ref": "#/components/schemas/Icon"}
        "identifiers": {"$ref": "#/components/schemas/GlobalSpaceIdentifier"}
        "description":
          $ref: '#/components/schemas/Description98b3c6'
        "homepage": {"$ref": "#/components/schemas/Content"}
        "type":
          type: "string"
          nullable: true
        "metadata":
          $ref: '#/components/schemas/Metadataea133f'
        "operations":
          type: "array"
          items: {"$ref": "#/components/schemas/OperationCheckResult"}
          nullable: true
        "permissions":
          type: "array"
          items: {"$ref": "#/components/schemas/SpacePermission"}
          nullable: true
        "status":
          type: "string"
          nullable: true
        "settings": {"$ref": "#/components/schemas/SpaceSettings"}
        "theme": {"$ref": "#/components/schemas/Theme"}
        "lookAndFeel": {"$ref": "#/components/schemas/LookAndFeel"}
        "history":
          $ref: '#/components/schemas/History'
        "key":
          type: "string"
          description: "The key of the space."
        "links":
          $ref: '#/components/schemas/Linksde82bc'
      required:
        - "key"
      description: "The space that the content is being created in."
      nullable: true
      title: Spacecc1e40
    Container7b328b:
      type: "object"
      properties:
        "id":
          oneOf:
            - type: "integer"
            - type: "string"
          description: "The `id` of the container."
        "type":
          type: "string"
          description: "The `type` of the container."
      required:
        - "id"
        - "type"
      additionalProperties: true
      description: "The container of the content. Required if type is `comment` or certain types of\ncustom content. If you are trying to create a comment that is a child of another comment,\nspecify the parent comment in the ancestors field, not in this field."
      nullable: true
      title: Container7b328b
    AncestorsItemee9937:
      type: "object"
      properties:
        "id":
          type: "string"
          description: "The `id` of the parent content."
      required:
        - "id"
      additionalProperties: true
      title: AncestorsItemee9937
    Body5304ad:
      type: "object"
      properties:
        "view": {"$ref": "#/components/schemas/ContentBodyCreate"}
        "export_view": {"$ref": "#/components/schemas/ContentBodyCreate"}
        "styled_view": {"$ref": "#/components/schemas/ContentBodyCreate"}
        "storage": {"$ref": "#/components/schemas/ContentBodyCreate"}
        "editor": {"$ref": "#/components/schemas/ContentBodyCreate"}
        "editor2": {"$ref": "#/components/schemas/ContentBodyCreate"}
        "wiki": {"$ref": "#/components/schemas/ContentBodyCreate"}
        "anonymous_export_view": {"$ref": "#/components/schemas/ContentBodyCreate"}
        "plain": {"$ref": "#/components/schemas/ContentBodyCreate"}
        "atlas_doc_format": {"$ref": "#/components/schemas/ContentBodyCreate"}
        "raw": {"$ref": "#/components/schemas/ContentBodyCreate"}
      description: "The body of the new content. Does not apply to attachments.\nOnly one body format should be specified as the property for\nthis object, e.g. `storage`.\n\nNote, `editor2` format is used by Atlassian only. `anonymous_export_view` is\nthe same as `export_view` format but only content viewable by an anonymous\nuser is included."
      title: Body5304ad
    Contributors:
      type: "object"
      properties:
        "publishers": {"$ref": "#/components/schemas/UsersUserKeys"}
      title: Contributors
    Expandabled312ab:
      type: "object"
      properties:
        "lastUpdated":
          type: "string"
        "previousVersion":
          type: "string"
        "contributors":
          type: "string"
        "nextVersion":
          type: "string"
        "ownedBy":
          type: "string"
        "lastOwnedBy":
          type: "string"
      title: Expandabled312ab
    Currentuser:
      type: "object"
      properties:
        "favourited":
          $ref: '#/components/schemas/Favourited'
        "lastmodified":
          $ref: '#/components/schemas/Lastmodified'
        "lastcontributed":
          $ref: '#/components/schemas/Lastcontributed'
        "viewed":
          $ref: '#/components/schemas/Viewed'
        "scheduled":
          $ref: '#/components/schemas/Scheduled'
        "_expandable":
          $ref: '#/components/schemas/Expandable6a8e6d'
      title: Currentuser
    Frontend:
      type: "object"
      additionalProperties: true
      title: Frontend
    Labels:
      type: object
      properties:
        results:
          type: "array"
          items: {"$ref": "#/components/schemas/Label"}
        start:
          type: "integer"
          format: "int32"
        limit:
          type: "integer"
          format: "int32"
        size:
          type: "integer"
          format: "int32"
        _links: {"$ref": "#/components/schemas/GenericLinks"}
      required:
        - results
        - size
      title: Labels
    Version13bb46:
      type: "object"
      properties:
        "when":
          type: "string"
          format: "date-time"
        "message":
          type: "string"
        "number":
          type: "integer"
          format: "int32"
        "minorEdit":
          type: "boolean"
        "contentTypeModified":
          type: "boolean"
          description: "True if content type is modifed in this version (e.g. page to blog)"
      required:
        - "message"
        - "minorEdit"
        - "number"
        - "when"
      additionalProperties: true
      title: Version13bb46
    Expandableabce4d:
      type: "object"
      properties:
        "content":
          type: "string"
        "additionalProperties":
          type: "string"
      title: Expandableabce4d
    Version9f6eac:
      type: "object"
      properties:
        "number":
          oneOf:
            - type: "integer"
            - type: "string"
          format: "int32"
          description: "The new version for the updated content property. Set this to the\ncurrent version number incremented by one. To get the current\nversion number, use 'Get content property' and retrieve\n`version.number`."
        "minorEdit":
          type: "boolean"
          description: "If `minorEdit` is set to 'true', no notification email or activity\nstream will be generated for the change."
          default: true
      required:
        - "number"
      additionalProperties: true
      description: "The version number of the property."
      nullable: true
      title: Version9f6eac
    Restrictions88a50a:
      type: "object"
      properties:
        "user": {"$ref": "#/components/schemas/UserArray"}
        "group": {"$ref": "#/components/schemas/GroupArray"}
        "_expandable":
          $ref: '#/components/schemas/Expandableac2380'
      title: Restrictions88a50a
    Expandablea42744:
      type: "object"
      properties:
        "restrictions":
          type: "string"
        "content":
          type: "string"
      title: Expandablea42744
    Restrictionsf477d3:
      type: "object"
      properties:
        "group":
          type: "array"
          items:
            $ref: '#/components/schemas/GroupItem'
          description: "The groups that the restrictions will be applied to. This array must\nhave at least one item, otherwise it should be omitted."
        "user":
          oneOf:
            - type: "array"
              items: {"$ref": "#/components/schemas/User"}
            - {"$ref": "#/components/schemas/UserArray"}
      description: "The users/groups that the restrictions will be applied to. At least one of\n`user` or `group` must be specified for this object."
      title: Restrictionsf477d3
    Restrictionsa50726:
      type: "object"
      properties:
        "user":
          type: "array"
          items:
            $ref: '#/components/schemas/UserItem'
          description: "The users that the restrictions will be applied to. This array must\nhave at least one item, otherwise it should be omitted."
        "group":
          type: "array"
          items:
            $ref: '#/components/schemas/GroupIteme9d8fc'
          description: "The groups that the restrictions will be applied to. This array must\nhave at least one item, otherwise it should be omitted."
      description: "The users/groups that the restrictions will be applied to. At least one of\n`user` or `group` must be specified for this object."
      title: Restrictionsa50726
    OriginalTemplate25a4f5:
      type: "object"
      properties:
        "pluginKey":
          type: "string"
        "moduleKey":
          type: "string"
      title: OriginalTemplate25a4f5
    Space3ea116:
      type: "object"
      properties:
        "key":
          type: "string"
      required:
        - "key"
      additionalProperties: true
      description: "The key for the space of the new template. Only applies to space templates.\nIf the spaceKey is not specified, the template will be created as a global\ntemplate."
      nullable: true
      title: Space3ea116
    Spaceb021ae:
      type: "object"
      properties:
        "key":
          type: "string"
      required:
        - "key"
      additionalProperties: true
      description: "The key for the space of the template. Required if the template is a\nspace template. Set this to the current `space.key`."
      nullable: true
      title: Spaceb021ae
    Version5f500d:
      type: "object"
      properties:
        "number":
          type: "integer"
          format: "int32"
          description: "The version number."
        "message":
          type: "string"
          description: "An optional message to be stored with the corresponding version."
          nullable: true
      required:
        - "number"
      additionalProperties: true
      description: "The new version for the updated content. Set this to the current version number incremented by one, unless you are changing the status to 'draft' which must have a version number of 1.\n\nTo get the current version number, use [Get content by ID](#api-content-id-get) and retrieve `version.number`."
      nullable: true
      title: Version5f500d
    AncestorsItem97fa4e:
      type: "object"
      properties:
        "id":
          oneOf:
            - type: "integer"
            - type: "string"
          description: "The `id` of the parent content."
      required:
        - "id"
      additionalProperties: true
      title: AncestorsItem97fa4e
    Body632549:
      type: "object"
      properties:
        "view": {"$ref": "#/components/schemas/ContentBodyCreate"}
        "export_view": {"$ref": "#/components/schemas/ContentBodyCreate"}
        "styled_view": {"$ref": "#/components/schemas/ContentBodyCreate"}
        "storage": {"$ref": "#/components/schemas/ContentBodyCreateStorage"}
        "editor": {"$ref": "#/components/schemas/ContentBodyCreate"}
        "editor2": {"$ref": "#/components/schemas/ContentBodyCreate"}
        "wiki": {"$ref": "#/components/schemas/ContentBodyCreate"}
        "atlas_doc_format": {"$ref": "#/components/schemas/ContentBodyCreate"}
        "anonymous_export_view": {"$ref": "#/components/schemas/ContentBodyCreate"}
      description: "The updated body of the content. Does not apply to attachments.\nIf you are not sure how to generate these formats, you can create a page in the\nConfluence application, retrieve the content using [Get content](#api-content-get),\nand expand the desired content format, e.g. `expand=body.storage`."
      title: Body632549
    Bodyded886:
      type: "object"
      properties:
        "storage": {"$ref": "#/components/schemas/ContentBodyCreate"}
        "editor2": {"$ref": "#/components/schemas/ContentBodyCreate"}
      description: "If defined, this will replace the body of the destination page."
      title: Bodyded886
    Links:
      type: "object"
      properties:
        "status":
          type: "string"
          description: "The URL to retrive status of long task."
      additionalProperties: true
      title: Links
    Headings:
      type: "object"
      properties:
        "color":
          type: "string"
      required:
        - "color"
      title: Headings
    Links9496b4:
      type: "object"
      properties:
        "color":
          type: "string"
      required:
        - "color"
      title: Links9496b4
    BordersAndDivIDErs:
      type: "object"
      properties:
        "color":
          type: "string"
      required:
        - "color"
      title: BordersAndDivIDErs
    SpaceReference:
      type: "object"
      nullable: true
      title: SpaceReference
    Name:
      type: "object"
      properties:
        "key":
          type: "string"
        "args":
          type: "array"
          items:
            $ref: '#/components/schemas/ArgsItem'
      required:
        - "args"
        - "key"
      title: Name
    AdditionalDetails:
      type: "object"
      properties:
        "destinationId":
          type: "string"
        "destinationUrl":
          type: "string"
        "totalPageNeedToCopy":
          type: "integer"
        "additionalProperties":
          type: "string"
      title: AdditionalDetails
    AdditionalDetails7a6f26:
      type: "object"
      properties:
        "destinationId":
          type: "string"
          nullable: true
        "destinationUrl":
          type: "string"
        "totalPageNeedToCopy":
          type: "integer"
        "additionalProperties":
          type: "string"
      title: AdditionalDetails7a6f26
    Parameters:
      type: "object"
      title: Parameters
    HoverOrFocus:
      type: "object"
      properties:
        "backgroundColor":
          type: "string"
      required:
        - "backgroundColor"
      title: HoverOrFocus
    Expandable5c5d70:
      type: "object"
      properties:
        "operations":
          type: "string"
        "details":
          type: "string"
        "personalSpace":
          type: "string"
      title: Expandable5c5d70
    HoverOrFocus53690d:
      type: "object"
      properties:
        "backgroundColor":
          type: "string"
        "color":
          type: "string"
      required:
        - "backgroundColor"
        - "color"
      title: HoverOrFocus53690d
    HoverOrFocusf1c7a6:
      type: "object"
      properties:
        "backgroundColor":
          type: "string"
        "color":
          type: "string"
      title: HoverOrFocusf1c7a6
    Source:
      type:
        - object
        - object
        - object
      properties:
        id:
          type: "integer"
          format: "int64"
        type:
          type: "string"
        status:
          type: "string"
        title:
          type: "string"
        space: {"$ref": "#/components/schemas/Space"}
        history:
          $ref: '#/components/schemas/History'
        version: {"$ref": "#/components/schemas/Version"}
        ancestors:
          type: "array"
          items: {"$ref": "#/components/schemas/Content"}
          nullable: true
        operations:
          type: "array"
          items: {"$ref": "#/components/schemas/OperationCheckResult"}
        children: {"$ref": "#/components/schemas/ContentChildren"}
        childTypes: {"$ref": "#/components/schemas/ContentChildType"}
        descendants: {"$ref": "#/components/schemas/ContentChildren"}
        container: {"$ref": "#/components/schemas/Container"}
        body:
          $ref: '#/components/schemas/Bodye84b79'
        restrictions:
          $ref: '#/components/schemas/Restrictionsbc3afc'
        metadata:
          $ref: '#/components/schemas/Metadata5bfc61'
        macroRenderedOutput:
          $ref: '#/components/schemas/MacroRenderedOutput'
        extensions:
          $ref: '#/components/schemas/Extensions'
        _expandable:
          $ref: '#/components/schemas/Expandable52d461'
        _links: {"$ref": "#/components/schemas/GenericLinks"}
        ari:
          type: string
        base64EncodedAri:
          type: string
        username: {"$ref": "#/components/schemas/GenericUserName"}
        userKey: {"$ref": "#/components/schemas/GenericUserKey"}
        accountId: {"$ref": "#/components/schemas/GenericAccountId"}
        accountType:
          type: "string"
          enum:
            - "atlassian"
            - "app"
            - ""
          description: "The account type of the user, may return empty string if unavailable. App is if the user is a bot user created on behalf of an Atlassian app."
        email:
          type: "string"
          description: "The email address of the user. Depending on the user's privacy setting, this may return an empty string."
          nullable: true
        publicName:
          type: "string"
          description: "The public name or nickname of the user. Will always contain a value."
        profilePicture: {"$ref": "#/components/schemas/Icon"}
        displayName:
          type: "string"
          description: "The displays name of the user. Depending on the user's privacy setting, this may be the same as publicName."
          nullable: true
        timeZone:
          type: "string"
          description: "This displays user time zone. Depending on the user's privacy setting, this may return null."
          nullable: true
        externalCollaborator:
          type: "boolean"
          description: "This is deprecated. Use `isGuest` instead to find out whether the user is a guest user."
        isExternalCollaborator:
          type: "boolean"
          description: "This is deprecated. Use `isGuest` instead to find out whether the user is a guest user."
        isGuest:
          type: "boolean"
          description: "Whether the user is a guest user"
        details: {"$ref": "#/components/schemas/UserDetails"}
        personalSpace: {"$ref": "#/components/schemas/Space"}
        key:
          type: "string"
        alias:
          type: "string"
        name:
          type: "string"
        icon: {"$ref": "#/components/schemas/Icon"}
        description:
          $ref: '#/components/schemas/Description'
        homepage: {"$ref": "#/components/schemas/Content"}
        permissions:
          type: "array"
          items: {"$ref": "#/components/schemas/SpacePermission"}
        settings: {"$ref": "#/components/schemas/SpaceSettings"}
        theme: {"$ref": "#/components/schemas/Theme"}
        lookAndFeel: {"$ref": "#/components/schemas/LookAndFeel"}
      required:
        - status
        - type
        - type
        - _expandable
        - _links
        - key
        - name
        - status
        - type
      additionalProperties: true
      description: |-
        Base object for all content types.
        Representation of a blogpost (content)
      nullable: true
      title: Source
    Target:
      type:
        - object
        - object
        - object
      properties:
        id:
          type: "integer"
          format: "int64"
        type:
          type: "string"
        status:
          type: "string"
        title:
          type: "string"
        space: {"$ref": "#/components/schemas/Space"}
        history:
          $ref: '#/components/schemas/History'
        version: {"$ref": "#/components/schemas/Version"}
        ancestors:
          type: "array"
          items: {"$ref": "#/components/schemas/Content"}
          nullable: true
        operations:
          type: "array"
          items: {"$ref": "#/components/schemas/OperationCheckResult"}
        children: {"$ref": "#/components/schemas/ContentChildren"}
        childTypes: {"$ref": "#/components/schemas/ContentChildType"}
        descendants: {"$ref": "#/components/schemas/ContentChildren"}
        container: {"$ref": "#/components/schemas/Container"}
        body:
          $ref: '#/components/schemas/Bodye84b79'
        restrictions:
          $ref: '#/components/schemas/Restrictionsbc3afc'
        metadata:
          $ref: '#/components/schemas/Metadata5bfc61'
        macroRenderedOutput:
          $ref: '#/components/schemas/MacroRenderedOutput'
        extensions:
          $ref: '#/components/schemas/Extensions'
        _expandable:
          $ref: '#/components/schemas/Expandable52d461'
        _links: {"$ref": "#/components/schemas/GenericLinks"}
        ari:
          type: string
        base64EncodedAri:
          type: string
        username: {"$ref": "#/components/schemas/GenericUserName"}
        userKey: {"$ref": "#/components/schemas/GenericUserKey"}
        accountId: {"$ref": "#/components/schemas/GenericAccountId"}
        accountType:
          type: "string"
          enum:
            - "atlassian"
            - "app"
            - ""
          description: "The account type of the user, may return empty string if unavailable. App is if the user is a bot user created on behalf of an Atlassian app."
        email:
          type: "string"
          description: "The email address of the user. Depending on the user's privacy setting, this may return an empty string."
          nullable: true
        publicName:
          type: "string"
          description: "The public name or nickname of the user. Will always contain a value."
        profilePicture: {"$ref": "#/components/schemas/Icon"}
        displayName:
          type: "string"
          description: "The displays name of the user. Depending on the user's privacy setting, this may be the same as publicName."
          nullable: true
        timeZone:
          type: "string"
          description: "This displays user time zone. Depending on the user's privacy setting, this may return null."
          nullable: true
        externalCollaborator:
          type: "boolean"
          description: "This is deprecated. Use `isGuest` instead to find out whether the user is a guest user."
        isExternalCollaborator:
          type: "boolean"
          description: "This is deprecated. Use `isGuest` instead to find out whether the user is a guest user."
        isGuest:
          type: "boolean"
          description: "Whether the user is a guest user"
        details: {"$ref": "#/components/schemas/UserDetails"}
        personalSpace: {"$ref": "#/components/schemas/Space"}
        key:
          type: "string"
        alias:
          type: "string"
        name:
          type: "string"
        icon: {"$ref": "#/components/schemas/Icon"}
        description:
          $ref: '#/components/schemas/Description'
        homepage: {"$ref": "#/components/schemas/Content"}
        permissions:
          type: "array"
          items: {"$ref": "#/components/schemas/SpacePermission"}
        settings: {"$ref": "#/components/schemas/SpaceSettings"}
        theme: {"$ref": "#/components/schemas/Theme"}
        lookAndFeel: {"$ref": "#/components/schemas/LookAndFeel"}
      required:
        - status
        - type
        - type
        - _expandable
        - _links
        - key
        - name
        - status
        - type
      additionalProperties: true
      description: |-
        Base object for all content types.
        Representation of a blogpost (content)
      nullable: true
      title: Target
    Expandableb48ed1:
      type: "object"
      properties:
        "relationData":
          type: "string"
        "source":
          type: "string"
        "target":
          type: "string"
      title: Expandableb48ed1
    Layer:
      type: "object"
      properties:
        "width":
          type: "string"
        "height":
          type: "string"
      nullable: true
      title: Layer
    Description:
      type: "object"
      properties:
        "plain": {"$ref": "#/components/schemas/SpaceDescription"}
        "view": {"$ref": "#/components/schemas/SpaceDescription"}
        "_expandable":
          $ref: '#/components/schemas/Expandable5ee9fc'
      title: Description
    Metadata5bfc61:
      type: "object"
      properties:
        "labels": {"$ref": "#/components/schemas/LabelArray"}
        "_expandable":
          $ref: '#/components/schemas/Expandablea2c799'
      title: Metadata5bfc61
    History:
      type: "object"
      properties:
        "createdDate":
          type: "string"
          format: "date-time"
        "createdBy": {"$ref": "#/components/schemas/User"}
      required:
        - "createdDate"
      title: History
    Expandable52d461:
      type: "object"
      properties:
        "settings":
          type: "string"
        "metadata":
          type: "string"
        "operations":
          type: "string"
        "lookAndFeel":
          type: "string"
        "permissions":
          type: "string"
        "icon":
          type: "string"
        "description":
          type: "string"
        "theme":
          type: "string"
        "history":
          type: "string"
        "homepage":
          type: "string"
        "identifiers":
          type: "string"
      title: Expandable52d461
    Homepage:
      type: "object"
      description: "The updated homepage for this space"
      nullable: true
      title: Homepage
    EmbeddedContentItem:
      type: "object"
      title: EmbeddedContentItem
    Plain:
      type: "object"
      properties:
        "value":
          type: "string"
          description: "The space description."
        "representation":
          type: "string"
          description: "Set to 'plain'."
      additionalProperties: true
      title: Plain
    Subjects:
      type: "object"
      properties:
        "user":
          $ref: '#/components/schemas/Userb34fc6'
        "group":
          $ref: '#/components/schemas/Group3997ca'
        "_expandable":
          $ref: '#/components/schemas/Expandableac2380'
      description: "The users and/or groups that the permission applies to."
      title: Subjects
    Subjects96eb79:
      type: "object"
      properties:
        "user":
          $ref: '#/components/schemas/User19953c'
        "group":
          $ref: '#/components/schemas/Groupcf0e10'
      description: "The users and/or groups that the permission applies to."
      title: Subjects96eb79
    Expandable3adce7:
      type: "object"
      properties:
        "version":
          type: "string"
        "space":
          type: "string"
      title: Expandable3adce7
    Space505a67:
      type: "object"
      properties:
        "key":
          type: "string"
          description: "The key of the space"
      additionalProperties: true
      title: Space505a67
    Editor:
      type: "object"
      properties:
        "page":
          type: "string"
        "blogpost":
          type: "string"
        "default":
          type: "string"
      required:
        - "page"
        - "blogpost"
        - "default"
      title: Editor
    Uris:
      type: "object"
      properties:
        "all":
          oneOf:
            - type: "array"
              items:
                type: "string"
            - type: "string"
        "css":
          oneOf:
            - type: "array"
              items:
                type: "string"
            - type: "string"
        "js":
          oneOf:
            - type: "array"
              items:
                type: "string"
            - type: "string"
      title: Uris
    Tags:
      type: "object"
      properties:
        "all":
          type: "string"
        "css":
          type: "string"
        "data":
          type: "string"
        "js":
          type: "string"
      title: Tags
    Expandable82ef96:
      type: "object"
      additionalProperties: true
      title: Expandable82ef96
    Expandabled0ed16:
      type: "object"
      properties:
        "operations":
          type: "string"
      title: Expandabled0ed16
    Business:
      type: "object"
      properties:
        "position":
          type: "string"
          description: "This property has been deprecated due to privacy changes. There is no replacement. See the\n[migration guide](https://developer.atlassian.com/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/)\nfor details."
        "department":
          type: "string"
          description: "This property has been deprecated due to privacy changes. There is no replacement. See the\n[migration guide](https://developer.atlassian.com/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/)\nfor details."
        "location":
          type: "string"
          description: "This property has been deprecated due to privacy changes. There is no replacement. See the\n[migration guide](https://developer.atlassian.com/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/)\nfor details."
      title: Business
    Personal:
      type: "object"
      properties:
        "phone":
          type: "string"
          description: "This property has been deprecated due to privacy changes. There is no replacement. See the\n[migration guide](https://developer.atlassian.com/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/)\nfor details."
        "im":
          type: "string"
          description: "This property has been deprecated due to privacy changes. There is no replacement. See the\n[migration guide](https://developer.atlassian.com/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/)\nfor details."
        "website":
          type: "string"
          description: "This property has been deprecated due to privacy changes. There is no replacement. See the\n[migration guide](https://developer.atlassian.com/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/)\nfor details."
        "email":
          type: "string"
          description: "This property has been deprecated due to privacy changes. Use the `User.email` property instead. See the\n[migration guide](https://developer.atlassian.com/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/)\nfor details."
      title: Personal
    Value:
      type: "object"
      additionalProperties: true
      description: "The value of the content property."
      title: Value
    ResultsItem:
      type: "object"
      properties:
        "key":
          type: "string"
      title: ResultsItem
    Value96656d:
      title: Value96656d
      type: "object"
      additionalProperties: true
      description: "The value of the user property."
    Expandablefdb576:
      title: Expandablefdb576
      type: "object"
      properties:
        "content":
          type: "string"
        "collaborators":
          type: "string"
    Params:
      title: Params
      type: "object"
      properties:
        "versionNumber":
          type: "integer"
          format: "int32"
          description: "The version number to be restored."
        "message":
          type: "string"
          description: "Description for the version."
        "restoreTitle":
          type: "boolean"
          description: "If true, the content title will be the same as the title from the version restored. Defaults to `false`."
          default: false
      required:
        - "message"
        - "versionNumber"
    PersonalSpace:
      title: PersonalSpace
      type: "object"
      nullable: true
    Expandablef62071:
      title: Expandablef62071
      type: "object"
      properties:
        "uris":
          oneOf:
            - type: "string"
            - type: "object"
              additionalProperties: true
      additionalProperties: true
    Uris867f9b:
      title: Uris867f9b
      type: "object"
      properties:
        "all":
          oneOf:
            - type: "array"
              items:
                type: "string"
            - type: "string"
        "css":
          oneOf:
            - type: "array"
              items:
                type: "string"
            - type: "string"
        "js":
          oneOf:
            - type: "array"
              items:
                type: "string"
            - type: "string"
        "_expandable":
          $ref: '#/components/schemas/Expandable590db0'
    Tags5c2963:
      title: Tags5c2963
      type: "object"
      properties:
        "all":
          type: "string"
        "css":
          type: "string"
        "data":
          type: "string"
        "js":
          type: "string"
        "_expandable":
          $ref: '#/components/schemas/Expandable82ef96'
    Operation:
      title: Operation
      type: "object"
      properties:
        "key":
          type: "string"
          enum:
            - "administer"
            - "archive"
            - "copy"
            - "create"
            - "delete"
            - "export"
            - "move"
            - "purge"
            - "purge_version"
            - "read"
            - "restore"
            - "restrict_content"
            - "update"
            - "use"
        "target":
          type: "string"
          enum:
            - "page"
            - "blogpost"
            - "comment"
            - "attachment"
            - "space"
          description: "The space or content type that the operation applies to."
      required:
        - "key"
        - "target"
    OperationsItem:
      title: OperationsItem
      type: "object"
      properties:
        "key":
          type: "string"
          enum:
            - "read"
            - "create"
            - "delete"
          description: "The operation type"
        "target":
          type: "string"
          description: "The custom content type"
        "access":
          type: "boolean"
          description: "Grant or restrict access"
      required:
        - "access"
        - "key"
        - "target"
    PagesItem:
      title: PagesItem
      type: "object"
      properties:
        "id":
          type: "integer"
          format: "int64"
          description: "The `id` of the page to be archived."
      required:
        - "id"
    Operations:
      title: Operations
      type: "object"
      nullable: true
    Operationsd3ea1b:
      title: Operationsd3ea1b
      type: "object"
      description: "Always defaults to null."
    Expandable7de7ff:
      title: Expandable7de7ff
      type: "object"
      properties:
        "editor":
          type: "string"
        "view":
          type: "string"
        "export_view":
          type: "string"
        "styled_view":
          type: "string"
        "storage":
          type: "string"
        "editor2":
          type: "string"
        "anonymous_export_view":
          type: "string"
        "atlas_doc_format":
          type: "string"
        "wiki":
          type: "string"
        "dynamic":
          type: "string"
        "raw":
          type: "string"
    Expandable25a645:
      title: Expandable25a645
      type: "object"
      properties:
        "read":
          type: "string"
        "update":
          type: "string"
    Description98b3c6:
      title: Description98b3c6
      type: "object"
      properties:
        "plain": {"$ref": "#/components/schemas/SpaceDescription"}
        "view": {"$ref": "#/components/schemas/SpaceDescription"}
        "_expandable":
          $ref: '#/components/schemas/Expandable5ee9fc'
      nullable: true
    Metadataea133f:
      title: Metadataea133f
      type: "object"
      properties:
        "labels": {"$ref": "#/components/schemas/LabelArray"}
        "_expandable":
          $ref: '#/components/schemas/Expandablea2c799'
      nullable: true
    Linksde82bc:
      title: Linksde82bc
      type: "object"
      additionalProperties: true
      nullable: true
    Favourited:
      title: Favourited
      type: "object"
      properties:
        "isFavourite":
          type: "boolean"
        "favouritedDate":
          type: "string"
          format: "date-time"
    Lastmodified:
      title: Lastmodified
      type: "object"
      properties:
        "version": {"$ref": "#/components/schemas/Version"}
        "friendlyLastModified":
          type: "string"
    Lastcontributed:
      title: Lastcontributed
      type: "object"
      properties:
        "status":
          type: "string"
        "when":
          type: "string"
          format: "date-time"
    Viewed:
      title: Viewed
      type: "object"
      properties:
        "lastSeen":
          type: "string"
          format: "date-time"
        "friendlyLastSeen":
          type: "string"
    Scheduled:
      title: Scheduled
      type: "object"
    Expandable6a8e6d:
      title: Expandable6a8e6d
      type: "object"
      properties:
        "favourited":
          type: "string"
        "lastmodified":
          type: "string"
        "lastcontributed":
          type: "string"
        "viewed":
          type: "string"
        "scheduled":
          type: "string"
    Expandableac2380:
      title: Expandableac2380
      type: "object"
      properties:
        "user":
          type: "string"
        "group":
          type: "string"
    GroupItem:
      title: GroupItem
      type: "object"
      properties:
        "type":
          type: "string"
          enum:
            - "group"
          description: "Set to 'group'."
        "id":
          type: "string"
          description: "The id of the group."
      required:
        - "type"
      description: "A group that the restriction will be applied to."
    UserItem:
      title: UserItem
      type: "object"
      properties:
        "type":
          type: "string"
          enum:
            - "known"
            - "unknown"
            - "anonymous"
            - "user"
          description: "Set to 'known'."
        "username": {"$ref": "#/components/schemas/GenericUserName"}
        "userKey": {"$ref": "#/components/schemas/GenericUserKey"}
        "accountId": {"$ref": "#/components/schemas/GenericAccountId"}
      required:
        - "accountId"
        - "type"
      description: "A user that the restriction will be applied to. Either the `username`\nor the `userKey` must be specified to identify the user."
    GroupIteme9d8fc:
      title: GroupIteme9d8fc
      type: "object"
      properties:
        "type":
          type: "string"
          enum:
            - "group"
          description: "Set to 'group'."
        "name":
          type: "string"
          description: "The name of the group."
      required:
        - "name"
        - "type"
      description: "A group that the restriction will be applied to."
    ArgsItem:
      title: ArgsItem
      type: "object"
    Bodye84b79:
      title: Bodye84b79
      type: "object"
      properties:
        "view": {"$ref": "#/components/schemas/ContentBody"}
        "export_view": {"$ref": "#/components/schemas/ContentBody"}
        "styled_view": {"$ref": "#/components/schemas/ContentBody"}
        "storage": {"$ref": "#/components/schemas/ContentBody"}
        "wiki": {"$ref": "#/components/schemas/ContentBody"}
        "editor": {"$ref": "#/components/schemas/ContentBody"}
        "editor2": {"$ref": "#/components/schemas/ContentBody"}
        "anonymous_export_view": {"$ref": "#/components/schemas/ContentBody"}
        "atlas_doc_format": {"$ref": "#/components/schemas/ContentBody"}
        "dynamic": {"$ref": "#/components/schemas/ContentBody"}
        "raw": {"$ref": "#/components/schemas/ContentBody"}
        "_expandable":
          $ref: '#/components/schemas/Expandable7de7ff'
    Restrictionsbc3afc:
      title: Restrictionsbc3afc
      type: "object"
      properties:
        "read": {"$ref": "#/components/schemas/ContentRestriction"}
        "update": {"$ref": "#/components/schemas/ContentRestriction"}
        "_expandable":
          $ref: '#/components/schemas/Expandable25a645'
        "_links": {"$ref": "#/components/schemas/GenericLinks"}
    Expandable5ee9fc:
      title: Expandable5ee9fc
      type: "object"
      properties:
        "view":
          type: "string"
        "plain":
          type: "string"
    Expandablea2c799:
      title: Expandablea2c799
      type: "object"
    Userb34fc6:
      title: Userb34fc6
      type: "object"
      properties:
        "results":
          type: "array"
          items: {"$ref": "#/components/schemas/User"}
        "size":
          type: "integer"
          format: "int32"
        "start":
          type: "integer"
          format: "int32"
        "limit":
          type: "integer"
          format: "int32"
      required:
        - "results"
        - "size"
    Group3997ca:
      title: Group3997ca
      type: "object"
      properties:
        "results":
          type: "array"
          items: {"$ref": "#/components/schemas/Group"}
        "size":
          type: "integer"
          format: "int32"
        "start":
          type: "integer"
          format: "int32"
        "limit":
          type: "integer"
          format: "int32"
      required:
        - "results"
        - "size"
    User19953c:
      title: User19953c
      type: "object"
      properties:
        "results":
          type: "array"
          items: {"$ref": "#/components/schemas/User"}
        "size":
          type: "integer"
          format: "int32"
      required:
        - "results"
        - "size"
    Groupcf0e10:
      title: Groupcf0e10
      type: "object"
      properties:
        "results":
          type: "array"
          items: {"$ref": "#/components/schemas/GroupCreate"}
        "size":
          type: "integer"
          format: "int32"
      required:
        - "results"
        - "size"
    Expandable590db0:
      title: Expandable590db0
      type: "object"
      properties:
        "css":
          oneOf:
            - type: "array"
              items:
                type: "string"
            - type: "string"
        "js":
          oneOf:
            - type: "array"
              items:
                type: "string"
            - type: "string"
      additionalProperties: true
  parameters:
    "contentExpand":
      name: "expand"
      in: "query"
      description: "A multi-value parameter indicating which properties of the content to expand.\n\n- `childTypes.all` returns whether the content has attachments, comments, or child pages/whiteboards.\nUse this if you only need to check whether the content has children of a particular type.\n- `childTypes.attachment` returns whether the content has attachments.\n- `childTypes.comment` returns whether the content has comments.\n- `childTypes.page` returns whether the content has child pages.\n- `childTypes.whiteboard` returns whether the content has child whiteboards.\n- `childTypes.database` returns whether the content has child databases.\n- `childTypes.embed` returns whether the content has child embeds (smartlinks).\n- `childTypes.folder` returns whether the content has child folders.\n- `container` returns the space that the content is in. This is the same as the information\nreturned by [Get space](#api-space-spaceKey-get).\n- `metadata.currentuser` returns information about the current user in relation to the content,\nincluding when they last viewed it, modified it, contributed to it, or added it as a favorite.\n- `metadata.properties` returns content properties that have been set via the Confluence REST API.\n- `metadata.labels` returns the labels that have been added to the content.\n- `metadata.frontend` this property is only used by Atlassian.\n- `operations` returns the operations for the content, which are used when setting permissions.\n- `children.page` returns pages that are descendants at the level immediately below the content.\n- `children.whiteboard` returns whiteboards that are descendants at the level immediately below the content.\n- `children.database` returns databases that are descendants at the level immediately below the content.\n- `children.embed` returns embeds (smartlinks) that are descendants at the level immediately below the content.\n- `children.folder` returns folders that are descendants at the level immediately below the content.\n- `children.attachment` returns all attachments for the content.\n- `children.comment` returns all comments on the content.\n- `restrictions.read.restrictions.user` returns the users that have permission to read the content.\n- `restrictions.read.restrictions.group` returns the groups that have permission to read the content. Note that\nthis may return deleted groups, because deleting a group doesn't remove associated restrictions.\n- `restrictions.update.restrictions.user` returns the users that have permission to update the content.\n- `restrictions.update.restrictions.group` returns the groups that have permission to update the content. Note that\nthis may return deleted groups because deleting a group doesn't remove associated restrictions.\n- `history` returns the history of the content, including the date it was created.\n- `history.lastUpdated` returns information about the most recent update of the content, including\nwho updated it and when it was updated.\n- `history.previousVersion` returns information about the update prior to the current content update.\n- `history.contributors` returns all of the users who have contributed to the content.\n- `history.nextVersion` returns information about the update after to the current content update.\n- `ancestors` returns the parent content, if the content is a page or whiteboard.\n- `body` returns the body of the content in different formats, including the editor format,\nview format, and export format.\n- `body.storage` returns the body of content in storage format.\n- `body.view` returns the body of content in view format.\n- `version` returns information about the most recent update of the content, including who updated it\nand when it was updated.\n- `descendants.page` returns pages that are descendants at any level below the content.\n- `descendants.whiteboard` returns whiteboards that are descendants at any level below the content.\n- `descendants.database` returns databases that are descendants at any level below the content.\n- `descendants.embed` returns embeds (smartlinks) that are descendants at any level below the content.\n- `descendants.folder` returns folders that are descendants at any level below the content.\n- `descendants.attachment` returns all attachments for the content, same as `children.attachment`.\n- `descendants.comment` returns all comments on the content, same as `children.comment`.\n- `space` returns the space that the content is in. This is the same as the information returned by\n[Get space](#api-space-spaceKey-get).\n\nIn addition, the following comment-specific expansions can be used:\n- `extensions.inlineProperties` returns inline comment-specific properties.\n- `extensions.resolution` returns the resolution status of each comment."
      style: "form"
      explode: false
      schema:
        type: "array"
        items:
          type: "string"
    "bodyConversionExpand":
      name: "expand"
      in: "query"
      description: "A multi-value parameter indicating which properties of the content to expand and populate. Expands are dependent on the\n`to` conversion format and may be irrelevant for certain conversions (e.g. `macroRenderedOutput` is redundant when\nconverting to `view` format). \n\nIf rendering to `view` format, and the body content being converted includes arbitrary nested content (such as macros); then it is \nnecessary to include webresource expands in the request. Webresources for content body are the batched JS and CSS dependencies for\nany nested dynamic content (i.e. macros).\n\n- `embeddedContent` returns metadata for nested content (e.g. page included using page include macro)\n- `mediaToken` returns JWT token for retrieving attachment data from Media API\n- `macroRenderedOutput` additionally converts body to view format\n- `webresource.superbatch.uris.js` returns all common JS dependencies as static URLs\n- `webresource.superbatch.uris.css` returns all common CSS dependencies as static URLs\n- `webresource.superbatch.uris.all` returns all common dependencies as static URLs\n- `webresource.superbatch.tags.all` returns all common JS dependencies as html `<script>` tags\n- `webresource.superbatch.tags.css` returns all common CSS dependencies as html `<style>` tags\n- `webresource.superbatch.tags.js` returns all common dependencies as html `<script>` and `<style>` tags\n- `webresource.uris.js` returns JS dependencies specific to conversion\n- `webresource.uris.css` returns CSS dependencies specific to conversion\n- `webresource.uris.all` returns all dependencies specific to conversion     \n- `webresource.tags.all` returns common JS dependencies as html `<script>` tags\n- `webresource.tags.css` returns common CSS dependencies as html `<style>` tags\n- `webresource.tags.js` returns common dependencies as html `<script>` and `<style>` tags"
      style: "form"
      explode: false
      schema:
        type: "array"
        items:
          type: "string"
    "contentExpandWithSubExpandLimit":
      name: "expand"
      in: "query"
      description: "A multi-value parameter indicating which properties of the content to expand.\nMaximum sub-expansions allowed is `8`.\n\n- `childTypes.all` returns whether the content has attachments, comments, or child pages/whiteboards.\nUse this if you only need to check whether the content has children of a particular type.\n- `childTypes.attachment` returns whether the content has attachments.\n- `childTypes.comment` returns whether the content has comments.\n- `childTypes.page` returns whether the content has child pages.\n- `childTypes.whiteboard` returns whether the content has child whiteboards.\n- `childTypes.database` returns whether the content has child databases.\n- `childTypes.embed` returns whether the content has child embeds (smartlinks).\n- `childTypes.folder` returns whether the content has child folder.\n- `container` returns the space that the content is in. This is the same as the information\nreturned by [Get space](#api-space-spaceKey-get).\n- `metadata.currentuser` returns information about the current user in relation to the content,\nincluding when they last viewed it, modified it, contributed to it, or added it as a favorite.\n- `metadata.properties` returns content properties that have been set via the Confluence REST API.\n- `metadata.labels` returns the labels that have been added to the content.\n- `metadata.frontend` this property is only used by Atlassian.\n- `operations` returns the operations for the content, which are used when setting permissions.\n- `children.page` returns pages that are descendants at the level immediately below the content.\n- `children.whiteboard` returns whiteboards that are descendants at the level immediately below the content.\n- `children.database` returns databases that are descendants at the level immediately below the content.\n- `children.embed` returns embeds (smartlinks) that are descendants at the level immediately below the content.\n- `children.folder` returns folders that are descendants at the level immediately below the content.\n- `children.attachment` returns all attachments for the content.\n- `children.comment` returns all comments on the content.\n- `restrictions.read.restrictions.user` returns the users that have permission to read the content.\n- `restrictions.read.restrictions.group` returns the groups that have permission to read the content. Note that\nthis may return deleted groups, because deleting a group doesn't remove associated restrictions.\n- `restrictions.update.restrictions.user` returns the users that have permission to update the content.\n- `restrictions.update.restrictions.group` returns the groups that have permission to update the content. Note that\nthis may return deleted groups because deleting a group doesn't remove associated restrictions.\n- `history` returns the history of the content, including the date it was created.\n- `history.lastUpdated` returns information about the most recent update of the content, including\nwho updated it and when it was updated.\n- `history.previousVersion` returns information about the update prior to the current content update.\n- `history.contributors` returns all of the users who have contributed to the content.\n- `history.nextVersion` returns information about the update after to the current content update.\n- `ancestors` returns the parent content, if the content is a page or whiteboard.\n- `body` returns the body of the content in different formats, including the editor format,\nview format, and export format.\n- `body.storage` returns the body of content in storage format.\n- `body.view` returns the body of content in view format.\n- `version` returns information about the most recent update of the content, including who updated it\nand when it was updated.\n- `descendants.page` returns pages that are descendants at any level below the content.\n- `descendants.whiteboard` returns whiteboards that are descendants at any level below the content.\n- `descendants.database` returns databases that are descendants at any level below the content.\n- `descendants.embed` returns embeds (smartlinks) that are descendants at any level below the content.\n- `descendants.folder` returns folders that are descendants at any level below the content.\n- `descendants.attachment` returns all attachments for the content, same as `children.attachment`.\n- `descendants.comment` returns all comments on the content, same as `children.comment`.\n- `space` returns the space that the content is in. This is the same as the information returned by\n[Get space](#api-space-spaceKey-get).\n\nIn addition, the following comment-specific expansions can be used:\n- `extensions.inlineProperties` returns inline comment-specific properties.\n- `extensions.resolution` returns the resolution status of each comment."
      style: "form"
      explode: false
      schema:
        type: "array"
        items:
          type: "string"
    "templateExpand":
      name: "expand"
      in: "query"
      description: "A multi-value parameter indicating which properties of the template\nto expand.\n\n- `body` or `body.storage` returns the content of the template in storage format."
      style: "form"
      explode: false
      schema:
        type: "array"
        items:
          type: "string"
          enum:
            - "body"
            - "body.storage"
    "spaceExpand":
      name: "expand"
      in: "query"
      description: "A multi-value parameter indicating which properties of the spaces to\nexpand, where:\n\n  - `settings` returns the settings for the space, similar to [Get space settings](#api-space-spaceKey-settings-get).\n  - `metadata` returns the space metadata.\n  - `metadata.labels` returns the space labels, which are used to categorize the space.\n  - `operations` returns the operations for a space, which are used when setting permissions.\n  - `lookAndFeel` returns information about the look and feel of the space, including the color scheme.\n  - `permissions` returns the permissions for the space. Note that this may return permissions for deleted groups,\n  because deleting a group doesn't remove associated space permissions.\n  - `icon` returns information about space icon.\n  - `description` returns the description of the space.\n  - `description.plain` returns the description of the space, the plain format.\n  - `description.view` returns the description of the space, the view format.\n  - `theme` returns information about the space theme.\n  - `homepage` returns information about the space homepage.\n  - `history` returns information about the history of the space."
      style: "form"
      explode: false
      schema:
        type: "array"
        items:
          type: "string"
          enum:
            - "settings"
            - "metadata"
            - "metadata.labels"
            - "operations"
            - "lookAndFeel"
            - "permissions"
            - "icon"
            - "description"
            - "description.plain"
            - "description.view"
            - "theme"
            - "homepage"
            - "history"
    "userLookupKey":
      name: "key"
      in: "query"
      description: "This parameter is no longer available and will be removed from the documentation soon.\nUse `accountId` instead.\nSee the [deprecation notice](/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/) for details."
      deprecated: true
      schema:
        type: "string"
    "userLookupUsername":
      name: "username"
      in: "query"
      description: "This parameter is no longer available and will be removed from the documentation soon.\nUse `accountId` instead.\nSee the [deprecation notice](/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/) for details."
      deprecated: true
      schema:
        type: "string"
    "userLookupAccountId":
      name: "accountId"
      in: "query"
      description: "The account ID of the user. The accountId uniquely identifies the user across all Atlassian products.\nFor example, `384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192`."
      schema:
        type: "string"
  securitySchemes:
    "basicAuth":
      type: "http"
      description: "You can access this resource via basic auth."
      scheme: "basic"
    "oAuthDefinitions":
      type: "oauth2"
      description: "This API uses OAuth 2 with the authorizationCode grant flow."
      flows:
        authorizationCode:
          authorizationUrl: "https://auth.atlassian.com/authorize"
          tokenUrl: "https://auth.atlassian.com/oauth/token"
          scopes:
            "read:confluence-content.all": "Read all content, including content body (expansions permitted). Note, APIs using this scope may also return data allowed by read:confluence-space.summary. However, this scope is not a substitute for read:confluence-space.summary."
            "read:confluence-content.permission": "Read content permissions."
            "read:confluence-content.summary": "Read a summary of the content, which is the content without expansions. Note, APIs using this scope may also return data allowed by read:confluence-space.summary. However, this scope is not a substitute for read:confluence-space.summary."
            "write:confluence-content": "Permits the creation of pages, blogs, comments and questions."
            "read:confluence-space.summary": "Read a summary of space information without expansions."
            "write:confluence-space": "Create, update and delete space information."
            "write:confluence-file": "Upload attachments."
            "read:confluence-props": "Read content properties."
            "write:confluence-props": "Write content properties."
            "search:confluence": "Search Confluence. Note, APIs using this scope may also return data allowed by read:confluence-space.summary and read:confluence-content.summary. However, this scope is not a substitute for read:confluence-space.summary or read:confluence-content.summary."
            "manage:confluence-configuration": "Manage global settings."
            "read:confluence-groups": "Read user groups."
            "write:confluence-groups": "Create, remove and update user groups."
            "read:confluence-user": "Read users."
            "readonly:content.attachment:confluence": "Download attachments of a Confluence page or blogpost that you have access to."
            "read:content:confluence": "View content."
            "read:content-details:confluence": "View content details."
            "write:content:confluence": "Create and update content."
            "delete:content:confluence": "Delete content."
            "read:space-details:confluence": "View space details."
            "read:analytics.content:confluence": "View analytics for content."
            "read:audit-log:confluence": "View audit records."
            "write:audit-log:confluence": "Create audit records."
            "read:configuration:confluence": "View Confluence settings."
            "write:configuration:confluence": "Update Confluence settings."
            "read:page:confluence": "View pages."
            "write:page:confluence": "Create and update pages."
            "delete:page:confluence": "Delete pages."
            "read:blogpost:confluence": "View blogposts."
            "write:blogpost:confluence": "Create and update blogposts."
            "delete:blogpost:confluence": "Delete blogposts."
            "read:whiteboard:confluence": "View whiteboards."
            "write:whiteboard:confluence": "Create and update whiteboards."
            "delete:whiteboard:confluence": "Delete whiteboards."
            "read:custom-content:confluence": "View custom content."
            "write:custom-content:confluence": "Create and update custom content."
            "delete:custom-content:confluence": "Delete custom content."
            "read:attachment:confluence": "View and download content attachments."
            "write:attachment:confluence": "Create and update attachments."
            "delete:attachment:confluence": "Delete attachments."
            "read:comment:confluence": "View comments."
            "write:comment:confluence": "Create and update comments."
            "delete:comment:confluence": "Delete comments."
            "read:template:confluence": "View content templates."
            "write:template:confluence": "Create, update and delete content templates."
            "read:label:confluence": "View labels."
            "write:label:confluence": "Add and remove labels."
            "read:content.permission:confluence": "Check content permissions."
            "read:content.property:confluence": "View content properties."
            "write:content.property:confluence": "Create, update and delete content properties."
            "read:content.restriction:confluence": "View content restrictions."
            "write:content.restriction:confluence": "Update content restrictions."
            "read:content.metadata:confluence": "View content summaries."
            "read:watcher:confluence": "View content watchers."
            "write:watcher:confluence": "Add and remove content watchers."
            "read:group:confluence": "View groups."
            "write:group:confluence": "Create and delete groups."
            "read:inlinetask:confluence": "View tasks."
            "write:inlinetask:confluence": "Update tasks."
            "read:relation:confluence": "View entity relationships."
            "write:relation:confluence": "Create and update entity relationships."
            "read:space:confluence": "View spaces."
            "write:space:confluence": "Create and update spaces."
            "delete:space:confluence": "Delete spaces."
            "read:space.permission:confluence": "View space permissions."
            "write:space.permission:confluence": "Update space permissions."
            "read:space.property:confluence": "View space properties."
            "write:space.property:confluence": "Create, update and delete space properties."
            "read:user.property:confluence": "View user properties."
            "write:user.property:confluence": "Create, update and delete user properties."
            "read:space.setting:confluence": "View space settings."
            "write:space.setting:confluence": "Update space settings."
            "read:user:confluence": "View user details."
            "moderate:core-content:confluence": "Moderate core contents"
            "moderate:comment:confluence": "Moderate comments"
            "read:email-address:confluence": "View email addresses of all users regardless of the user’s profile visibility settings."
tags:
  - name: "Audit"
  - name: "Analytics"
  - name: "Content"
  - name: "Content - attachments"
  - name: "Content body"
  - name: "Content - children and descendants"
  - name: "Content - macro body"
  - name: "Content comments"
  - name: "Content labels"
  - name: "Content permissions"
  - name: "Content properties"
  - name: "Content restrictions"
  - name: "Content states"
  - name: "Content versions"
  - name: "Content watches"
  - name: "Dynamic modules"
  - name: "Experimental"
    description: "APIs in this section can change without any prior deprecation notice."
  - name: "Group"
    description: "**[WARNING](https://support.atlassian.com/user-management/docs/create-and-update-groups/) The standard Atlassian group names are default names only and can be edited or deleted.** For example, an admin or Atlassian support could delete the default group jira-software-users or rename it to jsw-users at any point."
  - name: "Inline tasks"
  - name: "Label info"
  - name: "Long-running task"
  - name: "Relation"
  - name: "Search"
  - name: "Settings"
  - name: "Space"
  - name: "Space permissions"
  - name: "Space properties"
  - name: "Space settings"
  - name: "Template"
  - name: "Themes"
  - name: "Users"
  - name: "User properties"
externalDocs:
  description: "The online and complete version of the Confluence Cloud REST API docs."
  url: "https://developer.atlassian.com/cloud/confluence/rest/"
