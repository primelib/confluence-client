// WARNING: This file was generated by PrimeCodeGen. DO NOT EDIT.

package io.github.primelib.confluence4j.rest.v1.models;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.util.List;
import java.util.Map;
import java.util.function.Consumer;
import javax.annotation.processing.Generated;
import lombok.AccessLevel;
import lombok.EqualsAndHashCode;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import lombok.ToString;
import lombok.experimental.Accessors;
import org.jetbrains.annotations.ApiStatus;

/**
 * Target
 * <p>
 * Base object for all content types.
 * Representation of a blogpost (content)
 *
 */
@Getter
@Setter
@EqualsAndHashCode
@ToString
@Accessors(fluent = true, chain = true)
@NoArgsConstructor(access = AccessLevel.PROTECTED, force = true)
@JsonTypeName("Target")
@JsonPropertyOrder({
    "id",
    "type",
    "status",
    "title",
    "space",
    "history",
    "version",
    "ancestors",
    "operations",
    "children",
    "childTypes",
    "descendants",
    "container",
    "body",
    "restrictions",
    "metadata",
    "macroRenderedOutput",
    "extensions",
    "Expandable",
    "Links",
    "ari",
    "base64EncodedAri",
    "username",
    "userKey",
    "accountId",
    "accountType",
    "email",
    "publicName",
    "profilePicture",
    "displayName",
    "timeZone",
    "externalCollaborator",
    "isExternalCollaborator",
    "isGuest",
    "details",
    "personalSpace",
    "key",
    "alias",
    "name",
    "icon",
    "description",
    "homepage",
    "permissions",
    "settings",
    "theme",
    "lookAndFeel"
})
@Generated(value = "io.github.primelib.primecodegen")
public class Target {

    @JsonProperty("id")
    protected Long id;

    @JsonProperty("type")
    protected String type;

    @JsonProperty("status")
    protected String status;

    @JsonProperty("title")
    protected String title;

    @JsonProperty("space")
    protected Space space;

    @JsonProperty("history")
    protected History history;

    @JsonProperty("version")
    protected Version version;

    @JsonProperty("ancestors")
    protected List<Content> ancestors;

    @JsonProperty("operations")
    protected List<OperationCheckResult> operations;

    @JsonProperty("children")
    protected Map<String, Object> children;

    /**
     * Shows whether a piece of content has attachments, comments, or child pages/whiteboards.
Note, this doesn't actually contain the child objects.
     */
    @JsonProperty("childTypes")
    protected Map<String, Object> childTypes;

    @JsonProperty("descendants")
    protected Map<String, Object> descendants;

    /**
     * Container for content. This can be either a space (containing a page or blogpost)
or a page/blog post (containing an attachment or comment)
     */
    @JsonProperty("container")
    protected Map<String, Object> container;

    @JsonProperty("body")
    protected Bodye84B79 body;

    @JsonProperty("restrictions")
    protected Restrictionsbc3Afc restrictions;

    @JsonProperty("metadata")
    protected Metadata5Bfc61 metadata;

    @JsonProperty("macroRenderedOutput")
    protected Map<String, Object> macroRenderedOutput;

    @JsonProperty("extensions")
    protected Object extensions;

    @JsonProperty("_expandable")
    protected Expandable52D461 Expandable;

    @JsonProperty("_links")
    protected Map<String, Object> Links;

    @JsonProperty("ari")
    protected String ari;

    @JsonProperty("base64EncodedAri")
    protected String base64EncodedAri;

    /**
     * This property is no longer available and will be removed from the documentation soon.
Use `accountId` instead.
See the [deprecation notice](/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/) for details.
     */
    @JsonProperty("username")
    protected String username;

    /**
     * This property is no longer available and will be removed from the documentation soon.
Use `accountId` instead.
See the [deprecation notice](/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/) for details.
     */
    @JsonProperty("userKey")
    protected String userKey;

    /**
     * The account ID of the user, which uniquely identifies the user across all Atlassian products.
For example, `384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192`.
     */
    @JsonProperty("accountId")
    protected String accountId;

    /**
     * The account type of the user, may return empty string if unavailable. App is if the user is a bot user created on behalf of an Atlassian app.
     */
    @JsonProperty("accountType")
    protected String accountType;

    /**
     * The email address of the user. Depending on the user's privacy setting, this may return an empty string.
     */
    @JsonProperty("email")
    protected String email;

    /**
     * The public name or nickname of the user. Will always contain a value.
     */
    @JsonProperty("publicName")
    protected String publicName;

    /**
     * This object represents an icon. If used as a profilePicture, this may be returned as null, depending on the user's privacy setting.
     */
    @JsonProperty("profilePicture")
    protected Icon profilePicture;

    /**
     * The displays name of the user. Depending on the user's privacy setting, this may be the same as publicName.
     */
    @JsonProperty("displayName")
    protected String displayName;

    /**
     * This displays user time zone. Depending on the user's privacy setting, this may return null.
     */
    @JsonProperty("timeZone")
    protected String timeZone;

    /**
     * This is deprecated. Use `isGuest` instead to find out whether the user is a guest user.
     */
    @JsonProperty("externalCollaborator")
    protected Boolean externalCollaborator;

    /**
     * This is deprecated. Use `isGuest` instead to find out whether the user is a guest user.
     */
    @JsonProperty("isExternalCollaborator")
    protected Boolean isExternalCollaborator;

    /**
     * Whether the user is a guest user
     */
    @JsonProperty("isGuest")
    protected Boolean isGuest;

    @JsonProperty("details")
    protected UserDetails details;

    @JsonProperty("personalSpace")
    protected Space personalSpace;

    @JsonProperty("key")
    protected String key;

    @JsonProperty("alias")
    protected String alias;

    @JsonProperty("name")
    protected String name;

    /**
     * This object represents an icon. If used as a profilePicture, this may be returned as null, depending on the user's privacy setting.
     */
    @JsonProperty("icon")
    protected Icon icon;

    @JsonProperty("description")
    protected Description description;

    /**
     * Base object for all content types.
Representation of a blogpost (content)
     */
    @JsonProperty("homepage")
    protected Content homepage;

    @JsonProperty("permissions")
    protected List<SpacePermission> permissions;

    @JsonProperty("settings")
    protected SpaceSettings settings;

    @JsonProperty("theme")
    protected Theme theme;

    /**
     * Look and feel settings returned after an update.
     */
    @JsonProperty("lookAndFeel")
    protected LookAndFeel lookAndFeel;

    /**
     * Constructs a validated instance of {@link Target}.
     *
     * @param spec the specification to process
     */
    public Target(Consumer<Target> spec) {
        super();
        spec.accept(this);
    }

    /**
     * Constructs a validated instance of {@link Target}.
     * <p>
     * NOTE: This constructor is not considered stable and may change if the model is updated. Consider using {@link #Target(Consumer)} instead.
     * @param id id
     * @param type type
     * @param status status
     * @param title title
     * @param space space
     * @param history history
     * @param version version
     * @param ancestors ancestors
     * @param operations operations
     * @param children children
     * @param childTypes Shows whether a piece of content has attachments, comments, or child pages/whiteboards.
Note, this doesn't actually contain the child objects.
     * @param descendants descendants
     * @param container Container for content. This can be either a space (containing a page or blogpost)
or a page/blog post (containing an attachment or comment)
     * @param body body
     * @param restrictions restrictions
     * @param metadata metadata
     * @param macroRenderedOutput macroRenderedOutput
     * @param extensions extensions
     * @param Expandable Expandable
     * @param Links Links
     * @param ari ari
     * @param base64EncodedAri base64EncodedAri
     * @param username This property is no longer available and will be removed from the documentation soon.
Use `accountId` instead.
See the [deprecation notice](/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/) for details.
     * @param userKey This property is no longer available and will be removed from the documentation soon.
Use `accountId` instead.
See the [deprecation notice](/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/) for details.
     * @param accountId The account ID of the user, which uniquely identifies the user across all Atlassian products.
For example, `384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192`.
     * @param accountType The account type of the user, may return empty string if unavailable. App is if the user is a bot user created on behalf of an Atlassian app.
     * @param email The email address of the user. Depending on the user's privacy setting, this may return an empty string.
     * @param publicName The public name or nickname of the user. Will always contain a value.
     * @param profilePicture This object represents an icon. If used as a profilePicture, this may be returned as null, depending on the user's privacy setting.
     * @param displayName The displays name of the user. Depending on the user's privacy setting, this may be the same as publicName.
     * @param timeZone This displays user time zone. Depending on the user's privacy setting, this may return null.
     * @param externalCollaborator This is deprecated. Use `isGuest` instead to find out whether the user is a guest user.
     * @param isExternalCollaborator This is deprecated. Use `isGuest` instead to find out whether the user is a guest user.
     * @param isGuest Whether the user is a guest user
     * @param details details
     * @param personalSpace personalSpace
     * @param key key
     * @param alias alias
     * @param name name
     * @param icon This object represents an icon. If used as a profilePicture, this may be returned as null, depending on the user's privacy setting.
     * @param description description
     * @param homepage Base object for all content types.
Representation of a blogpost (content)
     * @param permissions permissions
     * @param settings settings
     * @param theme theme
     * @param lookAndFeel Look and feel settings returned after an update.
     */
    @ApiStatus.Internal
    public Target(Long id, String type, String status, String title, Space space, History history, Version version, List<Content> ancestors, List<OperationCheckResult> operations, Map<String, Object> children, Map<String, Object> childTypes, Map<String, Object> descendants, Map<String, Object> container, Bodye84B79 body, Restrictionsbc3Afc restrictions, Metadata5Bfc61 metadata, Map<String, Object> macroRenderedOutput, Object extensions, Expandable52D461 Expandable, Map<String, Object> Links, String ari, String base64EncodedAri, String username, String userKey, String accountId, String accountType, String email, String publicName, Icon profilePicture, String displayName, String timeZone, Boolean externalCollaborator, Boolean isExternalCollaborator, Boolean isGuest, UserDetails details, Space personalSpace, String key, String alias, String name, Icon icon, Description description, Content homepage, List<SpacePermission> permissions, SpaceSettings settings, Theme theme, LookAndFeel lookAndFeel) {
        this.id = id;
        this.type = type;
        this.status = status;
        this.title = title;
        this.space = space;
        this.history = history;
        this.version = version;
        this.ancestors = ancestors;
        this.operations = operations;
        this.children = children;
        this.childTypes = childTypes;
        this.descendants = descendants;
        this.container = container;
        this.body = body;
        this.restrictions = restrictions;
        this.metadata = metadata;
        this.macroRenderedOutput = macroRenderedOutput;
        this.extensions = extensions;
        this.Expandable = Expandable;
        this.Links = Links;
        this.ari = ari;
        this.base64EncodedAri = base64EncodedAri;
        this.username = username;
        this.userKey = userKey;
        this.accountId = accountId;
        this.accountType = accountType;
        this.email = email;
        this.publicName = publicName;
        this.profilePicture = profilePicture;
        this.displayName = displayName;
        this.timeZone = timeZone;
        this.externalCollaborator = externalCollaborator;
        this.isExternalCollaborator = isExternalCollaborator;
        this.isGuest = isGuest;
        this.details = details;
        this.personalSpace = personalSpace;
        this.key = key;
        this.alias = alias;
        this.name = name;
        this.icon = icon;
        this.description = description;
        this.homepage = homepage;
        this.permissions = permissions;
        this.settings = settings;
        this.theme = theme;
        this.lookAndFeel = lookAndFeel;
    }
}
