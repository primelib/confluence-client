// WARNING: This file was generated by PrimeCodeGen. DO NOT EDIT.

package io.github.primelib.confluence4j.rest.v1.client;

import feign.Headers;
import feign.Param;
import feign.RequestLine;
import io.github.primelib.confluence4j.rest.v1.models.BlueprintTemplateArray;
import io.github.primelib.confluence4j.rest.v1.models.ContentTemplate;
import io.github.primelib.confluence4j.rest.v1.models.ContentTemplateArray;
import java.util.List;
import java.util.Map;
import javax.annotation.processing.Generated;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;

/**
 * ConfluenceRestClientTemplateApi
 */
@Generated(value = "io.github.primelib.primecodegen")
public interface ConfluenceRestClientTemplateApi {

    /**
    * PutTemplateV1
    * Update content template
    * Updates a content template. Note, blueprint templates cannot be updated
    * via the REST API.
    * 
    * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
    * 'Admin' permission for the space to update a space template or 'Confluence Administrator'
    * global permission to update a global template.
    *
    * @param payload The updated content template.
    */
    @RequestLine("PUT /wiki/rest/api/template")
    @Headers({
        "Content-Type: application/json",
        "Accept: application/json"
    })
    ContentTemplate PutTemplateV1(
            @NotNull Map<String, Object> payload
    );

    /**
    * PostTemplateV1
    * Create content template
    * Creates a new content template. Note, blueprint templates cannot be created via the REST API.
    * 
    * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
    * 'Admin' permission for the space to create a space template or 'Confluence Administrator'
    * global permission to create a global template.
    *
    * @param payload The content template to be created.
    * The content body must be in 'storage' format.
    */
    @RequestLine("POST /wiki/rest/api/template")
    @Headers({
        "Content-Type: application/json",
        "Accept: application/json"
    })
    ContentTemplate PostTemplateV1(
            @NotNull Map<String, Object> payload
    );

    /**
    * GetTemplateBlueprintV1
    * Get blueprint templates
    * Returns all templates provided by blueprints. Use this method to retrieve
    * all global blueprint templates or all blueprint templates in a space.
    * 
    * Note, all global blueprints are inherited by each space. Space blueprints
    * can be customised without affecting the global blueprints.
    * 
    * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
    * 'View' permission for the space to view blueprints for the space and permission
    * to access the Confluence site ('Can use' global permission) to view global blueprints.
    *
    * @param spaceKey The key of the space to be queried for templates. If the `spaceKey`
    * is not specified, global blueprint templates will be returned.
    * @param start The starting index of the returned templates.
    * @param limit The maximum number of templates to return per page.
    * Note, this may be restricted by fixed system limits.
    * @param expand A multi-value parameter indicating which properties of the template
    * to expand.
    * 
    * - `body` or `body.storage` returns the content of the template in storage format.
    */
    @RequestLine("GET /wiki/rest/api/template/blueprint?spaceKey={spaceKey}&start={start}&limit={limit}&expand={expand}")
    @Headers({
        "Accept: application/json"
    })
    BlueprintTemplateArray GetTemplateBlueprintV1(
            @Nullable @Param("spaceKey") String spaceKey,
            @Nullable @Param("start") Integer start,
            @Nullable @Param("limit") Integer limit,
            @Nullable @Param("expand") List<String> expand
    );

    /**
    * GetTemplatePageV1
    * Get content templates
    * Returns all content templates. Use this method to retrieve all global
    * content templates or all content templates in a space.
    * 
    * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
    * 'View' permission for the space to view space templates and permission to
    * access the Confluence site ('Can use' global permission) to view global templates.
    *
    * @param spaceKey The key of the space to be queried for templates. If the `spaceKey`
    * is not specified, global templates will be returned.
    * @param start The starting index of the returned templates.
    * @param limit The maximum number of templates to return per page.
    * Note, this may be restricted by fixed system limits.
    * @param expand A multi-value parameter indicating which properties of the template
    * to expand.
    * 
    * - `body` or `body.storage` returns the content of the template in storage format.
    */
    @RequestLine("GET /wiki/rest/api/template/page?spaceKey={spaceKey}&start={start}&limit={limit}&expand={expand}")
    @Headers({
        "Accept: application/json"
    })
    ContentTemplateArray GetTemplatePageV1(
            @Nullable @Param("spaceKey") String spaceKey,
            @Nullable @Param("start") Integer start,
            @Nullable @Param("limit") Integer limit,
            @Nullable @Param("expand") List<String> expand
    );

    /**
    * GetTemplateByContentTemplateIDV1
    * Get content template
    * Returns a content template. This includes information about template,
    * like the name, the space or blueprint that the template is in, the body
    * of the template, and more.
    * 
    * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
    * 'View' permission for the space to view space templates and permission to
    * access the Confluence site ('Can use' global permission) to view global templates.
    *
    * @param contentTemplateId The ID of the content template to be returned.
    * @param expand A multi-value parameter indicating which properties of the template
    * to expand.
    * 
    * - `body` or `body.storage` returns the content of the template in storage format.
    */
    @RequestLine("GET /wiki/rest/api/template/{contentTemplateId}?expand={expand}")
    @Headers({
        "Accept: application/json"
    })
    ContentTemplate GetTemplateByContentTemplateIDV1(
            @NotNull @Param("contentTemplateId") String contentTemplateId,
            @Nullable @Param("expand") List<String> expand
    );

    /**
    * DeleteTemplateByContentTemplateIDV1
    * Remove template
    * Deletes a template. This results in different actions depending on the
    * type of template:
    * 
    * - If the template is a content template, it is deleted.
    * - If the template is a modified space-level blueprint template, it reverts
    * to the template inherited from the global-level blueprint template.
    * - If the template is a modified global-level blueprint template, it reverts
    * to the default global-level blueprint template.
    * 
    *  Note, unmodified blueprint templates cannot be deleted.
    * 
    * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
    *         'Admin' permission for the space to delete a space template or 'Confluence Administrator'
    *         global permission to delete a global template.
    *
    * @param contentTemplateId The ID of the template to be deleted.
    */
    @RequestLine("DELETE /wiki/rest/api/template/{contentTemplateId}")
    void DeleteTemplateByContentTemplateIDV1(
            @NotNull @Param("contentTemplateId") String contentTemplateId
    );

}
