// WARNING: This file was generated by PrimeCodeGen. DO NOT EDIT.

package io.github.primelib.confluence4j.rest.v1.client;

import feign.Headers;
import feign.Param;
import feign.RequestLine;
import io.github.primelib.confluence4j.rest.v1.models.Relation;
import io.github.primelib.confluence4j.rest.v1.models.RelationArray;
import java.util.List;
import javax.annotation.processing.Generated;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;

/**
 * ConfluenceRestClientRelationApi
 */
@Generated(value = "io.github.primelib.primecodegen")
public interface ConfluenceRestClientRelationApi {

    /**
    * GetRelationByRelationNameFromBySourceTypeBySourceKeyToByTargetTypeV1
    * Find target entities related to a source entity
    * Returns all target entities that have a particular relationship to the
    * source entity. Note, relationships are one way.
    * 
    * For example, the following method finds all content that the current user
    * has an 'ignore' relationship with:
    * `GET /wiki/rest/api/relation/ignore/from/user/current/to/content`
    * Note, 'ignore' is an example custom relationship type.
    * 
    * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
    * Permission to view both the target entity and source entity.
    *
    * @param relationName The name of the relationship. This method supports relationships created via
    * [Create relationship](#api-wiki-rest-api-relation-relationname-from-sourcetype-sourcekey-to-targettype-targetkey-put).
    * Note, this method does not support 'like' or 'favourite' relationships.
    * @param sourceType The source entity type of the relationship.
    * @param sourceKey The identifier for the source entity:
    * 
    * - If `sourceType` is `user`, then specify either `current` (logged-in user), the user key of the user, or
    * the account ID of the user. Note that the user key has been deprecated in favor of the account ID for this parameter. See the
    * [migration guide](https://developer.atlassian.com/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/)
    * for details.
    * - If `sourceType` is 'content', then specify the content ID.
    * - If `sourceType` is 'space', then specify the space key.
    * @param targetType The target entity type of the relationship.
    * @param sourceStatus The status of the source. This parameter is only used when the
    * `sourceType` is 'content'.
    * @param targetStatus The status of the target. This parameter is only used when the
    * `targetType` is 'content'.
    * @param sourceVersion The version of the source. This parameter is only used when the
    * `sourceType` is 'content' and the `sourceStatus` is 'historical'.
    * @param targetVersion The version of the target. This parameter is only used when the
    * `targetType` is 'content' and the `targetStatus` is 'historical'.
    * @param expand A multi-value parameter indicating which properties of the response
    * object to expand.
    * 
    * - `relationData` returns information about the relationship, such as
    * who created it and when it was created.
    * - `source` returns the source entity.
    * - `target` returns the target entity.
    * @param start The starting index of the returned relationships.
    * @param limit The maximum number of relationships to return per page.
    * Note, this may be restricted by fixed system limits.
    */
    @RequestLine("GET /rest/api/relation/{relationName}/from/{sourceType}/{sourceKey}/to/{targetType}?sourceStatus={sourceStatus}&targetStatus={targetStatus}&sourceVersion={sourceVersion}&targetVersion={targetVersion}&expand={expand}&start={start}&limit={limit}")
    @Headers({
        "Accept: application/json"
    })
    RelationArray GetRelationByRelationNameFromBySourceTypeBySourceKeyToByTargetTypeV1(
            @NotNull @Param("relationName") String relationName,
            @NotNull @Param("sourceType") String sourceType,
            @NotNull @Param("sourceKey") String sourceKey,
            @NotNull @Param("targetType") String targetType,
            @Nullable @Param("sourceStatus") String sourceStatus,
            @Nullable @Param("targetStatus") String targetStatus,
            @Nullable @Param("sourceVersion") Integer sourceVersion,
            @Nullable @Param("targetVersion") Integer targetVersion,
            @Nullable @Param("expand") List<String> expand,
            @Nullable @Param("start") Integer start,
            @Nullable @Param("limit") Integer limit
    );

    /**
    * GetRelationByRelationNameFromBySourceTypeBySourceKeyToByTargetTypeByTargetKeyV1
    * Find relationship from source to target
    * Find whether a particular type of relationship exists from a source
    * entity to a target entity. Note, relationships are one way.
    * 
    * For example, you can use this method to find whether the current user has
    * selected a particular page as a favorite (i.e. 'save for later'):
    * `GET /wiki/rest/api/relation/favourite/from/user/current/to/content/123`
    * 
    * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
    * Permission to view both the target entity and source entity.
    *
    * @param relationName The name of the relationship. This method supports the 'favourite'
    * (i.e. 'save for later') relationship as well as any other relationship
    * types created via [Create relationship](#api-wiki-rest-api-relation-relationname-from-sourcetype-sourcekey-to-targettype-targetkey-put).
    * @param sourceType The source entity type of the relationship. This must be 'user', if
    * the `relationName` is 'favourite'.
    * @param sourceKey - The identifier for the source entity:
    * 
    * - If `sourceType` is `user`, then specify either `current` (logged-in user), the user key of the user, or
    * the account ID of the user. Note that the user key has been deprecated in favor of the account ID for this parameter. See the
    * [migration guide](https://developer.atlassian.com/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/)
    * for details.
    * - If `sourceType` is 'content', then specify the content ID.
    * - If `sourceType` is 'space', then specify the space key.
    * @param targetType The target entity type of the relationship. This must be 'space' or
    * 'content', if the `relationName` is 'favourite'.
    * @param targetKey The identifier for the target entity:
    * 
    * - If `targetType` is `user`, then specify either `current` (logged-in user), the user key of the user, or
    * the account ID of the user. Note that the user key has been deprecated in favor of the account ID for this parameter. See the
    * [migration guide](https://developer.atlassian.com/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/)
    * for details.
    * - If `targetType` is 'content', then specify the content ID.
    * - If `targetType` is 'space', then specify the space key.
    * @param sourceStatus The status of the source. This parameter is only used when the
    * `sourceType` is 'content'.
    * @param targetStatus The status of the target. This parameter is only used when the
    * `targetType` is 'content'.
    * @param sourceVersion The version of the source. This parameter is only used when the
    * `sourceType` is 'content' and the `sourceStatus` is 'historical'.
    * @param targetVersion The version of the target. This parameter is only used when the
    * `targetType` is 'content' and the `targetStatus` is 'historical'.
    * @param expand A multi-value parameter indicating which properties of the response
    * object to expand.
    * 
    * - `relationData` returns information about the relationship, such as
    * who created it and when it was created.
    * - `source` returns the source entity.
    * - `target` returns the target entity.
    */
    @RequestLine("GET /rest/api/relation/{relationName}/from/{sourceType}/{sourceKey}/to/{targetType}/{targetKey}?sourceStatus={sourceStatus}&targetStatus={targetStatus}&sourceVersion={sourceVersion}&targetVersion={targetVersion}&expand={expand}")
    @Headers({
        "Accept: application/json"
    })
    Relation GetRelationByRelationNameFromBySourceTypeBySourceKeyToByTargetTypeByTargetKeyV1(
            @NotNull @Param("relationName") String relationName,
            @NotNull @Param("sourceType") String sourceType,
            @NotNull @Param("sourceKey") String sourceKey,
            @NotNull @Param("targetType") String targetType,
            @NotNull @Param("targetKey") String targetKey,
            @Nullable @Param("sourceStatus") String sourceStatus,
            @Nullable @Param("targetStatus") String targetStatus,
            @Nullable @Param("sourceVersion") Integer sourceVersion,
            @Nullable @Param("targetVersion") Integer targetVersion,
            @Nullable @Param("expand") List<String> expand
    );

    /**
    * PutRelationByRelationNameFromBySourceTypeBySourceKeyToByTargetTypeByTargetKeyV1
    * Create relationship
    * Creates a relationship between two entities (user, space, content). The
    * 'favourite' relationship is supported by default, but you can use this method
    * to create any type of relationship between two entities.
    * 
    * For example, the following method creates a 'sibling' relationship between
    * two pieces of content:
    * `PUT /wiki/rest/api/relation/sibling/from/content/123/to/content/456`
    * 
    * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
    * Permission to access the Confluence site ('Can use' global permission).
    *
    * @param relationName The name of the relationship. This method supports the 'favourite'
    * (i.e. 'save for later') relationship. You can also specify any other
    * value for this parameter to create a custom relationship type.
    * @param sourceType The source entity type of the relationship. This must be 'user', if
    * the `relationName` is 'favourite'.
    * @param sourceKey - The identifier for the source entity:
    * 
    * - If `sourceType` is `user`, then specify either `current` (logged-in user), the user key of the user, or
    * the account ID of the user. Note that the user key has been deprecated in favor of the account ID for this parameter. See the
    * [migration guide](https://developer.atlassian.com/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/)
    * for details.
    * - If `sourceType` is 'content', then specify the content ID.
    * - If `sourceType` is 'space', then specify the space key.
    * @param targetType The target entity type of the relationship. This must be 'space' or
    * 'content', if the `relationName` is 'favourite'.
    * @param targetKey - The identifier for the target entity:
    * 
    * - If `targetType` is `user`, then specify either `current` (logged-in user), the user key of the user, or
    * the account ID of the user. Note that the user key has been deprecated in favor of the account ID for this parameter. See the
    * [migration guide](https://developer.atlassian.com/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/)
    * for details.
    * - If `targetType` is 'content', then specify the content ID.
    * - If `targetType` is 'space', then specify the space key.
    * @param sourceStatus The status of the source. This parameter is only used when the
    * `sourceType` is 'content'.
    * @param targetStatus The status of the target. This parameter is only used when the
    * `targetType` is 'content'.
    * @param sourceVersion The version of the source. This parameter is only used when the
    * `sourceType` is 'content' and the `sourceStatus` is 'historical'.
    * @param targetVersion The version of the target. This parameter is only used when the
    * `targetType` is 'content' and the `targetStatus` is 'historical'.
    */
    @RequestLine("PUT /rest/api/relation/{relationName}/from/{sourceType}/{sourceKey}/to/{targetType}/{targetKey}?sourceStatus={sourceStatus}&targetStatus={targetStatus}&sourceVersion={sourceVersion}&targetVersion={targetVersion}")
    @Headers({
        "Accept: application/json"
    })
    Relation PutRelationByRelationNameFromBySourceTypeBySourceKeyToByTargetTypeByTargetKeyV1(
            @NotNull @Param("relationName") String relationName,
            @NotNull @Param("sourceType") String sourceType,
            @NotNull @Param("sourceKey") String sourceKey,
            @NotNull @Param("targetType") String targetType,
            @NotNull @Param("targetKey") String targetKey,
            @Nullable @Param("sourceStatus") String sourceStatus,
            @Nullable @Param("targetStatus") String targetStatus,
            @Nullable @Param("sourceVersion") Integer sourceVersion,
            @Nullable @Param("targetVersion") Integer targetVersion
    );

    /**
    * DeleteRelationByRelationNameFromBySourceTypeBySourceKeyToByTargetTypeByTargetKeyV1
    * Delete relationship
    * Deletes a relationship between two entities (user, space, content).
    * 
    * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
    * Permission to access the Confluence site ('Can use' global permission).
    * For favourite relationships, the current user can only delete their own
    * favourite relationships. A space administrator can delete favourite
    * relationships for any user.
    *
    * @param relationName The name of the relationship.
    * @param sourceType The source entity type of the relationship. This must be 'user', if
    * the `relationName` is 'favourite'.
    * @param sourceKey - The identifier for the source entity:
    * 
    * - If `sourceType` is `user`, then specify either `current` (logged-in user), the user key of the user, or
    * the account ID of the user. Note that the user key has been deprecated in favor of the account ID for this parameter. See the
    * [migration guide](https://developer.atlassian.com/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/)
    * for details.
    * - If `sourceType` is 'content', then specify the content ID.
    * - If `sourceType` is 'space', then specify the space key.
    * @param targetType The target entity type of the relationship. This must be 'space' or
    * 'content', if the `relationName` is 'favourite'.
    * @param targetKey - The identifier for the target entity:
    * 
    * - If `targetType` is `user`, then specify either `current` (logged-in user), the user key of the user, or
    * the account ID of the user. Note that the user key has been deprecated in favor of the account ID for this parameter. See the
    * [migration guide](https://developer.atlassian.com/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/)
    * for details.
    * - If `targetType` is 'content', then specify the content ID.
    * - If `targetType` is 'space', then specify the space key.
    * @param sourceStatus The status of the source. This parameter is only used when the
    * `sourceType` is 'content'.
    * @param targetStatus The status of the target. This parameter is only used when the
    * `targetType` is 'content'.
    * @param sourceVersion The version of the source. This parameter is only used when the
    * `sourceType` is 'content' and the `sourceStatus` is 'historical'.
    * @param targetVersion The version of the target. This parameter is only used when the
    * `targetType` is 'content' and the `targetStatus` is 'historical'.
    */
    @RequestLine("DELETE /rest/api/relation/{relationName}/from/{sourceType}/{sourceKey}/to/{targetType}/{targetKey}?sourceStatus={sourceStatus}&targetStatus={targetStatus}&sourceVersion={sourceVersion}&targetVersion={targetVersion}")
    void DeleteRelationByRelationNameFromBySourceTypeBySourceKeyToByTargetTypeByTargetKeyV1(
            @NotNull @Param("relationName") String relationName,
            @NotNull @Param("sourceType") String sourceType,
            @NotNull @Param("sourceKey") String sourceKey,
            @NotNull @Param("targetType") String targetType,
            @NotNull @Param("targetKey") String targetKey,
            @Nullable @Param("sourceStatus") String sourceStatus,
            @Nullable @Param("targetStatus") String targetStatus,
            @Nullable @Param("sourceVersion") Integer sourceVersion,
            @Nullable @Param("targetVersion") Integer targetVersion
    );

    /**
    * GetRelationByRelationNameToByTargetTypeByTargetKeyFromBySourceTypeV1
    * Find source entities related to a target entity
    * Returns all target entities that have a particular relationship to the
    * source entity. Note, relationships are one way.
    * 
    * For example, the following method finds all users that have a 'collaborator'
    * relationship to a piece of content with an ID of '1234':
    * `GET /wiki/rest/api/relation/collaborator/to/content/1234/from/user`
    * Note, 'collaborator' is an example custom relationship type.
    * 
    * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
    * Permission to view both the target entity and source entity.
    *
    * @param relationName The name of the relationship. This method supports relationships created via
    * [Create relationship](#api-wiki-rest-api-relation-relationname-from-sourcetype-sourcekey-to-targettype-targetkey-put).
    * Note, this method does not support 'like' or 'favourite' relationships.
    * @param sourceType The source entity type of the relationship.
    * @param targetType The target entity type of the relationship.
    * @param targetKey The identifier for the target entity:
    * 
    * - If `targetType` is `user`, then specify either `current` (logged-in user), the user key of the user, or
    * the account ID of the user. Note that the user key has been deprecated in favor of the account ID for this parameter. See the
    * [migration guide](https://developer.atlassian.com/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/)
    * for details.
    * - If `targetType` is 'content', then specify the content ID.
    * - If `targetType` is 'space', then specify the space key.
    * @param sourceStatus The status of the source. This parameter is only used when the
    * `sourceType` is 'content'.
    * @param targetStatus The status of the target. This parameter is only used when the
    * `targetType` is 'content'.
    * @param sourceVersion The version of the source. This parameter is only used when the
    * `sourceType` is 'content' and the `sourceStatus` is 'historical'.
    * @param targetVersion The version of the target. This parameter is only used when the
    * `targetType` is 'content' and the `targetStatus` is 'historical'.
    * @param expand A multi-value parameter indicating which properties of the response
    * object to expand.
    * 
    * - `relationData` returns information about the relationship, such as
    * who created it and when it was created.
    * - `source` returns the source entity.
    * - `target` returns the target entity.
    * @param start The starting index of the returned relationships.
    * @param limit The maximum number of relationships to return per page.
    * Note, this may be restricted by fixed system limits.
    */
    @RequestLine("GET /rest/api/relation/{relationName}/to/{targetType}/{targetKey}/from/{sourceType}?sourceStatus={sourceStatus}&targetStatus={targetStatus}&sourceVersion={sourceVersion}&targetVersion={targetVersion}&expand={expand}&start={start}&limit={limit}")
    @Headers({
        "Accept: application/json"
    })
    RelationArray GetRelationByRelationNameToByTargetTypeByTargetKeyFromBySourceTypeV1(
            @NotNull @Param("relationName") String relationName,
            @NotNull @Param("sourceType") String sourceType,
            @NotNull @Param("targetType") String targetType,
            @NotNull @Param("targetKey") String targetKey,
            @Nullable @Param("sourceStatus") String sourceStatus,
            @Nullable @Param("targetStatus") String targetStatus,
            @Nullable @Param("sourceVersion") Integer sourceVersion,
            @Nullable @Param("targetVersion") Integer targetVersion,
            @Nullable @Param("expand") List<String> expand,
            @Nullable @Param("start") Integer start,
            @Nullable @Param("limit") Integer limit
    );

}
