// WARNING: This file was generated by PrimeCodeGen. DO NOT EDIT.

package io.github.primelib.confluence4j.rest.v1.operations;

import io.github.primelib.confluence4j.rest.v1.models.UserPropertyUpdate;
import java.util.Objects;
import java.util.function.Consumer;
import javax.annotation.processing.Generated;
import lombok.EqualsAndHashCode;
import lombok.Getter;
import lombok.Setter;
import lombok.ToString;
import lombok.experimental.Accessors;
import org.jetbrains.annotations.ApiStatus;
import org.jspecify.annotations.NonNull;

/**
 * PutUserByUserIDPropertyByKeyV1
 * <p>
 * Updates a property for the given user. Note, you cannot update the key of a user property, only the value.
 * For more information about user properties, see
 * [Confluence entity properties](https://developer.atlassian.com/cloud/confluence/confluence-entity-properties/).
 * `Note`, these properties stored against a user are on a Confluence site level and not space/content level.
 * 
 * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
 * Permission to access the Confluence site ('Can use' global permission).
 *
 */
@Getter
@Setter
@EqualsAndHashCode
@ToString
@Accessors(fluent = true, chain = true)
@Generated(value = "io.github.primelib.primecodegen")
public class PutUserByUserIDPropertyByKeyV1OperationSpec {
    /**
     * allows to disable validation of the spec, use with care!
     */
    @ApiStatus.Experimental
    public static Boolean VALIDATION_ENABLED = true;

    /**
     * The account ID of the user. The accountId uniquely identifies the user across all Atlassian
     * products. For example, 384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192
     *
     */
    @NonNull
    private String userId;

    /**
     * The key of the user property.
     *
     */
    @NonNull
    private String key;

    /**
     * The user property to be updated.
     *
     */
    @NonNull
    private UserPropertyUpdate payload;

    /**
     * Constructs a validated instance of {@link PutUserByUserIDPropertyByKeyV1OperationSpec}.
     *
     * @param spec the specification to process
     */
    @ApiStatus.Internal
    public PutUserByUserIDPropertyByKeyV1OperationSpec(Consumer<PutUserByUserIDPropertyByKeyV1OperationSpec> spec) {
        spec.accept(this);
        if (VALIDATION_ENABLED)
            validate();
    }

    /**
     * Validates the Spec, will throw a exception if required parameters are missing
     *
     * @throws NullPointerException
     */
    public void validate() {
        Objects.requireNonNull(userId, "userId is a required parameter!");
        Objects.requireNonNull(key, "key is a required parameter!");
        Objects.requireNonNull(payload, "payload is a required parameter!");
    }
}
