// WARNING: This file was generated by PrimeCodeGen. DO NOT EDIT.

package io.github.primelib.confluence4j.rest.v1.operations;

import java.util.Objects;
import java.util.function.Consumer;
import javax.annotation.processing.Generated;
import lombok.EqualsAndHashCode;
import lombok.Getter;
import lombok.Setter;
import lombok.ToString;
import lombok.experimental.Accessors;
import org.jetbrains.annotations.ApiStatus;
import org.jspecify.annotations.NonNull;
import org.jspecify.annotations.Nullable;

/**
 * GetSpaceBySpaceKeyLabelV1
 * <p>
 * Returns a list of labels associated with a space. Can provide a prefix as well as other filters to
 * select different types of labels.
 *
 */
@Getter
@Setter
@EqualsAndHashCode
@ToString
@Accessors(fluent = true, chain = true)
@Generated(value = "io.github.primelib.primecodegen")
public class GetSpaceBySpaceKeyLabelV1OperationSpec {
    /**
     * allows to disable validation of the spec, use with care!
     */
    @ApiStatus.Experimental
    public static Boolean VALIDATION_ENABLED = true;

    /**
     * The key of the space to get labels for.
     *
     */
    @NonNull
    private String spaceKey;

    /**
     * Filters the results to labels with the specified prefix. If this parameter
     * is not specified, then labels with any prefix will be returned.
     * 
     * - `global` prefix is used by labels that are on content within the provided space.
     * - `my` prefix can be explicitly added by a user when adding a label
     * via the UI, e.g. 'my:example-label'.
     * - `team` prefix is used for labels applied to the space.
     *
     */
    @Nullable
    private String prefix;

    /**
     * The starting index of the returned labels.
     *
     */
    @Nullable
    private Integer start;

    /**
     * The maximum number of labels to return per page. Note,
     * this may be restricted by fixed system limits.
     *
     */
    @Nullable
    private Integer limit;

    /**
     * Constructs a validated instance of {@link GetSpaceBySpaceKeyLabelV1OperationSpec}.
     *
     * @param spec the specification to process
     */
    @ApiStatus.Internal
    public GetSpaceBySpaceKeyLabelV1OperationSpec(Consumer<GetSpaceBySpaceKeyLabelV1OperationSpec> spec) {
        spec.accept(this);
        if (VALIDATION_ENABLED)
            validate();
    }

    /**
     * Validates the Spec, will throw a exception if required parameters are missing
     *
     * @throws NullPointerException
     */
    public void validate() {
        Objects.requireNonNull(spaceKey, "spaceKey is a required parameter!");
    }
}
