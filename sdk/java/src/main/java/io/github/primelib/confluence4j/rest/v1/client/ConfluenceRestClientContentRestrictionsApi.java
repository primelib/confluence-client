// WARNING: This file was generated by PrimeCodeGen. DO NOT EDIT.

package io.github.primelib.confluence4j.rest.v1.client;

import feign.Headers;
import feign.Param;
import feign.RequestLine;
import io.github.primelib.confluence4j.rest.v1.models.ContentRestriction;
import io.github.primelib.confluence4j.rest.v1.models.ContentRestrictionArray;
import io.github.primelib.confluence4j.rest.v1.models.GetRestrictionsByOperation;
import java.util.List;
import javax.annotation.processing.Generated;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;

/**
 * ConfluenceRestClientContentRestrictionsApi
 */
@Generated(value = "io.github.primelib.primecodegen")
public interface ConfluenceRestClientContentRestrictionsApi {

    /**
    * GetContentByIDRestrictionV1
    * Get restrictions
    * Returns the restrictions on a piece of content.
    * 
    * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
    * Permission to view the content.
    *
    * @param id The ID of the content to be queried for its restrictions.
    * @param expand A multi-value parameter indicating which properties of the content
    * restrictions to expand. By default, the following objects are expanded:
    * `restrictions.user`, `restrictions.group`.
    * 
    * - `restrictions.user` returns the piece of content that the restrictions are
    * applied to.
    * - `restrictions.group` returns the piece of content that the restrictions are
    * applied to.
    * - `content` returns the piece of content that the restrictions are
    * applied to.
    * @param start The starting index of the users and groups in the returned restrictions.
    * @param limit The maximum number of users and the maximum number of groups, in the
    * returned restrictions, to return per page. Note, this may be restricted
    * by fixed system limits.
    */
    @RequestLine("GET /wiki/rest/api/content/{id}/restriction?expand={expand}&start={start}&limit={limit}")
    @Headers({
        "Accept: application/json"
    })
    ContentRestrictionArray GetContentByIDRestrictionV1(
            @NotNull @Param("id") String id,
            @Nullable @Param("expand") List<String> expand,
            @Nullable @Param("start") Integer start,
            @Nullable @Param("limit") Integer limit
    );

    /**
    * PutContentByIDRestrictionV1
    * Update restrictions
    * Updates restrictions for a piece of content. This removes the existing
    * restrictions and replaces them with the restrictions in the request.
    * 
    * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
    * Permission to edit the content.
    *
    * @param id The ID of the content to update restrictions for.
    * @param expand A multi-value parameter indicating which properties of the content
    * restrictions (returned in response) to expand.
    * 
    * - `restrictions.user` returns the piece of content that the restrictions are
    * applied to. Expanded by default.
    * - `restrictions.group` returns the piece of content that the restrictions are
    * applied to. Expanded by default.
    * - `content` returns the piece of content that the restrictions are
    * applied to.
    * @param payload The updated restrictions for the content.
    */
    @RequestLine("PUT /wiki/rest/api/content/{id}/restriction?expand={expand}")
    @Headers({
        "Content-Type: application/json",
        "Accept: application/json"
    })
    ContentRestrictionArray PutContentByIDRestrictionV1(
            @NotNull @Param("id") String id,
            @Nullable @Param("expand") List<String> expand,
            @NotNull Object payload
    );

    /**
    * PostContentByIDRestrictionV1
    * Add restrictions
    * Adds restrictions to a piece of content. Note, this does not change any
    * existing restrictions on the content.
    * 
    * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
    * Permission to edit the content.
    *
    * @param id The ID of the content to add restrictions to.
    * @param expand A multi-value parameter indicating which properties of the content
    * restrictions (returned in response) to expand.
    * 
    * - `restrictions.user` returns the piece of content that the restrictions are
    * applied to. Expanded by default.
    * - `restrictions.group` returns the piece of content that the restrictions are
    * applied to. Expanded by default.
    * - `content` returns the piece of content that the restrictions are
    * applied to.
    * @param payload The restrictions to be added to the content.
    */
    @RequestLine("POST /wiki/rest/api/content/{id}/restriction?expand={expand}")
    @Headers({
        "Content-Type: application/json",
        "Accept: application/json"
    })
    ContentRestrictionArray PostContentByIDRestrictionV1(
            @NotNull @Param("id") String id,
            @Nullable @Param("expand") List<String> expand,
            @NotNull Object payload
    );

    /**
    * DeleteContentByIDRestrictionV1
    * Delete restrictions
    * Removes all restrictions (read and update) on a piece of content.
    * 
    * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
    * Permission to edit the content.
    *
    * @param id The ID of the content to remove restrictions from.
    * @param expand A multi-value parameter indicating which properties of the content
    * restrictions (returned in response) to expand.
    * 
    * - `restrictions.user` returns the piece of content that the restrictions are
    * applied to. Expanded by default.
    * - `restrictions.group` returns the piece of content that the restrictions are
    * applied to. Expanded by default.
    * - `content` returns the piece of content that the restrictions are
    * applied to.
    */
    @RequestLine("DELETE /wiki/rest/api/content/{id}/restriction?expand={expand}")
    @Headers({
        "Accept: application/json"
    })
    ContentRestrictionArray DeleteContentByIDRestrictionV1(
            @NotNull @Param("id") String id,
            @Nullable @Param("expand") List<String> expand
    );

    /**
    * GetContentByIDRestrictionByOperationV1
    * Get restrictions by operation
    * Returns restrictions on a piece of content by operation. This method is
    * similar to [Get restrictions](#api-content-id-restriction-get) except that
    * the operations are properties of the return object, rather than items in
    * a results array.
    * 
    * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
    * Permission to view the content.
    *
    * @param id The ID of the content to be queried for its restrictions.
    * @param expand A multi-value parameter indicating which properties of the content
    * restrictions to expand.
    * 
    * - `restrictions.user` returns the piece of content that the restrictions are
    * applied to. Expanded by default.
    * - `restrictions.group` returns the piece of content that the restrictions are
    * applied to. Expanded by default.
    * - `content` returns the piece of content that the restrictions are
    * applied to.
    */
    @RequestLine("GET /wiki/rest/api/content/{id}/restriction/byOperation?expand={expand}")
    @Headers({
        "Accept: application/json"
    })
    GetRestrictionsByOperation GetContentByIDRestrictionByOperationV1(
            @NotNull @Param("id") String id,
            @Nullable @Param("expand") List<String> expand
    );

    /**
    * GetContentByIDRestrictionByOperationByOperationKeyV1
    * Get restrictions for operation
    * Returns the restictions on a piece of content for a given operation (read
    * or update).
    * 
    * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
    * Permission to view the content.
    *
    * @param id The ID of the content to be queried for its restrictions.
    * @param operationKey The operation type of the restrictions to be returned.
    * @param expand A multi-value parameter indicating which properties of the content
    * restrictions to expand.
    * 
    * - `restrictions.user` returns the piece of content that the restrictions are
    * applied to. Expanded by default.
    * - `restrictions.group` returns the piece of content that the restrictions are
    * applied to. Expanded by default.
    * - `content` returns the piece of content that the restrictions are
    * applied to.
    * @param start The starting index of the users and groups in the returned restrictions.
    * @param limit The maximum number of users and the maximum number of groups, in the
    * returned restrictions, to return per page. Note, this may be restricted
    * by fixed system limits.
    */
    @RequestLine("GET /wiki/rest/api/content/{id}/restriction/byOperation/{operationKey}?expand={expand}&start={start}&limit={limit}")
    @Headers({
        "Accept: application/json"
    })
    ContentRestriction GetContentByIDRestrictionByOperationByOperationKeyV1(
            @NotNull @Param("id") String id,
            @NotNull @Param("operationKey") String operationKey,
            @Nullable @Param("expand") List<String> expand,
            @Nullable @Param("start") Integer start,
            @Nullable @Param("limit") Integer limit
    );

    /**
    * GetContentByIDRestrictionByOperationByOperationKeyByGroupIDByGroupIDV1
    * Get content restriction status for group
    * Returns whether the specified content restriction applies to a group.
    * For example, if a page with `id=123` has a `read` restriction for the `123456` group id,
    * the following request will return `true`:
    * 
    * `/wiki/rest/api/content/123/restriction/byOperation/read/byGroupId/123456`
    * 
    * Note that a response of `true` does not guarantee that the group can view the page, as it does not account for
    * account-inherited restrictions, space permissions, or even product access. For more
    * information, see [Confluence permissions](https://confluence.atlassian.com/x/_AozKw).
    * 
    * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
    * Permission to view the content.
    *
    * @param id The ID of the content that the restriction applies to.
    * @param operationKey The operation that the restriction applies to.
    * @param groupId The id of the group to be queried for whether the content restriction
    * applies to it.
    */
    @RequestLine("GET /wiki/rest/api/content/{id}/restriction/byOperation/{operationKey}/byGroupId/{groupId}")
    void GetContentByIDRestrictionByOperationByOperationKeyByGroupIDByGroupIDV1(
            @NotNull @Param("id") String id,
            @NotNull @Param("operationKey") String operationKey,
            @NotNull @Param("groupId") String groupId
    );

    /**
    * PutContentByIDRestrictionByOperationByOperationKeyByGroupIDByGroupIDV1
    * Add group to content restriction
    * Adds a group to a content restriction by Group Id. That is, grant read or update
    * permission to the group for a piece of content.
    * 
    * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
    * Permission to edit the content.
    *
    * @param id The ID of the content that the restriction applies to.
    * @param operationKey The operation that the restriction applies to.
    * @param groupId The groupId of the group to add to the content restriction.
    */
    @RequestLine("PUT /wiki/rest/api/content/{id}/restriction/byOperation/{operationKey}/byGroupId/{groupId}")
    void PutContentByIDRestrictionByOperationByOperationKeyByGroupIDByGroupIDV1(
            @NotNull @Param("id") String id,
            @NotNull @Param("operationKey") String operationKey,
            @NotNull @Param("groupId") String groupId
    );

    /**
    * DeleteContentByIDRestrictionByOperationByOperationKeyByGroupIDByGroupIDV1
    * Remove group from content restriction
    * Removes a group from a content restriction. That is, remove read or update
    * permission for the group for a piece of content.
    * 
    * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
    * Permission to edit the content.
    *
    * @param id The ID of the content that the restriction applies to.
    * @param operationKey The operation that the restriction applies to.
    * @param groupId The id of the group to remove from the content restriction.
    */
    @RequestLine("DELETE /wiki/rest/api/content/{id}/restriction/byOperation/{operationKey}/byGroupId/{groupId}")
    void DeleteContentByIDRestrictionByOperationByOperationKeyByGroupIDByGroupIDV1(
            @NotNull @Param("id") String id,
            @NotNull @Param("operationKey") String operationKey,
            @NotNull @Param("groupId") String groupId
    );

    /**
    * GetContentByIDRestrictionByOperationByOperationKeyUserV1
    * Get content restriction status for user
    * Returns whether the specified content restriction applies to a user.
    * For example, if a page with `id=123` has a `read` restriction for a user with an account ID of
    * `384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192`, the following request will return `true`:
    * 
    * `/wiki/rest/api/content/123/restriction/byOperation/read/user?accountId=384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192`
    * 
    * Note that a response of `true` does not guarantee that the user can view the page, as it does not account for
    * account-inherited restrictions, space permissions, or even product access. For more
    * information, see [Confluence permissions](https://confluence.atlassian.com/x/_AozKw).
    * 
    * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
    * Permission to view the content.
    *
    * @param id The ID of the content that the restriction applies to.
    * @param operationKey The operation that is restricted.
    * @param key This parameter is no longer available and will be removed from the documentation soon.
    * Use `accountId` instead.
    * See the [deprecation notice](/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/) for details.
    * @param username This parameter is no longer available and will be removed from the documentation soon.
    * Use `accountId` instead.
    * See the [deprecation notice](/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/) for details.
    * @param accountId The account ID of the user. The accountId uniquely identifies the user across all Atlassian products.
    * For example, `384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192`.
    */
    @RequestLine("GET /wiki/rest/api/content/{id}/restriction/byOperation/{operationKey}/user?key={key}&username={username}&accountId={accountId}")
    void GetContentByIDRestrictionByOperationByOperationKeyUserV1(
            @NotNull @Param("id") String id,
            @NotNull @Param("operationKey") String operationKey,
            @Nullable @Param("key") String key,
            @Nullable @Param("username") String username,
            @Nullable @Param("accountId") String accountId
    );

    /**
    * PutContentByIDRestrictionByOperationByOperationKeyUserV1
    * Add user to content restriction
    * Adds a user to a content restriction. That is, grant read or update
    * permission to the user for a piece of content.
    * 
    * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
    * Permission to edit the content.
    *
    * @param id The ID of the content that the restriction applies to.
    * @param operationKey The operation that the restriction applies to.
    * @param key This parameter is no longer available and will be removed from the documentation soon.
    * Use `accountId` instead.
    * See the [deprecation notice](/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/) for details.
    * @param username This parameter is no longer available and will be removed from the documentation soon.
    * Use `accountId` instead.
    * See the [deprecation notice](/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/) for details.
    * @param accountId The account ID of the user. The accountId uniquely identifies the user across all Atlassian products.
    * For example, `384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192`.
    */
    @RequestLine("PUT /wiki/rest/api/content/{id}/restriction/byOperation/{operationKey}/user?key={key}&username={username}&accountId={accountId}")
    void PutContentByIDRestrictionByOperationByOperationKeyUserV1(
            @NotNull @Param("id") String id,
            @NotNull @Param("operationKey") String operationKey,
            @Nullable @Param("key") String key,
            @Nullable @Param("username") String username,
            @Nullable @Param("accountId") String accountId
    );

    /**
    * DeleteContentByIDRestrictionByOperationByOperationKeyUserV1
    * Remove user from content restriction
    * Removes a group from a content restriction. That is, remove read or update
    * permission for the group for a piece of content.
    * 
    * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
    * Permission to edit the content.
    *
    * @param id The ID of the content that the restriction applies to.
    * @param operationKey The operation that the restriction applies to.
    * @param key This parameter is no longer available and will be removed from the documentation soon.
    * Use `accountId` instead.
    * See the [deprecation notice](/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/) for details.
    * @param username This parameter is no longer available and will be removed from the documentation soon.
    * Use `accountId` instead.
    * See the [deprecation notice](/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/) for details.
    * @param accountId The account ID of the user. The accountId uniquely identifies the user across all Atlassian products.
    * For example, `384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192`.
    */
    @RequestLine("DELETE /wiki/rest/api/content/{id}/restriction/byOperation/{operationKey}/user?key={key}&username={username}&accountId={accountId}")
    void DeleteContentByIDRestrictionByOperationByOperationKeyUserV1(
            @NotNull @Param("id") String id,
            @NotNull @Param("operationKey") String operationKey,
            @Nullable @Param("key") String key,
            @Nullable @Param("username") String username,
            @Nullable @Param("accountId") String accountId
    );

}
