// WARNING: This file was generated by PrimeCodeGen. DO NOT EDIT.

package io.github.primelib.confluence4j.rest.v1.models;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.util.List;
import java.util.Map;
import java.util.function.Consumer;
import javax.annotation.processing.Generated;
import lombok.AccessLevel;
import lombok.EqualsAndHashCode;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import lombok.ToString;
import lombok.experimental.Accessors;
import org.jetbrains.annotations.ApiStatus;

/**
 * ContentUpdate
 *
 */
@Getter
@Setter
@EqualsAndHashCode
@ToString
@Accessors(fluent = true, chain = true)
@NoArgsConstructor(access = AccessLevel.PROTECTED, force = true)
@JsonTypeName("ContentUpdate")
@JsonPropertyOrder({
    "version",
    "title",
    "type",
    "status",
    "ancestors",
    "body"
})
@Generated(value = "io.github.primelib.primecodegen")
public class ContentUpdate {

    /**
     * The new version for the updated content. Set this to the current version number incremented by one, unless you are changing the status to 'draft' which must have a version number of 1.

To get the current version number, use [Get content by ID](#api-content-id-get) and retrieve `version.number`.
     */
    @JsonProperty("version")
    protected Map<String, Object> version;

    /**
     * The updated title of the content. If you are updating a non-draft `page` or `blogpost`, title is required. If you are not changing the title, set this field to the the current title.
     */
    @JsonProperty("title")
    protected String title;

    /**
     * The type of content. Set this to the current type of the content. For example, - page - blogpost - comment - attachment
     */
    @JsonProperty("type")
    protected String type;

    /**
     * The updated status of the content. Note, if you change the status of a page from
'current' to 'draft' and it has an existing draft, the existing draft will be deleted
in favor of the updated page.
     */
    @JsonProperty("status")
    protected String status;

    /**
     * The new parent for the content. Only one parent content 'id' can be specified.
     */
    @JsonProperty("ancestors")
    protected List<Map<String, Object>> ancestors;

    /**
     * The updated body of the content. Does not apply to attachments.
If you are not sure how to generate these formats, you can create a page in the
Confluence application, retrieve the content using [Get content](#api-content-get),
and expand the desired content format, e.g. `expand=body.storage`.
     */
    @JsonProperty("body")
    protected Body632549 body;

    /**
     * Constructs a validated instance of {@link ContentUpdate}.
     *
     * @param spec the specification to process
     */
    public ContentUpdate(Consumer<ContentUpdate> spec) {
        super();
        spec.accept(this);
    }

    /**
     * Constructs a validated instance of {@link ContentUpdate}.
     * <p>
     * NOTE: This constructor is not considered stable and may change if the model is updated. Consider using {@link #ContentUpdate(Consumer)} instead.
     * @param version The new version for the updated content. Set this to the current version number incremented by one, unless you are changing the status to 'draft' which must have a version number of 1.

To get the current version number, use [Get content by ID](#api-content-id-get) and retrieve `version.number`.
     * @param title The updated title of the content. If you are updating a non-draft `page` or `blogpost`, title is required. If you are not changing the title, set this field to the the current title.
     * @param type The type of content. Set this to the current type of the content. For example, - page - blogpost - comment - attachment
     * @param status The updated status of the content. Note, if you change the status of a page from
'current' to 'draft' and it has an existing draft, the existing draft will be deleted
in favor of the updated page.
     * @param ancestors The new parent for the content. Only one parent content 'id' can be specified.
     * @param body The updated body of the content. Does not apply to attachments.
If you are not sure how to generate these formats, you can create a page in the
Confluence application, retrieve the content using [Get content](#api-content-get),
and expand the desired content format, e.g. `expand=body.storage`.
     */
    @ApiStatus.Internal
    public ContentUpdate(Map<String, Object> version, String title, String type, String status, List<Map<String, Object>> ancestors, Body632549 body) {
        this.version = version;
        this.title = title;
        this.type = type;
        this.status = status;
        this.ancestors = ancestors;
        this.body = body;
    }
}
