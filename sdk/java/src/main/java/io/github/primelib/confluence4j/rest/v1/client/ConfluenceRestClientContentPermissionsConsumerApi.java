// WARNING: This file was generated by PrimeCodeGen. DO NOT EDIT.

package io.github.primelib.confluence4j.rest.v1.client;

import io.github.primelib.confluence4j.rest.v1.models.PermissionCheckResponse;
import io.github.primelib.confluence4j.rest.v1.operations.PostContentByIDPermissionCheckV1OperationSpec;
import java.util.function.Consumer;
import javax.annotation.processing.Generated;

/**
 * ConfluenceRestClientContentPermissionsConsumerApi
 */
@Generated(value = "io.github.primelib.primecodegen")
public class ConfluenceRestClientContentPermissionsConsumerApi {
    private final ConfluenceRestClientContentPermissionsApi api;

    public ConfluenceRestClientContentPermissionsConsumerApi(ConfluenceRestClientContentPermissionsApi api) {
        this.api = api;
    }


    /**
    * PostContentByIDPermissionCheckV1
    * Check content permissions
    * Check if a user or a group can perform an operation to the specified content. The `operation` to check
    * must be provided. The userâ€™s account ID or the ID of the group can be provided in the `subject` to check
    * permissions against a specified user or group. The following permission checks are done to make sure that the
    * user or group has the proper access:
    * 
    * - site permissions
    * - space permissions
    * - content restrictions
    * 
    * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
    * Permission to access the Confluence site ('Can use' global permission) if checking permission for self,
    * otherwise 'Confluence Administrator' global permission is required.
    *
    * @param spec a consumer that creates the payload for this operation. Supports the following properties:
    * <ul>
    *   <li>id: The ID of the content to check permissions against.</li>
    *   <li>payload: The content permission request.</li>
    * </ul>
    */
    public PermissionCheckResponse PostContentByIDPermissionCheckV1(Consumer<PostContentByIDPermissionCheckV1OperationSpec> spec) {
        PostContentByIDPermissionCheckV1OperationSpec r = new PostContentByIDPermissionCheckV1OperationSpec(spec);
        return api.PostContentByIDPermissionCheckV1(r.id(), r.payload());
    }

}
