// WARNING: This file was generated by PrimeCodeGen. DO NOT EDIT.

package io.github.primelib.confluence4j.rest.v1.operations;

import java.util.List;
import java.util.Objects;
import java.util.function.Consumer;
import javax.annotation.processing.Generated;
import lombok.EqualsAndHashCode;
import lombok.Getter;
import lombok.Setter;
import lombok.ToString;
import lombok.experimental.Accessors;
import org.jetbrains.annotations.ApiStatus;
import org.jspecify.annotations.NonNull;
import org.jspecify.annotations.Nullable;

/**
 * GetContentByIDDescendantV1
 * <p>
 * Returns a map of the descendants of a piece of content. This is similar
 * to [Get content children](#api-content-id-child-get), except that this
 * method returns child pages at all levels, rather than just the direct
 * child pages.
 * 
 * A piece of content has different types of descendants, depending on its type:
 * 
 * - `page`: descendant is `page`, `whiteboard`, `database`, `embed`, `folder`, `comment`, `attachment`
 * - `whiteboard`: descendant is `page`, `whiteboard`, `database`, `embed`, `folder`, `comment`, `attachment`
 * - `database`: descendant is `page`, `whiteboard`, `database`, `embed`, `folder`, `comment`, `attachment`
 * - `embed`: descendant is `page`, `whiteboard`, `database`, `embed`, `folder`, `comment`, `attachment`
 * - `folder`: descendant is `page`, `whiteboard`, `database`, `embed`, `folder`, `comment`, `attachment`
 * - `blogpost`: descendant is `comment`, `attachment`
 * - `attachment`: descendant is `comment`
 * - `comment`: descendant is `attachment`
 * 
 * The map will always include all descendant types that are valid for the content.
 * However, if the content has no instances of a descendant type, the map will
 * contain an empty array for that descendant type.
 * 
 * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
 * 'View' permission for the space, and permission to view the content if it
 * is a page.
 *
 * @deprecated
 */
@Getter
@Setter
@EqualsAndHashCode
@ToString
@Accessors(fluent = true, chain = true)
@Deprecated
@Generated(value = "io.github.primelib.primecodegen")
public class GetContentByIDDescendantV1OperationSpec {
    /**
     * allows to disable validation of the spec, use with care!
     */
    @ApiStatus.Experimental
    public static Boolean VALIDATION_ENABLED = true;

    /**
     * The ID of the content to be queried for its descendants.
     *
     */
    @NonNull
    private String id;

    /**
     * A multi-value parameter indicating which properties of the children to
     * expand, where:
     * 
     * - `attachment` returns all attachments for the content.
     * - `comments` returns all comments for the content.
     * - `page` returns all child pages of the content.
     * - `whiteboard` returns all child whiteboards of the content.
     * - `database` returns all child databases of the content.
     * - `embed` returns all child embeds of the content.
     * - `folder` returns all child folders of the content.
     *
     */
    @Nullable
    private List<String> expand;

    /**
     * Constructs a validated instance of {@link GetContentByIDDescendantV1OperationSpec}.
     *
     * @param spec the specification to process
     */
    @ApiStatus.Internal
    public GetContentByIDDescendantV1OperationSpec(Consumer<GetContentByIDDescendantV1OperationSpec> spec) {
        spec.accept(this);
        if (VALIDATION_ENABLED)
            validate();
    }

    /**
     * Validates the Spec, will throw a exception if required parameters are missing
     *
     * @throws NullPointerException
     */
    public void validate() {
        Objects.requireNonNull(id, "id is a required parameter!");
    }
}
