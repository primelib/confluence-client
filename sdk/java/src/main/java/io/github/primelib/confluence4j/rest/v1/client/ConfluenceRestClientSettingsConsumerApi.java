// WARNING: This file was generated by PrimeCodeGen. DO NOT EDIT.

package io.github.primelib.confluence4j.rest.v1.client;

import io.github.primelib.confluence4j.rest.v1.models.LookAndFeelSelection;
import io.github.primelib.confluence4j.rest.v1.models.LookAndFeelSettings;
import io.github.primelib.confluence4j.rest.v1.models.SystemInfoEntity;
import io.github.primelib.confluence4j.rest.v1.operations.DeleteSettingsLookandfeelCustomV1OperationSpec;
import io.github.primelib.confluence4j.rest.v1.operations.GetSettingsLookandfeelV1OperationSpec;
import io.github.primelib.confluence4j.rest.v1.operations.GetSettingsSystemInfoV1OperationSpec;
import io.github.primelib.confluence4j.rest.v1.operations.PostSettingsLookandfeelCustomV1OperationSpec;
import io.github.primelib.confluence4j.rest.v1.operations.PutSettingsLookandfeelV1OperationSpec;
import java.util.function.Consumer;
import javax.annotation.processing.Generated;

/**
 * ConfluenceRestClientSettingsConsumerApi
 */
@Generated(value = "io.github.primelib.primecodegen")
public class ConfluenceRestClientSettingsConsumerApi {
    private final ConfluenceRestClientSettingsApi api;

    public ConfluenceRestClientSettingsConsumerApi(ConfluenceRestClientSettingsApi api) {
        this.api = api;
    }


    /**
    * GetSettingsLookandfeelV1
    * Get look and feel settings
    * Returns the look and feel settings for the site or a single space. This
    * includes attributes such as the color scheme, padding, and border radius.
    * 
    * The look and feel settings for a space can be inherited from the global
    * look and feel settings or provided by a theme.
    * 
    * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
    * None
    *
    * @param spec a consumer that creates the payload for this operation. Supports the following properties:
    * <ul>
    *   <li>spaceKey: The key of the space for which the look and feel settings will be returned. If this is not set, only the global look and feel settings are returned.</li>
    * </ul>
    */
    public LookAndFeelSettings GetSettingsLookandfeelV1(Consumer<GetSettingsLookandfeelV1OperationSpec> spec) {
        GetSettingsLookandfeelV1OperationSpec r = new GetSettingsLookandfeelV1OperationSpec(spec);
        return api.GetSettingsLookandfeelV1(r.spaceKey());
    }

    /**
    * PutSettingsLookandfeelV1
    * Select look and feel settings
    * Sets the look and feel settings to the default (global) settings, the
    * custom settings, or the current theme's settings for a space.
    * The custom and theme settings can only be selected if there is already
    * a theme set for a space. Note, the default space settings are inherited
    * from the current global settings.
    * 
    * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
    * 'Admin' permission for the space.
    *
    * @param spec a consumer that creates the payload for this operation. Supports the following properties:
    * <ul>
    *   <li>payload: The look and feel type to be set.</li>
    * </ul>
    */
    public LookAndFeelSelection PutSettingsLookandfeelV1(Consumer<PutSettingsLookandfeelV1OperationSpec> spec) {
        PutSettingsLookandfeelV1OperationSpec r = new PutSettingsLookandfeelV1OperationSpec(spec);
        return api.PutSettingsLookandfeelV1(r.payload());
    }

    /**
    * PostSettingsLookandfeelCustomV1
    * Update look and feel settings
    * Updates the look and feel settings for the site or for a single space.
    * If custom settings exist, they are updated. If no custom settings exist,
    * then a set of custom settings is created.
    * 
    * Note, if a theme is selected for a space, the space look and feel settings
    * are provided by the theme and cannot be overridden.
    * 
    * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
    * 'Admin' permission for the space.
    *
    * @param spec a consumer that creates the payload for this operation. Supports the following properties:
    * <ul>
    *   <li>spaceKey: The key of the space for which the look and feel settings will be updated. If this is not set, the global look and feel settings will be updated.</li>
    *   <li>payload: The updated settings. All values for the settings must be included, regardless of whether they are being changed.  One way to create the request body is to copy the settings from the response body of [Get look and feel settings](#api-settings-lookandfeel-get) and modify it as needed.</li>
    * </ul>
    */
    public Object PostSettingsLookandfeelCustomV1(Consumer<PostSettingsLookandfeelCustomV1OperationSpec> spec) {
        PostSettingsLookandfeelCustomV1OperationSpec r = new PostSettingsLookandfeelCustomV1OperationSpec(spec);
        return api.PostSettingsLookandfeelCustomV1(r.spaceKey(), r.payload());
    }

    /**
    * DeleteSettingsLookandfeelCustomV1
    * Reset look and feel settings
    * Resets the custom look and feel settings for the site or a single space.
    * This changes the values of the custom settings to be the same as the
    * default settings. It does not change which settings (default or custom)
    * are selected. Note, the default space settings are inherited from the
    * current global settings.
    * 
    * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
    * 'Admin' permission for the space.
    *
    * @param spec a consumer that creates the payload for this operation. Supports the following properties:
    * <ul>
    *   <li>spaceKey: The key of the space for which the look and feel settings will be reset. If this is not set, the global look and feel settings will be reset.</li>
    * </ul>
    */
    public void DeleteSettingsLookandfeelCustomV1(Consumer<DeleteSettingsLookandfeelCustomV1OperationSpec> spec) {
        DeleteSettingsLookandfeelCustomV1OperationSpec r = new DeleteSettingsLookandfeelCustomV1OperationSpec(spec);
        api.DeleteSettingsLookandfeelCustomV1(r.spaceKey());
    }

    /**
    * GetSettingsSystemInfoV1
    * Get system info
    * Returns the system information for the Confluence Cloud tenant. This
    * information is used by Atlassian.
    * 
    * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
    * Permission to access the Confluence site ('Can use' global permission).
    *
    */
    public SystemInfoEntity GetSettingsSystemInfoV1(Consumer<GetSettingsSystemInfoV1OperationSpec> spec) {
        GetSettingsSystemInfoV1OperationSpec r = new GetSettingsSystemInfoV1OperationSpec(spec);
        return api.GetSettingsSystemInfoV1();
    }

}
