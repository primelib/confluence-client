// WARNING: This file was generated by PrimeCodeGen. DO NOT EDIT.

package io.github.primelib.confluence4j.rest.v1.client;

import io.github.primelib.confluence4j.rest.v1.models.ContentRestriction;
import io.github.primelib.confluence4j.rest.v1.models.ContentRestrictionArray;
import io.github.primelib.confluence4j.rest.v1.models.GetRestrictionsByOperation;
import io.github.primelib.confluence4j.rest.v1.operations.DeleteContentByIDRestrictionByOperationByOperationKeyByGroupIDByGroupIDV1OperationSpec;
import io.github.primelib.confluence4j.rest.v1.operations.DeleteContentByIDRestrictionByOperationByOperationKeyUserV1OperationSpec;
import io.github.primelib.confluence4j.rest.v1.operations.DeleteContentByIDRestrictionV1OperationSpec;
import io.github.primelib.confluence4j.rest.v1.operations.GetContentByIDRestrictionByOperationByOperationKeyByGroupIDByGroupIDV1OperationSpec;
import io.github.primelib.confluence4j.rest.v1.operations.GetContentByIDRestrictionByOperationByOperationKeyUserV1OperationSpec;
import io.github.primelib.confluence4j.rest.v1.operations.GetContentByIDRestrictionByOperationByOperationKeyV1OperationSpec;
import io.github.primelib.confluence4j.rest.v1.operations.GetContentByIDRestrictionByOperationV1OperationSpec;
import io.github.primelib.confluence4j.rest.v1.operations.GetContentByIDRestrictionV1OperationSpec;
import io.github.primelib.confluence4j.rest.v1.operations.PostContentByIDRestrictionV1OperationSpec;
import io.github.primelib.confluence4j.rest.v1.operations.PutContentByIDRestrictionByOperationByOperationKeyByGroupIDByGroupIDV1OperationSpec;
import io.github.primelib.confluence4j.rest.v1.operations.PutContentByIDRestrictionByOperationByOperationKeyUserV1OperationSpec;
import io.github.primelib.confluence4j.rest.v1.operations.PutContentByIDRestrictionV1OperationSpec;
import java.util.function.Consumer;
import javax.annotation.processing.Generated;

/**
 * ConfluenceRestClientContentRestrictionsConsumerApi
 */
@Generated(value = "io.github.primelib.primecodegen")
public class ConfluenceRestClientContentRestrictionsConsumerApi {
    private final ConfluenceRestClientContentRestrictionsApi api;

    public ConfluenceRestClientContentRestrictionsConsumerApi(ConfluenceRestClientContentRestrictionsApi api) {
        this.api = api;
    }


    /**
    * GetContentByIDRestrictionV1
    * Get restrictions
    * Returns the restrictions on a piece of content.
    * 
    * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
    * Permission to view the content.
    *
    * @param spec a consumer that creates the payload for this operation. Supports the following properties:
    * <ul>
    *   <li>id: The ID of the content to be queried for its restrictions.</li>
    *   <li>expand: A multi-value parameter indicating which properties of the content restrictions to expand. By default, the following objects are expanded: `restrictions.user`, `restrictions.group`.  - `restrictions.user` returns the piece of content that the restrictions are applied to. - `restrictions.group` returns the piece of content that the restrictions are applied to. - `content` returns the piece of content that the restrictions are applied to.</li>
    *   <li>start: The starting index of the users and groups in the returned restrictions.</li>
    *   <li>limit: The maximum number of users and the maximum number of groups, in the returned restrictions, to return per page. Note, this may be restricted by fixed system limits.</li>
    * </ul>
    */
    public ContentRestrictionArray GetContentByIDRestrictionV1(Consumer<GetContentByIDRestrictionV1OperationSpec> spec) {
        GetContentByIDRestrictionV1OperationSpec r = new GetContentByIDRestrictionV1OperationSpec(spec);
        return api.GetContentByIDRestrictionV1(r.id(), r.expand(), r.start(), r.limit());
    }

    /**
    * PutContentByIDRestrictionV1
    * Update restrictions
    * Updates restrictions for a piece of content. This removes the existing
    * restrictions and replaces them with the restrictions in the request.
    * 
    * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
    * Permission to edit the content.
    *
    * @param spec a consumer that creates the payload for this operation. Supports the following properties:
    * <ul>
    *   <li>id: The ID of the content to update restrictions for.</li>
    *   <li>expand: A multi-value parameter indicating which properties of the content restrictions (returned in response) to expand.  - `restrictions.user` returns the piece of content that the restrictions are applied to. Expanded by default. - `restrictions.group` returns the piece of content that the restrictions are applied to. Expanded by default. - `content` returns the piece of content that the restrictions are applied to.</li>
    *   <li>payload: The updated restrictions for the content.</li>
    * </ul>
    */
    public ContentRestrictionArray PutContentByIDRestrictionV1(Consumer<PutContentByIDRestrictionV1OperationSpec> spec) {
        PutContentByIDRestrictionV1OperationSpec r = new PutContentByIDRestrictionV1OperationSpec(spec);
        return api.PutContentByIDRestrictionV1(r.id(), r.expand(), r.payload());
    }

    /**
    * PostContentByIDRestrictionV1
    * Add restrictions
    * Adds restrictions to a piece of content. Note, this does not change any
    * existing restrictions on the content.
    * 
    * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
    * Permission to edit the content.
    *
    * @param spec a consumer that creates the payload for this operation. Supports the following properties:
    * <ul>
    *   <li>id: The ID of the content to add restrictions to.</li>
    *   <li>expand: A multi-value parameter indicating which properties of the content restrictions (returned in response) to expand.  - `restrictions.user` returns the piece of content that the restrictions are applied to. Expanded by default. - `restrictions.group` returns the piece of content that the restrictions are applied to. Expanded by default. - `content` returns the piece of content that the restrictions are applied to.</li>
    *   <li>payload: The restrictions to be added to the content.</li>
    * </ul>
    */
    public ContentRestrictionArray PostContentByIDRestrictionV1(Consumer<PostContentByIDRestrictionV1OperationSpec> spec) {
        PostContentByIDRestrictionV1OperationSpec r = new PostContentByIDRestrictionV1OperationSpec(spec);
        return api.PostContentByIDRestrictionV1(r.id(), r.expand(), r.payload());
    }

    /**
    * DeleteContentByIDRestrictionV1
    * Delete restrictions
    * Removes all restrictions (read and update) on a piece of content.
    * 
    * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
    * Permission to edit the content.
    *
    * @param spec a consumer that creates the payload for this operation. Supports the following properties:
    * <ul>
    *   <li>id: The ID of the content to remove restrictions from.</li>
    *   <li>expand: A multi-value parameter indicating which properties of the content restrictions (returned in response) to expand.  - `restrictions.user` returns the piece of content that the restrictions are applied to. Expanded by default. - `restrictions.group` returns the piece of content that the restrictions are applied to. Expanded by default. - `content` returns the piece of content that the restrictions are applied to.</li>
    * </ul>
    */
    public ContentRestrictionArray DeleteContentByIDRestrictionV1(Consumer<DeleteContentByIDRestrictionV1OperationSpec> spec) {
        DeleteContentByIDRestrictionV1OperationSpec r = new DeleteContentByIDRestrictionV1OperationSpec(spec);
        return api.DeleteContentByIDRestrictionV1(r.id(), r.expand());
    }

    /**
    * GetContentByIDRestrictionByOperationV1
    * Get restrictions by operation
    * Returns restrictions on a piece of content by operation. This method is
    * similar to [Get restrictions](#api-content-id-restriction-get) except that
    * the operations are properties of the return object, rather than items in
    * a results array.
    * 
    * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
    * Permission to view the content.
    *
    * @param spec a consumer that creates the payload for this operation. Supports the following properties:
    * <ul>
    *   <li>id: The ID of the content to be queried for its restrictions.</li>
    *   <li>expand: A multi-value parameter indicating which properties of the content restrictions to expand.  - `restrictions.user` returns the piece of content that the restrictions are applied to. Expanded by default. - `restrictions.group` returns the piece of content that the restrictions are applied to. Expanded by default. - `content` returns the piece of content that the restrictions are applied to.</li>
    * </ul>
    */
    public GetRestrictionsByOperation GetContentByIDRestrictionByOperationV1(Consumer<GetContentByIDRestrictionByOperationV1OperationSpec> spec) {
        GetContentByIDRestrictionByOperationV1OperationSpec r = new GetContentByIDRestrictionByOperationV1OperationSpec(spec);
        return api.GetContentByIDRestrictionByOperationV1(r.id(), r.expand());
    }

    /**
    * GetContentByIDRestrictionByOperationByOperationKeyV1
    * Get restrictions for operation
    * Returns the restictions on a piece of content for a given operation (read
    * or update).
    * 
    * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
    * Permission to view the content.
    *
    * @param spec a consumer that creates the payload for this operation. Supports the following properties:
    * <ul>
    *   <li>id: The ID of the content to be queried for its restrictions.</li>
    *   <li>operationKey: The operation type of the restrictions to be returned.</li>
    *   <li>expand: A multi-value parameter indicating which properties of the content restrictions to expand.  - `restrictions.user` returns the piece of content that the restrictions are applied to. Expanded by default. - `restrictions.group` returns the piece of content that the restrictions are applied to. Expanded by default. - `content` returns the piece of content that the restrictions are applied to.</li>
    *   <li>start: The starting index of the users and groups in the returned restrictions.</li>
    *   <li>limit: The maximum number of users and the maximum number of groups, in the returned restrictions, to return per page. Note, this may be restricted by fixed system limits.</li>
    * </ul>
    */
    public ContentRestriction GetContentByIDRestrictionByOperationByOperationKeyV1(Consumer<GetContentByIDRestrictionByOperationByOperationKeyV1OperationSpec> spec) {
        GetContentByIDRestrictionByOperationByOperationKeyV1OperationSpec r = new GetContentByIDRestrictionByOperationByOperationKeyV1OperationSpec(spec);
        return api.GetContentByIDRestrictionByOperationByOperationKeyV1(r.id(), r.operationKey(), r.expand(), r.start(), r.limit());
    }

    /**
    * GetContentByIDRestrictionByOperationByOperationKeyByGroupIDByGroupIDV1
    * Get content restriction status for group
    * Returns whether the specified content restriction applies to a group.
    * For example, if a page with `id=123` has a `read` restriction for the `123456` group id,
    * the following request will return `true`:
    * 
    * `/wiki/rest/api/content/123/restriction/byOperation/read/byGroupId/123456`
    * 
    * Note that a response of `true` does not guarantee that the group can view the page, as it does not account for
    * account-inherited restrictions, space permissions, or even product access. For more
    * information, see [Confluence permissions](https://confluence.atlassian.com/x/_AozKw).
    * 
    * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
    * Permission to view the content.
    *
    * @param spec a consumer that creates the payload for this operation. Supports the following properties:
    * <ul>
    *   <li>id: The ID of the content that the restriction applies to.</li>
    *   <li>operationKey: The operation that the restriction applies to.</li>
    *   <li>groupId: The id of the group to be queried for whether the content restriction applies to it.</li>
    * </ul>
    */
    public void GetContentByIDRestrictionByOperationByOperationKeyByGroupIDByGroupIDV1(Consumer<GetContentByIDRestrictionByOperationByOperationKeyByGroupIDByGroupIDV1OperationSpec> spec) {
        GetContentByIDRestrictionByOperationByOperationKeyByGroupIDByGroupIDV1OperationSpec r = new GetContentByIDRestrictionByOperationByOperationKeyByGroupIDByGroupIDV1OperationSpec(spec);
        api.GetContentByIDRestrictionByOperationByOperationKeyByGroupIDByGroupIDV1(r.id(), r.operationKey(), r.groupId());
    }

    /**
    * PutContentByIDRestrictionByOperationByOperationKeyByGroupIDByGroupIDV1
    * Add group to content restriction
    * Adds a group to a content restriction by Group Id. That is, grant read or update
    * permission to the group for a piece of content.
    * 
    * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
    * Permission to edit the content.
    *
    * @param spec a consumer that creates the payload for this operation. Supports the following properties:
    * <ul>
    *   <li>id: The ID of the content that the restriction applies to.</li>
    *   <li>operationKey: The operation that the restriction applies to.</li>
    *   <li>groupId: The groupId of the group to add to the content restriction.</li>
    * </ul>
    */
    public void PutContentByIDRestrictionByOperationByOperationKeyByGroupIDByGroupIDV1(Consumer<PutContentByIDRestrictionByOperationByOperationKeyByGroupIDByGroupIDV1OperationSpec> spec) {
        PutContentByIDRestrictionByOperationByOperationKeyByGroupIDByGroupIDV1OperationSpec r = new PutContentByIDRestrictionByOperationByOperationKeyByGroupIDByGroupIDV1OperationSpec(spec);
        api.PutContentByIDRestrictionByOperationByOperationKeyByGroupIDByGroupIDV1(r.id(), r.operationKey(), r.groupId());
    }

    /**
    * DeleteContentByIDRestrictionByOperationByOperationKeyByGroupIDByGroupIDV1
    * Remove group from content restriction
    * Removes a group from a content restriction. That is, remove read or update
    * permission for the group for a piece of content.
    * 
    * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
    * Permission to edit the content.
    *
    * @param spec a consumer that creates the payload for this operation. Supports the following properties:
    * <ul>
    *   <li>id: The ID of the content that the restriction applies to.</li>
    *   <li>operationKey: The operation that the restriction applies to.</li>
    *   <li>groupId: The id of the group to remove from the content restriction.</li>
    * </ul>
    */
    public void DeleteContentByIDRestrictionByOperationByOperationKeyByGroupIDByGroupIDV1(Consumer<DeleteContentByIDRestrictionByOperationByOperationKeyByGroupIDByGroupIDV1OperationSpec> spec) {
        DeleteContentByIDRestrictionByOperationByOperationKeyByGroupIDByGroupIDV1OperationSpec r = new DeleteContentByIDRestrictionByOperationByOperationKeyByGroupIDByGroupIDV1OperationSpec(spec);
        api.DeleteContentByIDRestrictionByOperationByOperationKeyByGroupIDByGroupIDV1(r.id(), r.operationKey(), r.groupId());
    }

    /**
    * GetContentByIDRestrictionByOperationByOperationKeyUserV1
    * Get content restriction status for user
    * Returns whether the specified content restriction applies to a user.
    * For example, if a page with `id=123` has a `read` restriction for a user with an account ID of
    * `384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192`, the following request will return `true`:
    * 
    * `/wiki/rest/api/content/123/restriction/byOperation/read/user?accountId=384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192`
    * 
    * Note that a response of `true` does not guarantee that the user can view the page, as it does not account for
    * account-inherited restrictions, space permissions, or even product access. For more
    * information, see [Confluence permissions](https://confluence.atlassian.com/x/_AozKw).
    * 
    * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
    * Permission to view the content.
    *
    * @param spec a consumer that creates the payload for this operation. Supports the following properties:
    * <ul>
    *   <li>id: The ID of the content that the restriction applies to.</li>
    *   <li>operationKey: The operation that is restricted.</li>
    *   <li>key: This parameter is no longer available and will be removed from the documentation soon. Use `accountId` instead. See the [deprecation notice](/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/) for details.</li>
    *   <li>username: This parameter is no longer available and will be removed from the documentation soon. Use `accountId` instead. See the [deprecation notice](/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/) for details.</li>
    *   <li>accountId: The account ID of the user. The accountId uniquely identifies the user across all Atlassian products. For example, `384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192`.</li>
    * </ul>
    */
    public void GetContentByIDRestrictionByOperationByOperationKeyUserV1(Consumer<GetContentByIDRestrictionByOperationByOperationKeyUserV1OperationSpec> spec) {
        GetContentByIDRestrictionByOperationByOperationKeyUserV1OperationSpec r = new GetContentByIDRestrictionByOperationByOperationKeyUserV1OperationSpec(spec);
        api.GetContentByIDRestrictionByOperationByOperationKeyUserV1(r.id(), r.operationKey(), r.key(), r.username(), r.accountId());
    }

    /**
    * PutContentByIDRestrictionByOperationByOperationKeyUserV1
    * Add user to content restriction
    * Adds a user to a content restriction. That is, grant read or update
    * permission to the user for a piece of content.
    * 
    * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
    * Permission to edit the content.
    *
    * @param spec a consumer that creates the payload for this operation. Supports the following properties:
    * <ul>
    *   <li>id: The ID of the content that the restriction applies to.</li>
    *   <li>operationKey: The operation that the restriction applies to.</li>
    *   <li>key: This parameter is no longer available and will be removed from the documentation soon. Use `accountId` instead. See the [deprecation notice](/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/) for details.</li>
    *   <li>username: This parameter is no longer available and will be removed from the documentation soon. Use `accountId` instead. See the [deprecation notice](/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/) for details.</li>
    *   <li>accountId: The account ID of the user. The accountId uniquely identifies the user across all Atlassian products. For example, `384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192`.</li>
    * </ul>
    */
    public void PutContentByIDRestrictionByOperationByOperationKeyUserV1(Consumer<PutContentByIDRestrictionByOperationByOperationKeyUserV1OperationSpec> spec) {
        PutContentByIDRestrictionByOperationByOperationKeyUserV1OperationSpec r = new PutContentByIDRestrictionByOperationByOperationKeyUserV1OperationSpec(spec);
        api.PutContentByIDRestrictionByOperationByOperationKeyUserV1(r.id(), r.operationKey(), r.key(), r.username(), r.accountId());
    }

    /**
    * DeleteContentByIDRestrictionByOperationByOperationKeyUserV1
    * Remove user from content restriction
    * Removes a group from a content restriction. That is, remove read or update
    * permission for the group for a piece of content.
    * 
    * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
    * Permission to edit the content.
    *
    * @param spec a consumer that creates the payload for this operation. Supports the following properties:
    * <ul>
    *   <li>id: The ID of the content that the restriction applies to.</li>
    *   <li>operationKey: The operation that the restriction applies to.</li>
    *   <li>key: This parameter is no longer available and will be removed from the documentation soon. Use `accountId` instead. See the [deprecation notice](/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/) for details.</li>
    *   <li>username: This parameter is no longer available and will be removed from the documentation soon. Use `accountId` instead. See the [deprecation notice](/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/) for details.</li>
    *   <li>accountId: The account ID of the user. The accountId uniquely identifies the user across all Atlassian products. For example, `384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192`.</li>
    * </ul>
    */
    public void DeleteContentByIDRestrictionByOperationByOperationKeyUserV1(Consumer<DeleteContentByIDRestrictionByOperationByOperationKeyUserV1OperationSpec> spec) {
        DeleteContentByIDRestrictionByOperationByOperationKeyUserV1OperationSpec r = new DeleteContentByIDRestrictionByOperationByOperationKeyUserV1OperationSpec(spec);
        api.DeleteContentByIDRestrictionByOperationByOperationKeyUserV1(r.id(), r.operationKey(), r.key(), r.username(), r.accountId());
    }

}
