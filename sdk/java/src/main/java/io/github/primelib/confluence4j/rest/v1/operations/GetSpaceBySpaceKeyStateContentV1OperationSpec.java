// WARNING: This file was generated by PrimeCodeGen. DO NOT EDIT.

package io.github.primelib.confluence4j.rest.v1.operations;

import java.util.List;
import java.util.Objects;
import java.util.function.Consumer;
import javax.annotation.processing.Generated;
import lombok.EqualsAndHashCode;
import lombok.Getter;
import lombok.Setter;
import lombok.ToString;
import lombok.experimental.Accessors;
import org.jetbrains.annotations.ApiStatus;
import org.jspecify.annotations.NonNull;
import org.jspecify.annotations.Nullable;

/**
 * GetSpaceBySpaceKeyStateContentV1
 * <p>
 * Returns all content that has the provided content state in a space.
 * 
 * If the expand query parameter is used with the `body.export_view` and/or `body.styled_view` properties, then the query limit parameter will be restricted to a maximum value of 25.
 * 
 * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
 * 'View' permission for the space.
 *
 */
@Getter
@Setter
@EqualsAndHashCode
@ToString
@Accessors(fluent = true, chain = true)
@Generated(value = "io.github.primelib.primecodegen")
public class GetSpaceBySpaceKeyStateContentV1OperationSpec {
    /**
     * allows to disable validation of the spec, use with care!
     */
    @ApiStatus.Experimental
    public static Boolean VALIDATION_ENABLED = true;

    /**
     * The key of the space to be queried for its content state settings.
     *
     */
    @NonNull
    private String spaceKey;

    /**
     * The id of the content state to filter content by
     *
     */
    @NonNull
    private Integer stateId;

    /**
     * A multi-value parameter indicating which properties of the content to expand.
     * Options include: space, version, history, children, etc.
     * 
     * Ex: space,version
     *
     */
    @Nullable
    private List<String> expand;

    /**
     * Maximum number of results to return
     *
     */
    @Nullable
    private Integer limit;

    /**
     * Number of result to start returning. (0 indexed)
     *
     */
    @Nullable
    private Integer start;

    /**
     * Constructs a validated instance of {@link GetSpaceBySpaceKeyStateContentV1OperationSpec}.
     *
     * @param spec the specification to process
     */
    @ApiStatus.Internal
    public GetSpaceBySpaceKeyStateContentV1OperationSpec(Consumer<GetSpaceBySpaceKeyStateContentV1OperationSpec> spec) {
        spec.accept(this);
        if (VALIDATION_ENABLED)
            validate();
    }

    /**
     * Validates the Spec, will throw a exception if required parameters are missing
     *
     * @throws NullPointerException
     */
    public void validate() {
        Objects.requireNonNull(spaceKey, "spaceKey is a required parameter!");
        Objects.requireNonNull(stateId, "stateId is a required parameter!");
    }
}
