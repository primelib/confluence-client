// WARNING: This file was generated by PrimeCodeGen. DO NOT EDIT.

package io.github.primelib.confluence4j.rest.v1.operations;

import java.util.Objects;
import java.util.function.Consumer;
import javax.annotation.processing.Generated;
import lombok.EqualsAndHashCode;
import lombok.Getter;
import lombok.Setter;
import lombok.ToString;
import lombok.experimental.Accessors;
import org.jetbrains.annotations.ApiStatus;
import org.jspecify.annotations.NonNull;
import org.jspecify.annotations.Nullable;

/**
 * DeleteRelationByRelationNameFromBySourceTypeBySourceKeyToByTargetTypeByTargetKeyV1
 * <p>
 * Deletes a relationship between two entities (user, space, content).
 * 
 * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
 * Permission to access the Confluence site ('Can use' global permission).
 * For favourite relationships, the current user can only delete their own
 * favourite relationships. A space administrator can delete favourite
 * relationships for any user.
 *
 */
@Getter
@Setter
@EqualsAndHashCode
@ToString
@Accessors(fluent = true, chain = true)
@Generated(value = "io.github.primelib.primecodegen")
public class DeleteRelationByRelationNameFromBySourceTypeBySourceKeyToByTargetTypeByTargetKeyV1OperationSpec {
    /**
     * allows to disable validation of the spec, use with care!
     */
    @ApiStatus.Experimental
    public static Boolean VALIDATION_ENABLED = true;

    /**
     * The name of the relationship.
     *
     */
    @NonNull
    private String relationName;

    /**
     * The source entity type of the relationship. This must be 'user', if
     * the `relationName` is 'favourite'.
     *
     */
    @NonNull
    private String sourceType;

    /**
     * - The identifier for the source entity:
     * 
     * - If `sourceType` is `user`, then specify either `current` (logged-in user), the user key of the user, or
     * the account ID of the user. Note that the user key has been deprecated in favor of the account ID for this parameter. See the
     * [migration guide](https://developer.atlassian.com/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/)
     * for details.
     * - If `sourceType` is 'content', then specify the content ID.
     * - If `sourceType` is 'space', then specify the space key.
     *
     */
    @NonNull
    private String sourceKey;

    /**
     * The target entity type of the relationship. This must be 'space' or
     * 'content', if the `relationName` is 'favourite'.
     *
     */
    @NonNull
    private String targetType;

    /**
     * - The identifier for the target entity:
     * 
     * - If `targetType` is `user`, then specify either `current` (logged-in user), the user key of the user, or
     * the account ID of the user. Note that the user key has been deprecated in favor of the account ID for this parameter. See the
     * [migration guide](https://developer.atlassian.com/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/)
     * for details.
     * - If `targetType` is 'content', then specify the content ID.
     * - If `targetType` is 'space', then specify the space key.
     *
     */
    @NonNull
    private String targetKey;

    /**
     * The status of the source. This parameter is only used when the
     * `sourceType` is 'content'.
     *
     */
    @Nullable
    private String sourceStatus;

    /**
     * The status of the target. This parameter is only used when the
     * `targetType` is 'content'.
     *
     */
    @Nullable
    private String targetStatus;

    /**
     * The version of the source. This parameter is only used when the
     * `sourceType` is 'content' and the `sourceStatus` is 'historical'.
     *
     */
    @Nullable
    private Integer sourceVersion;

    /**
     * The version of the target. This parameter is only used when the
     * `targetType` is 'content' and the `targetStatus` is 'historical'.
     *
     */
    @Nullable
    private Integer targetVersion;

    /**
     * Constructs a validated instance of {@link DeleteRelationByRelationNameFromBySourceTypeBySourceKeyToByTargetTypeByTargetKeyV1OperationSpec}.
     *
     * @param spec the specification to process
     */
    @ApiStatus.Internal
    public DeleteRelationByRelationNameFromBySourceTypeBySourceKeyToByTargetTypeByTargetKeyV1OperationSpec(Consumer<DeleteRelationByRelationNameFromBySourceTypeBySourceKeyToByTargetTypeByTargetKeyV1OperationSpec> spec) {
        spec.accept(this);
        if (VALIDATION_ENABLED)
            validate();
    }

    /**
     * Validates the Spec, will throw a exception if required parameters are missing
     *
     * @throws NullPointerException
     */
    public void validate() {
        Objects.requireNonNull(relationName, "relationName is a required parameter!");
        Objects.requireNonNull(sourceType, "sourceType is a required parameter!");
        Objects.requireNonNull(sourceKey, "sourceKey is a required parameter!");
        Objects.requireNonNull(targetType, "targetType is a required parameter!");
        Objects.requireNonNull(targetKey, "targetKey is a required parameter!");
    }
}
