// WARNING: This file was generated by PrimeCodeGen. DO NOT EDIT.

package io.github.primelib.confluence4j.rest.v1.client;

import io.github.primelib.confluence4j.rest.v1.models.LabelArray;
import io.github.primelib.confluence4j.rest.v1.operations.DeleteContentByIDLabelByLabelV1OperationSpec;
import io.github.primelib.confluence4j.rest.v1.operations.DeleteContentByIDLabelV1OperationSpec;
import io.github.primelib.confluence4j.rest.v1.operations.PostContentByIDLabelV1OperationSpec;
import java.util.function.Consumer;
import javax.annotation.processing.Generated;

/**
 * ConfluenceRestClientContentLabelsConsumerApi
 */
@Generated(value = "io.github.primelib.primecodegen")
public class ConfluenceRestClientContentLabelsConsumerApi {
    private final ConfluenceRestClientContentLabelsApi api;

    public ConfluenceRestClientContentLabelsConsumerApi(ConfluenceRestClientContentLabelsApi api) {
        this.api = api;
    }


    /**
    * PostContentByIDLabelV1
    * Add labels to content
    * Adds labels to a piece of content. Does not modify the existing labels.
    * 
    * Notes:
    * 
    * - Labels can also be added when creating content ([Create content](#api-content-post)).
    * - Labels can be updated when updating content ([Update content](#api-content-id-put)).
    * This will delete the existing labels and replace them with the labels in
    * the request.
    * 
    * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
    * Permission to update the content.
    *
    * @param spec a consumer that creates the payload for this operation. Supports the following properties:
    * <ul>
    *   <li>id: The ID of the content that will have labels added to it.</li>
    *   <li>payload: The labels to add to the content.</li>
    * </ul>
    */
    public LabelArray PostContentByIDLabelV1(Consumer<PostContentByIDLabelV1OperationSpec> spec) {
        PostContentByIDLabelV1OperationSpec r = new PostContentByIDLabelV1OperationSpec(spec);
        return api.PostContentByIDLabelV1(r.id(), r.payload());
    }

    /**
    * DeleteContentByIDLabelV1
    * Remove label from content using query parameter
    * Removes a label from a piece of content. Labels can't be deleted from archived content.
    * This is similar to [Remove label from content](#api-content-id-label-label-delete)
    * except that the label name is specified via a query parameter.
    * 
    * Use this method if the label name has "/" characters, as
    * [Remove label from content using query parameter](#api-content-id-label-delete)
    * does not accept "/" characters for the label name.
    * 
    * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
    * Permission to update the content.
    *
    * @param spec a consumer that creates the payload for this operation. Supports the following properties:
    * <ul>
    *   <li>id: The ID of the content that the label will be removed from.</li>
    *   <li>name: The name of the label to be removed.</li>
    * </ul>
    */
    public void DeleteContentByIDLabelV1(Consumer<DeleteContentByIDLabelV1OperationSpec> spec) {
        DeleteContentByIDLabelV1OperationSpec r = new DeleteContentByIDLabelV1OperationSpec(spec);
        api.DeleteContentByIDLabelV1(r.id(), r.name());
    }

    /**
    * DeleteContentByIDLabelByLabelV1
    * Remove label from content
    * Removes a label from a piece of content. Labels can't be deleted from archived content.
    * This is similar to [Remove label from content using query parameter](#api-content-id-label-delete)
    * except that the label name is specified via a path parameter.
    * 
    * Use this method if the label name does not have "/" characters, as the path
    * parameter does not accept "/" characters for security reasons. Otherwise,
    * use [Remove label from content using query parameter](#api-content-id-label-delete).
    * 
    * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
    * Permission to update the content.
    *
    * @param spec a consumer that creates the payload for this operation. Supports the following properties:
    * <ul>
    *   <li>id: The ID of the content that the label will be removed from.</li>
    *   <li>label: The name of the label to be removed.</li>
    * </ul>
    */
    public void DeleteContentByIDLabelByLabelV1(Consumer<DeleteContentByIDLabelByLabelV1OperationSpec> spec) {
        DeleteContentByIDLabelByLabelV1OperationSpec r = new DeleteContentByIDLabelByLabelV1OperationSpec(spec);
        api.DeleteContentByIDLabelByLabelV1(r.id(), r.label());
    }

}
