// WARNING: This file was generated by PrimeCodeGen. DO NOT EDIT.

package io.github.primelib.confluence4j.rest.v1.client;

import feign.Headers;
import feign.Param;
import feign.RequestLine;
import io.github.primelib.confluence4j.rest.v1.models.ContentPermissionRequest;
import io.github.primelib.confluence4j.rest.v1.models.PermissionCheckResponse;
import javax.annotation.processing.Generated;
import org.jetbrains.annotations.NotNull;

/**
 * ConfluenceRestClientContentPermissionsApi
 */
@Generated(value = "io.github.primelib.primecodegen")
public interface ConfluenceRestClientContentPermissionsApi {

    /**
    * PostContentByIDPermissionCheckV1
    * Check content permissions
    * Check if a user or a group can perform an operation to the specified content. The `operation` to check
    * must be provided. The userâ€™s account ID or the ID of the group can be provided in the `subject` to check
    * permissions against a specified user or group. The following permission checks are done to make sure that the
    * user or group has the proper access:
    * 
    * - site permissions
    * - space permissions
    * - content restrictions
    * 
    * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
    * Permission to access the Confluence site ('Can use' global permission) if checking permission for self,
    * otherwise 'Confluence Administrator' global permission is required.
    *
    * @param id The ID of the content to check permissions against.
    * @param payload The content permission request.
    */
    @RequestLine("POST /rest/api/content/{id}/permission/check")
    @Headers({
        "Content-Type: application/json",
        "Accept: application/json"
    })
    PermissionCheckResponse PostContentByIDPermissionCheckV1(
            @NotNull @Param("id") String id,
            @NotNull ContentPermissionRequest payload
    );

}
