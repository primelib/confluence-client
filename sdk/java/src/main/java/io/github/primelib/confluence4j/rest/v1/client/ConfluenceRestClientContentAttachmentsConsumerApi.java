// WARNING: This file was generated by PrimeCodeGen. DO NOT EDIT.

package io.github.primelib.confluence4j.rest.v1.client;

import io.github.primelib.confluence4j.rest.v1.models.Content;
import io.github.primelib.confluence4j.rest.v1.operations.GetContentByIDChildAttachmentByAttachmentIDDownloadV1OperationSpec;
import io.github.primelib.confluence4j.rest.v1.operations.PutContentByIDChildAttachmentByAttachmentIDV1OperationSpec;
import java.util.function.Consumer;
import javax.annotation.processing.Generated;

/**
 * ConfluenceRestClientContentAttachmentsConsumerApi
 */
@Generated(value = "io.github.primelib.primecodegen")
public class ConfluenceRestClientContentAttachmentsConsumerApi {
    private final ConfluenceRestClientContentAttachmentsApi api;

    public ConfluenceRestClientContentAttachmentsConsumerApi(ConfluenceRestClientContentAttachmentsApi api) {
        this.api = api;
    }


    /**
    * PutContentByIDChildAttachmentByAttachmentIDV1
    * Update attachment properties
    * Updates the attachment properties, i.e. the non-binary data of an attachment
    * like the filename, media-type, comment, and parent container.
    * 
    * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
    * Permission to update the content.
    *
    * @param spec a consumer that creates the payload for this operation. Supports the following properties:
    * <ul>
    *   <li>id: The ID of the content that the attachment is attached to.</li>
    *   <li>attachmentId: The ID of the attachment to update.</li>
    *   <li>payload: The details of the attachment to be updated.</li>
    * </ul>
    */
    public Content PutContentByIDChildAttachmentByAttachmentIDV1(Consumer<PutContentByIDChildAttachmentByAttachmentIDV1OperationSpec> spec) {
        PutContentByIDChildAttachmentByAttachmentIDV1OperationSpec r = new PutContentByIDChildAttachmentByAttachmentIDV1OperationSpec(spec);
        return api.PutContentByIDChildAttachmentByAttachmentIDV1(r.id(), r.attachmentId(), r.payload());
    }

    /**
    * GetContentByIDChildAttachmentByAttachmentIDDownloadV1
    * Get URI to download attachment
    * Redirects the client to a URL that serves an attachment's binary data.
    *
    * @param spec a consumer that creates the payload for this operation. Supports the following properties:
    * <ul>
    *   <li>id: The ID of the content that the attachment is attached to.</li>
    *   <li>attachmentId: The ID of the attachment to download.</li>
    *   <li>version: The version of the attachment. If this parameter is absent, the redirect URI will download the latest version of the attachment.</li>
    *   <li>status: The statuses allowed on the retrieved attachment. If this parameter is absent, it will default to `current`.</li>
    * </ul>
    */
    public void GetContentByIDChildAttachmentByAttachmentIDDownloadV1(Consumer<GetContentByIDChildAttachmentByAttachmentIDDownloadV1OperationSpec> spec) {
        GetContentByIDChildAttachmentByAttachmentIDDownloadV1OperationSpec r = new GetContentByIDChildAttachmentByAttachmentIDDownloadV1OperationSpec(spec);
        api.GetContentByIDChildAttachmentByAttachmentIDDownloadV1(r.id(), r.attachmentId(), r.version(), r.status());
    }

}
