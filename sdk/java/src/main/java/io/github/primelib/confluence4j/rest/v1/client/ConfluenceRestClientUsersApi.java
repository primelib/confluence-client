// WARNING: This file was generated by PrimeCodeGen. DO NOT EDIT.

package io.github.primelib.confluence4j.rest.v1.client;

import feign.Headers;
import feign.Param;
import feign.RequestLine;
import io.github.primelib.confluence4j.rest.v1.models.AccountIDEmailRecord;
import io.github.primelib.confluence4j.rest.v1.models.BulkUserLookupArray;
import io.github.primelib.confluence4j.rest.v1.models.GroupArrayWithLinks;
import io.github.primelib.confluence4j.rest.v1.models.UserAnonymous;
import java.util.List;
import java.util.Map;
import javax.annotation.processing.Generated;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;

/**
 * ConfluenceRestClientUsersApi
 */
@Generated(value = "io.github.primelib.primecodegen")
public interface ConfluenceRestClientUsersApi {

    /**
    * GetUserV1
    * Get user
    * Returns a user. This includes information about the user, such as the
    * display name, account ID, profile picture, and more. The information returned may be
    * restricted by the user's profile visibility settings.
    * 
    * **Note:** to add, edit, or delete users in your organization, see the
    * [user management REST API](/cloud/admin/user-management/about/).
    * 
    * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
    * Permission to access the Confluence site ('Can use' global permission).
    *
    * @param accountId The account ID of the user. The accountId uniquely identifies the user across all Atlassian products.
    * For example, `384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192`.
    * @param expand A multi-value parameter indicating which properties of the user to
    * expand.
    * 
    *   - `operations` returns the operations that the user is allowed to do.
    *   - `personalSpace` returns the user's personal space, if it exists.
    *   - `isExternalCollaborator`(@deprecated) see `isGuest` in response to find out whether the user is a guest.
    */
    @RequestLine("GET /wiki/rest/api/user?accountId={accountId}&expand={expand}")
    @Headers({
        "Accept: application/json"
    })
    Map<String, Object> GetUserV1(
            @NotNull @Param("accountId") String accountId,
            @Nullable @Param("expand") List<String> expand
    );

    /**
    * GetUserAnonymousV1
    * Get anonymous user
    * Returns information about how anonymous users are represented, like the
    * profile picture and display name.
    * 
    * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
    * Permission to access the Confluence site ('Can use' global permission).
    *
    * @param expand A multi-value parameter indicating which properties of the user to
    * expand.
    * 
    *   - `operations` returns the operations that the user is allowed to do.
    */
    @RequestLine("GET /wiki/rest/api/user/anonymous?expand={expand}")
    @Headers({
        "Accept: application/json"
    })
    UserAnonymous GetUserAnonymousV1(
            @Nullable @Param("expand") List<String> expand
    );

    /**
    * GetUserCurrentV1
    * Get current user
    * Returns the currently logged-in user. This includes information about
    * the user, like the display name, userKey, account ID, profile picture,
    * and more.
    * 
    * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
    * Permission to access the Confluence site ('Can use' global permission).
    *
    * @param expand A multi-value parameter indicating which properties of the user to
    * expand.
    * 
    *   - `operations` returns the operations that the user is allowed to do.
    *   - `personalSpace` returns the user's personal space, if it exists.
    *   - `isExternalCollaborator`(@deprecated) see `isGuest` in response to find out whether the user is a guest.
    */
    @RequestLine("GET /wiki/rest/api/user/current?expand={expand}")
    @Headers({
        "Accept: application/json"
    })
    Map<String, Object> GetUserCurrentV1(
            @Nullable @Param("expand") List<String> expand
    );

    /**
    * GetUserMemberofV1
    * Get group memberships for user
    * Returns the groups that a user is a member of.
    * 
    * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
    * Permission to access the Confluence site ('Can use' global permission).
    *
    * @param accountId The account ID of the user. The accountId uniquely identifies the user across all Atlassian products.
    * For example, `384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192`.
    * @param start The starting index of the returned groups.
    * @param limit The maximum number of groups to return per page.
    * Note, this may be restricted by fixed system limits.
    */
    @RequestLine("GET /wiki/rest/api/user/memberof?accountId={accountId}&start={start}&limit={limit}")
    @Headers({
        "Accept: application/json"
    })
    GroupArrayWithLinks GetUserMemberofV1(
            @NotNull @Param("accountId") String accountId,
            @Nullable @Param("start") Integer start,
            @Nullable @Param("limit") Integer limit
    );

    /**
    * GetUserBulkV1
    * Get multiple users using ids
    * Returns user details for the ids provided in the request.
    * Currently this API returns a maximum of 100 results.
    * If more than 100 account ids are passed in, then the first 100 will be returned.
    * 
    * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
    * Permission to access the Confluence site ('Can use' global permission).
    *
    * @param accountId A list of accountId's of users to be returned.
    * @param expand A multi-value parameter indicating which properties of the user to
    * expand.
    * 
    *   - `operations` returns the operations that the user is allowed to do.
    *   - `personalSpace` returns the user's personal space, if it exists.
    *   - `isExternalCollaborator`(@deprecated) use `isGuest` instead to return whether the user is a guest.
    */
    @RequestLine("GET /wiki/rest/api/user/bulk?accountId={accountId}&expand={expand}")
    @Headers({
        "Accept: application/json"
    })
    BulkUserLookupArray GetUserBulkV1(
            @NotNull @Param("accountId") String accountId,
            @Nullable @Param("expand") List<String> expand
    );

    /**
    * GetUserEmailV1
    * Get user email address
    * Returns a user's email address regardless of the user’s profile visibility settings. For Connect apps, this API is only available to apps approved by
    * Atlassian, according to these [guidelines](https://community.developer.atlassian.com/t/guidelines-for-requesting-access-to-email-address/27603).
    * For Forge apps, this API only supports access via asApp() requests.
    * 
    * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
    * Permission to access the Confluence site ('Can use' global permission).
    *
    * @param accountId The account ID of the user, which uniquely identifies the user across all Atlassian products.
    * For example, `384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192`. Required.
    */
    @RequestLine("GET /wiki/rest/api/user/email?accountId={accountId}")
    @Headers({
        "Accept: application/json"
    })
    AccountIDEmailRecord GetUserEmailV1(
            @NotNull @Param("accountId") String accountId
    );

    /**
    * GetUserEmailBulkV1
    * Get user email addresses in batch
    * Returns a user's email address regardless of the user’s profile visibility settings. For Connect apps, this API is only available to apps approved by
    * Atlassian, according to these [guidelines](https://community.developer.atlassian.com/t/guidelines-for-requesting-access-to-email-address/27603).
    * For Forge apps, this API only supports access via asApp() requests.
    * 
    * Any accounts which are not available will not be included in the result.
    * 
    * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
    * Permission to access the Confluence site ('Can use' global permission).
    *
    * @param accountId The account IDs of the users.
    */
    @RequestLine("GET /wiki/rest/api/user/email/bulk?accountId={accountId}")
    @Headers({
        "Accept: application/json"
    })
    List<AccountIDEmailRecord> GetUserEmailBulkV1(
            @NotNull @Param("accountId") List<String> accountId
    );

}
