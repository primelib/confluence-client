// WARNING: This file was generated by PrimeCodeGen. DO NOT EDIT.

package io.github.primelib.confluence4j.rest.v1.client;

import feign.Headers;
import feign.Param;
import feign.RequestLine;
import io.github.primelib.confluence4j.rest.v1.models.Version;
import io.github.primelib.confluence4j.rest.v1.models.VersionRestore;
import java.util.List;
import javax.annotation.processing.Generated;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;

/**
 * ConfluenceRestClientContentVersionsApi
 */
@Generated(value = "io.github.primelib.primecodegen")
public interface ConfluenceRestClientContentVersionsApi {

    /**
    * PostContentByIDVersionV1
    * Restore content version
    * Restores a historical version to be the latest version. That is, a new version
    * is created with the content of the historical version.
    * 
    * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
    * Permission to update the content.
    *
    * @param id The ID of the content for which the history will be restored.
    * @param expand A multi-value parameter indicating which properties of the content to expand. By default, the `content`
    * object is expanded.
    * 
    * - `collaborators` returns the users that collaborated on the version.
    * - `content` returns the content for the version.
    * @param payload The content version to be restored.
    */
    @RequestLine("POST /rest/api/content/{id}/version?expand={expand}")
    @Headers({
        "Content-Type: application/json",
        "Accept: application/json"
    })
    Version PostContentByIDVersionV1(
            @NotNull @Param("id") String id,
            @Nullable @Param("expand") List<String> expand,
            @NotNull VersionRestore payload
    );

    /**
    * DeleteContentByIDVersionByVersionNumberV1
    * Delete content version
    * Delete a historical version. This does not delete the changes made to the
    * content in that version, rather the changes for the deleted version are
    * rolled up into the next version. Note, you cannot delete the current version.
    * 
    * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
    * Permission to update the content.
    *
    * @param id The ID of the content that the version will be deleted from.
    * @param versionNumber The number of the version to be deleted. The version number starts
    * from 1 up to current version.
    */
    @RequestLine("DELETE /rest/api/content/{id}/version/{versionNumber}")
    void DeleteContentByIDVersionByVersionNumberV1(
            @NotNull @Param("id") String id,
            @NotNull @Param("versionNumber") Integer versionNumber
    );

}
