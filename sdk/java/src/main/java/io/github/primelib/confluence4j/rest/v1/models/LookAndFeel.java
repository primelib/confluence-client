// WARNING: This file was generated by PrimeCodeGen. DO NOT EDIT.

package io.github.primelib.confluence4j.rest.v1.models;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.util.Map;
import java.util.function.Consumer;
import javax.annotation.processing.Generated;
import lombok.AccessLevel;
import lombok.EqualsAndHashCode;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import lombok.ToString;
import lombok.experimental.Accessors;
import org.jetbrains.annotations.ApiStatus;

/**
 * LookAndFeel
 * <p>
 * Look and feel settings returned after an update.
 *
 */
@Getter
@Setter
@EqualsAndHashCode
@ToString
@Accessors(fluent = true, chain = true)
@NoArgsConstructor(access = AccessLevel.PROTECTED, force = true)
@JsonTypeName("LookAndFeel")
@JsonPropertyOrder({
    "headings",
    "links",
    "menus",
    "header",
    "horizontalHeader",
    "content",
    "bordersAndDividers",
    "spaceReference",
    "Links"
})
@Generated(value = "io.github.primelib.primecodegen")
public class LookAndFeel {

    @JsonProperty("headings")
    protected Headings headings;

    @JsonProperty("links")
    protected Links9496B4 links;

    @JsonProperty("menus")
    protected MenusLookAndFeel menus;

    @JsonProperty("header")
    protected HeaderLookAndFeel header;

    @JsonProperty("horizontalHeader")
    protected HorizontalHeaderLookAndFeel horizontalHeader;

    @JsonProperty("content")
    protected ContentLookAndFeel content;

    @JsonProperty("bordersAndDividers")
    protected BordersAndDivIDErs bordersAndDividers;

    @JsonProperty("spaceReference")
    protected Object spaceReference;

    @JsonProperty("_links")
    protected Map<String, Object> Links;

    /**
     * Constructs a validated instance of {@link LookAndFeel}.
     *
     * @param spec the specification to process
     */
    public LookAndFeel(Consumer<LookAndFeel> spec) {
        super();
        spec.accept(this);
    }

    /**
     * Constructs a validated instance of {@link LookAndFeel}.
     * <p>
     * NOTE: This constructor is not considered stable and may change if the model is updated. Consider using {@link #LookAndFeel(Consumer)} instead.
     * @param headings headings
     * @param links links
     * @param menus menus
     * @param header header
     * @param horizontalHeader horizontalHeader
     * @param content content
     * @param bordersAndDividers bordersAndDividers
     * @param spaceReference spaceReference
     * @param Links Links
     */
    @ApiStatus.Internal
    public LookAndFeel(Headings headings, Links9496B4 links, MenusLookAndFeel menus, HeaderLookAndFeel header, HorizontalHeaderLookAndFeel horizontalHeader, ContentLookAndFeel content, BordersAndDivIDErs bordersAndDividers, Object spaceReference, Map<String, Object> Links) {
        this.headings = headings;
        this.links = links;
        this.menus = menus;
        this.header = header;
        this.horizontalHeader = horizontalHeader;
        this.content = content;
        this.bordersAndDividers = bordersAndDividers;
        this.spaceReference = spaceReference;
        this.Links = Links;
    }
}
