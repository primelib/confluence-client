// WARNING: This file was generated by PrimeCodeGen. DO NOT EDIT.

package io.github.primelib.confluence4j.rest.v1.models;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.util.List;
import java.util.Map;
import java.util.function.Consumer;
import javax.annotation.processing.Generated;
import lombok.AccessLevel;
import lombok.EqualsAndHashCode;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import lombok.ToString;
import lombok.experimental.Accessors;
import org.jetbrains.annotations.ApiStatus;

/**
 * ContentCreate
 *
 */
@Getter
@Setter
@EqualsAndHashCode
@ToString
@Accessors(fluent = true, chain = true)
@NoArgsConstructor(access = AccessLevel.PROTECTED, force = true)
@JsonTypeName("ContentCreate")
@JsonPropertyOrder({
    "id",
    "title",
    "type",
    "space",
    "status",
    "container",
    "ancestors",
    "body"
})
@Generated(value = "io.github.primelib.primecodegen")
public class ContentCreate {

    /**
     * The ID of the draft content. Required when publishing a draft.
     */
    @JsonProperty("id")
    protected String id;

    @JsonProperty("title")
    protected String title;

    /**
     * The type of the new content. Custom content types defined by apps are also supported. eg. 'page', 'blogpost', 'comment' etc.
     */
    @JsonProperty("type")
    protected String type;

    /**
     * The space that the content is being created in.
     */
    @JsonProperty("space")
    protected Spacecc1E40 space;

    /**
     * The status of the new content.
     */
    @JsonProperty("status")
    protected String status;

    /**
     * The container of the content. Required if type is `comment` or certain types of
custom content. If you are trying to create a comment that is a child of another comment,
specify the parent comment in the ancestors field, not in this field.
     */
    @JsonProperty("container")
    protected Map<String, Object> container;

    /**
     * The parent content of the new content.  If you are creating a top-level `page` or `comment`,
this can be left blank. If you are creating a child page, this is where the parent page id goes.
If you are creating a child comment, this is where the parent comment id goes. Only one parent
content id can be specified.
     */
    @JsonProperty("ancestors")
    protected List<Map<String, Object>> ancestors;

    /**
     * The body of the new content. Does not apply to attachments.
Only one body format should be specified as the property for
this object, e.g. `storage`.

Note, `editor2` format is used by Atlassian only. `anonymous_export_view` is
the same as `export_view` format but only content viewable by an anonymous
user is included.
     */
    @JsonProperty("body")
    protected Body5304Ad body;

    /**
     * Constructs a validated instance of {@link ContentCreate}.
     *
     * @param spec the specification to process
     */
    public ContentCreate(Consumer<ContentCreate> spec) {
        super();
        spec.accept(this);
    }

    /**
     * Constructs a validated instance of {@link ContentCreate}.
     * <p>
     * NOTE: This constructor is not considered stable and may change if the model is updated. Consider using {@link #ContentCreate(Consumer)} instead.
     * @param id The ID of the draft content. Required when publishing a draft.
     * @param title title
     * @param type The type of the new content. Custom content types defined by apps are also supported. eg. 'page', 'blogpost', 'comment' etc.
     * @param space The space that the content is being created in.
     * @param status The status of the new content.
     * @param container The container of the content. Required if type is `comment` or certain types of
custom content. If you are trying to create a comment that is a child of another comment,
specify the parent comment in the ancestors field, not in this field.
     * @param ancestors The parent content of the new content.  If you are creating a top-level `page` or `comment`,
this can be left blank. If you are creating a child page, this is where the parent page id goes.
If you are creating a child comment, this is where the parent comment id goes. Only one parent
content id can be specified.
     * @param body The body of the new content. Does not apply to attachments.
Only one body format should be specified as the property for
this object, e.g. `storage`.

Note, `editor2` format is used by Atlassian only. `anonymous_export_view` is
the same as `export_view` format but only content viewable by an anonymous
user is included.
     */
    @ApiStatus.Internal
    public ContentCreate(String id, String title, String type, Spacecc1E40 space, String status, Map<String, Object> container, List<Map<String, Object>> ancestors, Body5304Ad body) {
        this.id = id;
        this.title = title;
        this.type = type;
        this.space = space;
        this.status = status;
        this.container = container;
        this.ancestors = ancestors;
        this.body = body;
    }
}
