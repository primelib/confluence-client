// WARNING: This file was generated by PrimeCodeGen. DO NOT EDIT.

package io.github.primelib.confluence4j.rest.v1.models;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.util.function.Consumer;
import javax.annotation.processing.Generated;
import lombok.AccessLevel;
import lombok.EqualsAndHashCode;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import lombok.ToString;
import lombok.experimental.Accessors;
import org.jetbrains.annotations.ApiStatus;

/**
 * CopyPageRequest
 *
 */
@Getter
@Setter
@EqualsAndHashCode
@ToString
@Accessors(fluent = true, chain = true)
@NoArgsConstructor(access = AccessLevel.PROTECTED, force = true)
@JsonTypeName("CopyPageRequest")
@JsonPropertyOrder({
    "copyAttachments",
    "copyPermissions",
    "copyProperties",
    "copyLabels",
    "copyCustomContents",
    "destination",
    "pageTitle",
    "body"
})
@Generated(value = "io.github.primelib.primecodegen")
public class CopyPageRequest {

    /**
     * If set to `true`, attachments are copied to the destination page.
     */
    @JsonProperty("copyAttachments")
    protected Boolean copyAttachments;

    /**
     * If set to `true`, page permissions are copied to the destination page.
     */
    @JsonProperty("copyPermissions")
    protected Boolean copyPermissions;

    /**
     * If set to `true`, content properties are copied to the destination page.
     */
    @JsonProperty("copyProperties")
    protected Boolean copyProperties;

    /**
     * If set to `true`, labels are copied to the destination page.
     */
    @JsonProperty("copyLabels")
    protected Boolean copyLabels;

    /**
     * If set to `true`, custom contents are copied to the destination page.
     */
    @JsonProperty("copyCustomContents")
    protected Boolean copyCustomContents;

    /**
     * Defines where the page will be copied to, and can be one of the following types.

  - `parent_page`: page will be copied as a child of the specified parent page
  - `parent_content`: page will be copied as a child of the specified parent content
  - `space`: page will be copied to the specified space as a root page on the space
  - `existing_page`: page will be copied and replace the specified page
     */
    @JsonProperty("destination")
    protected CopyPageRequestDestination destination;

    /**
     * If defined, this will replace the title of the destination page.
     */
    @JsonProperty("pageTitle")
    protected String pageTitle;

    /**
     * If defined, this will replace the body of the destination page.
     */
    @JsonProperty("body")
    protected Bodyded886 body;

    /**
     * Constructs a validated instance of {@link CopyPageRequest}.
     *
     * @param spec the specification to process
     */
    public CopyPageRequest(Consumer<CopyPageRequest> spec) {
        super();
        spec.accept(this);
    }

    /**
     * Constructs a validated instance of {@link CopyPageRequest}.
     * <p>
     * NOTE: This constructor is not considered stable and may change if the model is updated. Consider using {@link #CopyPageRequest(Consumer)} instead.
     * @param copyAttachments If set to `true`, attachments are copied to the destination page.
     * @param copyPermissions If set to `true`, page permissions are copied to the destination page.
     * @param copyProperties If set to `true`, content properties are copied to the destination page.
     * @param copyLabels If set to `true`, labels are copied to the destination page.
     * @param copyCustomContents If set to `true`, custom contents are copied to the destination page.
     * @param destination Defines where the page will be copied to, and can be one of the following types.

  - `parent_page`: page will be copied as a child of the specified parent page
  - `parent_content`: page will be copied as a child of the specified parent content
  - `space`: page will be copied to the specified space as a root page on the space
  - `existing_page`: page will be copied and replace the specified page
     * @param pageTitle If defined, this will replace the title of the destination page.
     * @param body If defined, this will replace the body of the destination page.
     */
    @ApiStatus.Internal
    public CopyPageRequest(Boolean copyAttachments, Boolean copyPermissions, Boolean copyProperties, Boolean copyLabels, Boolean copyCustomContents, CopyPageRequestDestination destination, String pageTitle, Bodyded886 body) {
        this.copyAttachments = copyAttachments;
        this.copyPermissions = copyPermissions;
        this.copyProperties = copyProperties;
        this.copyLabels = copyLabels;
        this.copyCustomContents = copyCustomContents;
        this.destination = destination;
        this.pageTitle = pageTitle;
        this.body = body;
    }
}
