// WARNING: This file was generated by PrimeCodeGen. DO NOT EDIT.

package io.github.primelib.confluence4j.rest.v1.operations;

import io.github.primelib.confluence4j.rest.v1.models.CopyPageHierarchyRequest;
import java.util.Objects;
import java.util.function.Consumer;
import javax.annotation.processing.Generated;
import lombok.EqualsAndHashCode;
import lombok.Getter;
import lombok.Setter;
import lombok.ToString;
import lombok.experimental.Accessors;
import org.jetbrains.annotations.ApiStatus;
import org.jspecify.annotations.NonNull;

/**
 * PostContentByIDPagehierarchyCopyV1
 * <p>
 * Copy page hierarchy allows the copying of an entire hierarchy of pages and their associated properties, permissions and attachments.
 *  The id path parameter refers to the content id of the page to copy, and the new parent of this copied page is defined using the destinationPageId in the request body.
 *  The titleOptions object defines the rules of renaming page titles during the copy;
 *  for example, search and replace can be used in conjunction to rewrite the copied page titles.
 * 
 *  Response example:
 *  &lt;pre&gt;&lt;code&gt;
 *  {
 *       "id" : "1180606",
 *       "links" : {
 *            "status" : "/rest/api/longtask/1180606"
 *       }
 *  }
 *  &lt;/code&gt;&lt;/pre&gt;
 *  Use the /longtask/&lt;taskId&gt; REST API to get the copy task status.
 *
 */
@Getter
@Setter
@EqualsAndHashCode
@ToString
@Accessors(fluent = true, chain = true)
@Generated(value = "io.github.primelib.primecodegen")
public class PostContentByIDPagehierarchyCopyV1OperationSpec {
    /**
     * allows to disable validation of the spec, use with care!
     */
    @ApiStatus.Experimental
    public static Boolean VALIDATION_ENABLED = true;

    /**
     * id
     *
     */
    @NonNull
    private String id;

    /**
     * Request object from json post body
     *
     */
    @NonNull
    private CopyPageHierarchyRequest payload;

    /**
     * Constructs a validated instance of {@link PostContentByIDPagehierarchyCopyV1OperationSpec}.
     *
     * @param spec the specification to process
     */
    @ApiStatus.Internal
    public PostContentByIDPagehierarchyCopyV1OperationSpec(Consumer<PostContentByIDPagehierarchyCopyV1OperationSpec> spec) {
        spec.accept(this);
        if (VALIDATION_ENABLED)
            validate();
    }

    /**
     * Validates the Spec, will throw a exception if required parameters are missing
     *
     * @throws NullPointerException
     */
    public void validate() {
        Objects.requireNonNull(id, "id is a required parameter!");
        Objects.requireNonNull(payload, "payload is a required parameter!");
    }
}
