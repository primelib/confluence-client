// WARNING: This file was generated by PrimeCodeGen. DO NOT EDIT.

package io.github.primelib.confluence4j.rest.v1.client;

import feign.Headers;
import feign.Param;
import feign.RequestLine;
import io.github.primelib.confluence4j.rest.v1.models.SpaceWatchArray;
import io.github.primelib.confluence4j.rest.v1.models.UserWatch;
import io.github.primelib.confluence4j.rest.v1.models.WatchArray;
import javax.annotation.processing.Generated;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;

/**
 * ConfluenceRestClientContentWatchesApi
 */
@Generated(value = "io.github.primelib.primecodegen")
public interface ConfluenceRestClientContentWatchesApi {

    /**
    * GetContentByIDNotificationChildCreatedV1
    * Get watches for page
    * Returns the watches for a page. A user that watches a page will receive
    * receive notifications when the page is updated.
    * 
    * If you want to manage watches for a page, use the following `user` methods:
    * 
    * - [Get content watch status for user](#api-user-watch-content-contentId-get)
    * - [Add content watch](#api-user-watch-content-contentId-post)
    * - [Remove content watch](#api-user-watch-content-contentId-delete)
    * 
    * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
    * Permission to access the Confluence site ('Can use' global permission).
    *
    * @param id The ID of the content to be queried for its watches.
    * @param start The starting index of the returned watches.
    * @param limit The maximum number of watches to return per page.
    * Note, this may be restricted by fixed system limits.
    */
    @RequestLine("GET /rest/api/content/{id}/notification/child-created?start={start}&limit={limit}")
    @Headers({
        "Accept: application/json"
    })
    WatchArray GetContentByIDNotificationChildCreatedV1(
            @NotNull @Param("id") String id,
            @Nullable @Param("start") Integer start,
            @Nullable @Param("limit") Integer limit
    );

    /**
    * GetContentByIDNotificationCreatedV1
    * Get watches for space
    * Returns all space watches for the space that the content is in. A user that
    * watches a space will receive receive notifications when any content in the
    * space is updated.
    * 
    * If you want to manage watches for a space, use the following `user` methods:
    * 
    * - [Get space watch status for user](#api-user-watch-space-spaceKey-get)
    * - [Add space watch](#api-user-watch-space-spaceKey-post)
    * - [Remove space watch](#api-user-watch-space-spaceKey-delete)
    * 
    * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
    * Permission to access the Confluence site ('Can use' global permission).
    *
    * @param id The ID of the content to be queried for its watches.
    * @param start The starting index of the returned watches.
    * @param limit The maximum number of watches to return per page.
    * Note, this may be restricted by fixed system limits.
    */
    @RequestLine("GET /rest/api/content/{id}/notification/created?start={start}&limit={limit}")
    @Headers({
        "Accept: application/json"
    })
    SpaceWatchArray GetContentByIDNotificationCreatedV1(
            @NotNull @Param("id") String id,
            @Nullable @Param("start") Integer start,
            @Nullable @Param("limit") Integer limit
    );

    /**
    * GetSpaceBySpaceKeyWatchV1
    * Get space watchers
    * Returns a list of watchers of a space
    *
    * @param spaceKey The key of the space to get watchers.
    * @param start The start point of the collection to return.
    * @param limit The limit of the number of items to return, this may be restricted by fixed system limits.
    */
    @RequestLine("GET /rest/api/space/{spaceKey}/watch?start={start}&limit={limit}")
    @Headers({
        "Accept: application/json"
    })
    SpaceWatchArray GetSpaceBySpaceKeyWatchV1(
            @NotNull @Param("spaceKey") String spaceKey,
            @Nullable @Param("start") String start,
            @Nullable @Param("limit") String limit
    );

    /**
    * GetUserWatchContentByContentIDV1
    * Get content watch status
    * Returns whether a user is watching a piece of content. Choose the user by
    * doing one of the following:
    * 
    * - Specify a user via a query parameter: Use the `accountId` to identify the user.
    * - Do not specify a user: The currently logged-in user will be used.
    * 
    * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
    * 'Confluence Administrator' global permission if specifying a user, otherwise
    * permission to access the Confluence site ('Can use' global permission).
    *
    * @param contentId The ID of the content to be queried for whether the specified user is
    * watching it.
    * @param key This parameter is no longer available and will be removed from the documentation soon.
    * Use `accountId` instead.
    * See the [deprecation notice](/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/) for details.
    * @param username This parameter is no longer available and will be removed from the documentation soon.
    * Use `accountId` instead.
    * See the [deprecation notice](/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/) for details.
    * @param accountId The account ID of the user. The accountId uniquely identifies the user across all Atlassian products.
    * For example, `384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192`.
    */
    @RequestLine("GET /rest/api/user/watch/content/{contentId}?key={key}&username={username}&accountId={accountId}")
    @Headers({
        "Accept: application/json"
    })
    UserWatch GetUserWatchContentByContentIDV1(
            @NotNull @Param("contentId") String contentId,
            @Nullable @Param("key") String key,
            @Nullable @Param("username") String username,
            @Nullable @Param("accountId") String accountId
    );

    /**
    * PostUserWatchContentByContentIDV1
    * Add content watcher
    * Adds a user as a watcher to a piece of content. Choose the user by doing
    * one of the following:
    * 
    * - Specify a user via a query parameter: Use the `accountId` to identify the user.
    * - Do not specify a user: The currently logged-in user will be used.
    * 
    * Note, you must add the `X-Atlassian-Token: no-check` header when making a
    * request, as this operation has XSRF protection.
    * 
    * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
    * 'Confluence Administrator' global permission if specifying a user, otherwise
    * permission to access the Confluence site ('Can use' global permission).
    *
    * @param contentId The ID of the content to add the watcher to.
    * @param key This parameter is no longer available and will be removed from the documentation soon.
    * Use `accountId` instead.
    * See the [deprecation notice](/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/) for details.
    * @param username This parameter is no longer available and will be removed from the documentation soon.
    * Use `accountId` instead.
    * See the [deprecation notice](/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/) for details.
    * @param accountId The account ID of the user. The accountId uniquely identifies the user across all Atlassian products.
    * For example, `384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192`.
    */
    @RequestLine("POST /rest/api/user/watch/content/{contentId}?key={key}&username={username}&accountId={accountId}")
    void PostUserWatchContentByContentIDV1(
            @NotNull @Param("contentId") String contentId,
            @Nullable @Param("key") String key,
            @Nullable @Param("username") String username,
            @Nullable @Param("accountId") String accountId
    );

    /**
    * DeleteUserWatchContentByContentIDV1
    * Remove content watcher
    * Removes a user as a watcher from a piece of content. Choose the user by
    * doing one of the following:
    * 
    * - Specify a user via a query parameter: Use the `accountId` to identify the user.
    * - Do not specify a user: The currently logged-in user will be used.
    * 
    * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
    * 'Confluence Administrator' global permission if specifying a user, otherwise
    * permission to access the Confluence site ('Can use' global permission).
    *
    * @param xAtlassianToken Note, you must add header when making a
    * request, as this operation has XSRF protection.
    * @param contentId The ID of the content to remove the watcher from.
    * @param key This parameter is no longer available and will be removed from the documentation soon.
    * Use `accountId` instead.
    * See the [deprecation notice](/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/) for details.
    * @param username This parameter is no longer available and will be removed from the documentation soon.
    * Use `accountId` instead.
    * See the [deprecation notice](/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/) for details.
    * @param accountId The account ID of the user. The accountId uniquely identifies the user across all Atlassian products.
    * For example, `384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192`.
    */
    @RequestLine("DELETE /rest/api/user/watch/content/{contentId}?key={key}&username={username}&accountId={accountId}")
    @Headers({
        "X-Atlassian-Token: {xAtlassianToken}"
    })
    void DeleteUserWatchContentByContentIDV1(
            @NotNull @Param("xAtlassianToken") String xAtlassianToken,
            @NotNull @Param("contentId") String contentId,
            @Nullable @Param("key") String key,
            @Nullable @Param("username") String username,
            @Nullable @Param("accountId") String accountId
    );

    /**
    * GetUserWatchLabelByLabelNameV1
    * Get label watch status
    * Returns whether a user is watching a label. Choose the user by doing one
    * of the following:
    * 
    * - Specify a user via a query parameter: Use the `accountId` to identify the user.
    * - Do not specify a user: The currently logged-in user will be used.
    * 
    * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
    * 'Confluence Administrator' global permission if specifying a user, otherwise
    * permission to access the Confluence site ('Can use' global permission).
    *
    * @param labelName The name of the label to be queried for whether the specified user is
    * watching it.
    * @param key This parameter is no longer available and will be removed from the documentation soon.
    * Use `accountId` instead.
    * See the [deprecation notice](/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/) for details.
    * @param username This parameter is no longer available and will be removed from the documentation soon.
    * Use `accountId` instead.
    * See the [deprecation notice](/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/) for details.
    * @param accountId The account ID of the user. The accountId uniquely identifies the user across all Atlassian products.
    * For example, `384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192`.
    */
    @RequestLine("GET /rest/api/user/watch/label/{labelName}?key={key}&username={username}&accountId={accountId}")
    @Headers({
        "Accept: application/json"
    })
    UserWatch GetUserWatchLabelByLabelNameV1(
            @NotNull @Param("labelName") String labelName,
            @Nullable @Param("key") String key,
            @Nullable @Param("username") String username,
            @Nullable @Param("accountId") String accountId
    );

    /**
    * PostUserWatchLabelByLabelNameV1
    * Add label watcher
    * Adds a user as a watcher to a label. Choose the user by doing one of the
    * following:
    * 
    * - Specify a user via a query parameter: Use the `accountId` to identify the user.
    * - Do not specify a user: The currently logged-in user will be used.
    * 
    * Note, you must add the `X-Atlassian-Token: no-check` header when making a
    * request, as this operation has XSRF protection.
    * 
    * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
    * 'Confluence Administrator' global permission if specifying a user, otherwise
    * permission to access the Confluence site ('Can use' global permission).
    *
    * @param xAtlassianToken Note, you must add header when making a
    * request, as this operation has XSRF protection.
    * @param labelName The name of the label to add the watcher to.
    * @param key This parameter is no longer available and will be removed from the documentation soon.
    * Use `accountId` instead.
    * See the [deprecation notice](/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/) for details.
    * @param username This parameter is no longer available and will be removed from the documentation soon.
    * Use `accountId` instead.
    * See the [deprecation notice](/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/) for details.
    * @param accountId The account ID of the user. The accountId uniquely identifies the user across all Atlassian products.
    * For example, `384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192`.
    */
    @RequestLine("POST /rest/api/user/watch/label/{labelName}?key={key}&username={username}&accountId={accountId}")
    @Headers({
        "X-Atlassian-Token: {xAtlassianToken}"
    })
    void PostUserWatchLabelByLabelNameV1(
            @NotNull @Param("xAtlassianToken") String xAtlassianToken,
            @NotNull @Param("labelName") String labelName,
            @Nullable @Param("key") String key,
            @Nullable @Param("username") String username,
            @Nullable @Param("accountId") String accountId
    );

    /**
    * DeleteUserWatchLabelByLabelNameV1
    * Remove label watcher
    * Removes a user as a watcher from a label. Choose the user by doing one of
    * the following:
    * 
    * - Specify a user via a query parameter: Use the `accountId` to identify the user.
    * - Do not specify a user: The currently logged-in user will be used.
    * 
    * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
    * 'Confluence Administrator' global permission if specifying a user, otherwise
    * permission to access the Confluence site ('Can use' global permission).
    *
    * @param labelName The name of the label to remove the watcher from.
    * @param key This parameter is no longer available and will be removed from the documentation soon.
    * Use `accountId` instead.
    * See the [deprecation notice](/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/) for details.
    * @param username This parameter is no longer available and will be removed from the documentation soon.
    * Use `accountId` instead.
    * See the [deprecation notice](/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/) for details.
    * @param accountId The account ID of the user. The accountId uniquely identifies the user across all Atlassian products.
    * For example, `384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192`.
    */
    @RequestLine("DELETE /rest/api/user/watch/label/{labelName}?key={key}&username={username}&accountId={accountId}")
    void DeleteUserWatchLabelByLabelNameV1(
            @NotNull @Param("labelName") String labelName,
            @Nullable @Param("key") String key,
            @Nullable @Param("username") String username,
            @Nullable @Param("accountId") String accountId
    );

    /**
    * GetUserWatchSpaceBySpaceKeyV1
    * Get space watch status
    * Returns whether a user is watching a space. Choose the user by
    * doing one of the following:
    * 
    * - Specify a user via a query parameter: Use the `accountId` to identify the user.
    * - Do not specify a user: The currently logged-in user will be used.
    * 
    * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
    * 'Confluence Administrator' global permission if specifying a user, otherwise
    * permission to access the Confluence site ('Can use' global permission).
    *
    * @param spaceKey The key of the space to be queried for whether the specified user is
    * watching it.
    * @param key This parameter is no longer available and will be removed from the documentation soon.
    * Use `accountId` instead.
    * See the [deprecation notice](/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/) for details.
    * @param username This parameter is no longer available and will be removed from the documentation soon.
    * Use `accountId` instead.
    * See the [deprecation notice](/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/) for details.
    * @param accountId The account ID of the user. The accountId uniquely identifies the user across all Atlassian products.
    * For example, `384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192`.
    */
    @RequestLine("GET /rest/api/user/watch/space/{spaceKey}?key={key}&username={username}&accountId={accountId}")
    @Headers({
        "Accept: application/json"
    })
    UserWatch GetUserWatchSpaceBySpaceKeyV1(
            @NotNull @Param("spaceKey") String spaceKey,
            @Nullable @Param("key") String key,
            @Nullable @Param("username") String username,
            @Nullable @Param("accountId") String accountId
    );

    /**
    * PostUserWatchSpaceBySpaceKeyV1
    * Add space watcher
    * Adds a user as a watcher to a space. Choose the user by doing one of the
    * following:
    * 
    * - Specify a user via a query parameter: Use the `accountId` to identify the user.
    * - Do not specify a user: The currently logged-in user will be used.
    * 
    * Note, you must add the `X-Atlassian-Token: no-check` header when making a
    * request, as this operation has XSRF protection.
    * 
    * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
    * 'Confluence Administrator' global permission if specifying a user, otherwise
    * permission to access the Confluence site ('Can use' global permission).
    *
    * @param xAtlassianToken Note, you must add header when making a
    * request, as this operation has XSRF protection.
    * @param spaceKey The key of the space to add the watcher to.
    * @param key This parameter is no longer available and will be removed from the documentation soon.
    * Use `accountId` instead.
    * See the [deprecation notice](/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/) for details.
    * @param username This parameter is no longer available and will be removed from the documentation soon.
    * Use `accountId` instead.
    * See the [deprecation notice](/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/) for details.
    * @param accountId The account ID of the user. The accountId uniquely identifies the user across all Atlassian products.
    * For example, `384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192`.
    */
    @RequestLine("POST /rest/api/user/watch/space/{spaceKey}?key={key}&username={username}&accountId={accountId}")
    @Headers({
        "X-Atlassian-Token: {xAtlassianToken}"
    })
    void PostUserWatchSpaceBySpaceKeyV1(
            @NotNull @Param("xAtlassianToken") String xAtlassianToken,
            @NotNull @Param("spaceKey") String spaceKey,
            @Nullable @Param("key") String key,
            @Nullable @Param("username") String username,
            @Nullable @Param("accountId") String accountId
    );

    /**
    * DeleteUserWatchSpaceBySpaceKeyV1
    * Remove space watch
    * Removes a user as a watcher from a space. Choose the user by doing one of
    * the following:
    * 
    * - Specify a user via a query parameter: Use the `accountId` to identify the user.
    * - Do not specify a user: The currently logged-in user will be used.
    * 
    * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
    * 'Confluence Administrator' global permission if specifying a user, otherwise
    * permission to access the Confluence site ('Can use' global permission).
    *
    * @param spaceKey The key of the space to remove the watcher from.
    * @param key This parameter is no longer available and will be removed from the documentation soon.
    * Use `accountId` instead.
    * See the [deprecation notice](/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/) for details.
    * @param username This parameter is no longer available and will be removed from the documentation soon.
    * Use `accountId` instead.
    * See the [deprecation notice](/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/) for details.
    * @param accountId The account ID of the user. The accountId uniquely identifies the user across all Atlassian products.
    * For example, `384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192`.
    */
    @RequestLine("DELETE /rest/api/user/watch/space/{spaceKey}?key={key}&username={username}&accountId={accountId}")
    void DeleteUserWatchSpaceBySpaceKeyV1(
            @NotNull @Param("spaceKey") String spaceKey,
            @Nullable @Param("key") String key,
            @Nullable @Param("username") String username,
            @Nullable @Param("accountId") String accountId
    );

}
