// WARNING: This file was generated by PrimeCodeGen. DO NOT EDIT.

package io.github.primelib.confluence4j.rest.v1.operations;

import java.util.Objects;
import java.util.function.Consumer;
import javax.annotation.processing.Generated;
import lombok.EqualsAndHashCode;
import lombok.Getter;
import lombok.Setter;
import lombok.ToString;
import lombok.experimental.Accessors;
import org.jetbrains.annotations.ApiStatus;
import org.jspecify.annotations.NonNull;

/**
 * GetContentByIDRestrictionByOperationByOperationKeyByGroupIDByGroupIDV1
 * <p>
 * Returns whether the specified content restriction applies to a group.
 * For example, if a page with `id=123` has a `read` restriction for the `123456` group id,
 * the following request will return `true`:
 * 
 * `/wiki/rest/api/content/123/restriction/byOperation/read/byGroupId/123456`
 * 
 * Note that a response of `true` does not guarantee that the group can view the page, as it does not account for
 * account-inherited restrictions, space permissions, or even product access. For more
 * information, see [Confluence permissions](https://confluence.atlassian.com/x/_AozKw).
 * 
 * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
 * Permission to view the content.
 *
 */
@Getter
@Setter
@EqualsAndHashCode
@ToString
@Accessors(fluent = true, chain = true)
@Generated(value = "io.github.primelib.primecodegen")
public class GetContentByIDRestrictionByOperationByOperationKeyByGroupIDByGroupIDV1OperationSpec {
    /**
     * allows to disable validation of the spec, use with care!
     */
    @ApiStatus.Experimental
    public static Boolean VALIDATION_ENABLED = true;

    /**
     * The ID of the content that the restriction applies to.
     *
     */
    @NonNull
    private String id;

    /**
     * The operation that the restriction applies to.
     *
     */
    @NonNull
    private String operationKey;

    /**
     * The id of the group to be queried for whether the content restriction
     * applies to it.
     *
     */
    @NonNull
    private String groupId;

    /**
     * Constructs a validated instance of {@link GetContentByIDRestrictionByOperationByOperationKeyByGroupIDByGroupIDV1OperationSpec}.
     *
     * @param spec the specification to process
     */
    @ApiStatus.Internal
    public GetContentByIDRestrictionByOperationByOperationKeyByGroupIDByGroupIDV1OperationSpec(Consumer<GetContentByIDRestrictionByOperationByOperationKeyByGroupIDByGroupIDV1OperationSpec> spec) {
        spec.accept(this);
        if (VALIDATION_ENABLED)
            validate();
    }

    /**
     * Validates the Spec, will throw a exception if required parameters are missing
     *
     * @throws NullPointerException
     */
    public void validate() {
        Objects.requireNonNull(id, "id is a required parameter!");
        Objects.requireNonNull(operationKey, "operationKey is a required parameter!");
        Objects.requireNonNull(groupId, "groupId is a required parameter!");
    }
}
