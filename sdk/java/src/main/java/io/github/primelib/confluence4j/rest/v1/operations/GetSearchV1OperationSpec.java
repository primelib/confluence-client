// WARNING: This file was generated by PrimeCodeGen. DO NOT EDIT.

package io.github.primelib.confluence4j.rest.v1.operations;

import java.util.List;
import java.util.Objects;
import java.util.function.Consumer;
import javax.annotation.processing.Generated;
import lombok.EqualsAndHashCode;
import lombok.Getter;
import lombok.Setter;
import lombok.ToString;
import lombok.experimental.Accessors;
import org.jetbrains.annotations.ApiStatus;
import org.jspecify.annotations.NonNull;
import org.jspecify.annotations.Nullable;

/**
 * GetSearchV1
 * <p>
 * Searches for content using the
 * [Confluence Query Language (CQL)](https://developer.atlassian.com/cloud/confluence/advanced-searching-using-cql/).
 * 
 * **Note that CQL input queries submitted through the `/wiki/rest/api/search` endpoint no longer support user-specific fields like `user`, `user.fullname`, `user.accountid`, and `user.userkey`.** 
 * See this [deprecation notice](https://developer.atlassian.com/cloud/confluence/deprecation-notice-search-api/) for more details.
 * 
 * Example initial call:
 * ```
 * /wiki/rest/api/search?cql=type=page&amp;limit=25
 * ```
 * 
 * Example response:
 * ```
 * {
 *   "results": [
 *     { ... },
 *     { ... },
 *     ...
 *     { ... }
 *   ],
 *   "limit": 25,
 *   "size": 25,
 *   ...
 *   "_links": {
 *     "base": "&lt;url&gt;",
 *     "context": "&lt;url&gt;",
 *     "next": "/rest/api/search?cql=type=page&amp;limit=25&amp;cursor=raNDoMsTRiNg",
 *     "self": "&lt;url&gt;"
 *   }
 * }
 * ```
 * 
 * When additional results are available, returns `next` and `prev` URLs to retrieve them in subsequent calls. The URLs each contain a cursor that points to the appropriate set of results. Use `limit` to specify the number of results returned in each call.
 * 
 * Example subsequent call (taken from example response):
 * ```
 * /wiki/rest/api/search?cql=type=page&amp;limit=25&amp;cursor=raNDoMsTRiNg
 * ```
 * The response to this will have a `prev` URL similar to the `next` in the example response.
 * 
 * If the expand query parameter is used with the `body.export_view` and/or `body.styled_view` properties, then the query limit parameter will be restricted to a maximum value of 25.
 * 
 * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
 * Permission to view the entities. Note, only entities that the user has
 * permission to view will be returned.
 *
 */
@Getter
@Setter
@EqualsAndHashCode
@ToString
@Accessors(fluent = true, chain = true)
@Generated(value = "io.github.primelib.primecodegen")
public class GetSearchV1OperationSpec {
    /**
     * allows to disable validation of the spec, use with care!
     */
    @ApiStatus.Experimental
    public static Boolean VALIDATION_ENABLED = true;

    /**
     * The CQL query to be used for the search. See
     * [Advanced Searching using CQL](https://developer.atlassian.com/cloud/confluence/advanced-searching-using-cql/)
     * for instructions on how to build a CQL query.
     *
     */
    @NonNull
    private String cql;

    /**
     * The space, content, and content status to execute the search
     * against.
     * 
     * - `spaceKey` Key of the space to search against. Optional.
     * - `contentId` ID of the content to search against. Optional. Must be
     * in the space specified by `spaceKey`.
     * - `contentStatuses` Content statuses to search against. Optional.
     * 
     * Specify these values in an object. For example,
     * `cqlcontext={%22spaceKey%22:%22TEST%22, %22contentId%22:%22123%22}`
     *
     */
    @Nullable
    private String cqlcontext;

    /**
     * Pointer to a set of search results, returned as part of the `next` or `prev` URL from the previous search call.
     *
     */
    @Nullable
    private String cursor;

    /**
     * next
     *
     */
    @Nullable
    private Boolean next;

    /**
     * prev
     *
     */
    @Nullable
    private Boolean prev;

    /**
     * The maximum number of content objects to return per page.
     * Note, this may be restricted by fixed system limits.
     *
     */
    @Nullable
    private Integer limit;

    /**
     * The start point of the collection to return
     *
     */
    @Nullable
    private Integer start;

    /**
     * Whether to include content from archived spaces in the results.
     *
     */
    @Nullable
    private Boolean includeArchivedSpaces;

    /**
     * Whether to exclude current spaces and only show archived spaces.
     *
     */
    @Nullable
    private Boolean excludeCurrentSpaces;

    /**
     * The excerpt strategy to apply to the result
     *
     */
    @Nullable
    private String excerpt;

    /**
     * Filters users by permission type. Use `none` to default to licensed users, `externalCollaborator`
     * for external/guest users, and `all` to include all permission types.
     *
     */
    @Nullable
    private String sitePermissionTypeFilter;

    /**
     * expand
     *
     */
    @Nullable
    private List<String> expand;

    /**
     * Constructs a validated instance of {@link GetSearchV1OperationSpec}.
     *
     * @param spec the specification to process
     */
    @ApiStatus.Internal
    public GetSearchV1OperationSpec(Consumer<GetSearchV1OperationSpec> spec) {
        spec.accept(this);
        if (VALIDATION_ENABLED)
            validate();
    }

    /**
     * Validates the Spec, will throw a exception if required parameters are missing
     *
     * @throws NullPointerException
     */
    public void validate() {
        Objects.requireNonNull(cql, "cql is a required parameter!");
    }
}
