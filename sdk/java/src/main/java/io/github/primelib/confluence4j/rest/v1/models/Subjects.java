// WARNING: This file was generated by PrimeCodeGen. DO NOT EDIT.

package io.github.primelib.confluence4j.rest.v1.models;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.util.function.Consumer;
import javax.annotation.processing.Generated;
import lombok.AccessLevel;
import lombok.EqualsAndHashCode;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import lombok.ToString;
import lombok.experimental.Accessors;
import org.jetbrains.annotations.ApiStatus;

/**
 * Subjects
 * <p>
 * The users and/or groups that the permission applies to.
 *
 */
@Getter
@Setter
@EqualsAndHashCode
@ToString
@Accessors(fluent = true, chain = true)
@NoArgsConstructor(access = AccessLevel.PROTECTED, force = true)
@JsonTypeName("Subjects")
@JsonPropertyOrder({
    "user",
    "group",
    "Expandable"
})
@Generated(value = "io.github.primelib.primecodegen")
public class Subjects {

    @JsonProperty("user")
    protected Userb34Fc6 user;

    @JsonProperty("group")
    protected Group3997Ca group;

    @JsonProperty("_expandable")
    protected Expandableac2380 Expandable;

    /**
     * Constructs a validated instance of {@link Subjects}.
     *
     * @param spec the specification to process
     */
    public Subjects(Consumer<Subjects> spec) {
        super();
        spec.accept(this);
    }

    /**
     * Constructs a validated instance of {@link Subjects}.
     * <p>
     * NOTE: This constructor is not considered stable and may change if the model is updated. Consider using {@link #Subjects(Consumer)} instead.
     * @param user user
     * @param group group
     * @param Expandable Expandable
     */
    @ApiStatus.Internal
    public Subjects(Userb34Fc6 user, Group3997Ca group, Expandableac2380 Expandable) {
        this.user = user;
        this.group = group;
        this.Expandable = Expandable;
    }
}
